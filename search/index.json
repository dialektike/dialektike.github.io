[{"content":"취미로 프로그래밍과 데이터 분석을 합니다.\n본업은 인식론과 논리학을 공부하는 사람입니다.\n최근에는 컴퓨터 자체에 관심이 많습니다.\n","href":"/about/","title":"About"},{"content":"1983년 펩시콜라 부사장 존 스컬리를 만나 스타우트를 제의하는 자리에서: \u0026ldquo;남은 인생 설탕물을 팔면서 보낼 건가, 아니면 세상을 바꿔놓을 기회를 갖고 싶은가.”\n1985년 플레이보이: “돈 같은 일에 대한 내 생각은 매우 웃긴다는 것이다. 모든 관심이 거기에 집중돼 있다. 하지만 돈은 나에게 일어날 수 있는 모든 일 중에서 가장 통찰력 있는 일도 아니고 가치 있는 일도 아니다.”\n1993년 월스트리트 저널: “무덤에서 가장 부자가 되는 일 따위는 중요하지 않다. 매일 밤 자기 전 우리는 정말 놀란 만한 일을 했다고 말하는 것이 내게 중요하다.”\n1996년 와이어드: “무엇인가를 완벽히 이해하려면, 천천히 씹어 삼키기 위해선 열정적인 헌신이 필요하다. 하지만 대부분의 사람은 그런 일을 하지 않는다.”\n1996년 와이어드: “창조성이란 단지 사물을 연결하는 것이다. 창조적인 사람들에게 어떻게 그런 일을 할 수 있었는지 묻는다면 그들은 약간 죄책감을 느낄 것이다. 왜냐하면 그들은 진정 창조적인 일을 한 것이 아니라 단지 무엇인가를 봤을 뿐이기 때문이다.”\n1997년 애플에 임시 CEO로 복귀하면서: “다르게 생각하라(Think different)”\n1998년 비즈니스위크: “단순함은 복잡함보다 더 어렵다. 생각을 명확히 하고 단순하게 만들려면 열심히 노력해야 한다. 생각을 단순하게 만들 수 있는 단계에 도달하면 산도 움직일 수 있다.”\n1998년 포천지: “혁신은 연구개발비 규모와 무관하다. 혁신은 당신과 함께하는 사람들로부터 얼마나 많은 것을 이끌어 낼 수 있는지와 관계가 있다.”\n출처 미상: “어떤 제품을 원하는지 묻지마라. 어떤 제품을 원할지는 소비자들도 모른다.”\n","href":"/jobs_word/","title":"Jobs's word"},{"content":"이 글은 논리학을 처음 배우고자 하시는 분들을 위해서 쓴 글입니다. 논리학을 잘하시거나 공부를 많이 하신 분들께서 읽으시면, 별 도움이 되지 않을 것 같네요.\n논리학에 대하여 처음 접하시거나, 관심이 있으신 분들이 논리학을 공부하려면, 어떤 책을 읽으면서 공부를 시작하면 좋을까 고민하게 됩니다. 제가 읽고 공부하면서 느낀 경험을 토대로 읽어볼만한 논리학 책을 소개해보겠습니다. 당연히 제가 읽은 것을 중심으로 쓰겠습니다. 더 좋은 책이 있으면, 댓들을 달아주세요! 그리고 번역서보다는 한국 저자들이 쓴 책을 중심으로 소개하겠습니다.\n우선 논리학을 공부하시려면, 책은 한 권 정도 사시는 편이 좋습니다. 다음에서 소개하는 책들은 대학 논리학 교과서를 염두에 놓고 만든 책들이기 때문에 대학생들이 보시기에 적당합니다. 여기서 앞의 두 책은 우리 나라에서 쓴 것이라 한국의 현실에 맞게 논리학을 설명하고 있어 쉽게 읽어내려 갑니다. 물론 세번째 책인 논리학 입문 또한 변면역 책이기는 하지만, 매끄럽게 잘 번역이 되어있습니다. 논리학을 공부하시거나 수업을 들으실 예정이면, 교재는 한권 정도 구입하시는 것이 좋습니다. 왜냐하면 논리학 개념이나 원리가 잘 생각나지 않을 때, 찾아 볼 수 있기 때문입니다.\n논리와 사고, 이화여자대학교 출판부 소홍렬 선생님께서 본인이 하시던 수업 강의록을 토대로 만들어, 내용이 알차고, 설명이 잘되어 있습니다.\n논리교실 필로지아, 오란디프 한국에서 논리학 강의를 하시던 선생님들께서 모여 만드신 책입니다. 정리가 잘 되어 있으며, 연습 문제도 재미있게 구성되어 있고, CD 롬을 통한 컴퓨터로도 공부할 수 있게 만들어 놓았습니다. 그러나 시중에서 구하기 쉽지 않습니다. www.orandif.com 에서 온라인 주문을 하던지 아니면, 학기 초에 단체 주문을 할때, 신청을 해서 구입하시를 바랍니다.\n논리학 입문, 제 10판 미국에서 지금까지 11판까지 나온 베스트셀러 책을 번역한 것이라 내용이 좋을 뿐만 아니라 번역도 매끄럽게 잘 되어있지만, 좀 분량이 많고, 원래 원본에 있는 15-16장이 빠져 있어 아쉽군요!\n논리와 비판적 사고 (쇄신판) 최근에 논리와 비판적 사고 과목에서 쓸만한 책중에 김광수 선생님이 쓰신 책을 강추합니다. 원래 좋은 책이었는데 새로 책을 개정해서 내용이 더 더 좋아졌습니다.\n비판적 사고를 위한 논리, 김희정 박은진, 아카넷, 2008년 06월 앞의 김광순 선생님의 책만큼 좋은 책입니다. 내용이 풍부하고 다양한 분야를 다루고 있습니다. 그런데 이 책을 보실 때에는 신경써야 할 점이 있습니다. 지금 학교에 있는 책도 1판 2판이 있는데 2판을 보셔야 됩니다. 1판은 오타가 좀 많습니다. 문제 풀이에서 들린 것도 많더군요. 2판이 나와서 어느 정도 보완되기는 했습니다. 그래서 올해 전면 개정판이 나왔습니다. 제가 위에 연도를 제시한 이유가 이런 것 때문입니다. 책을 확인하고 보시는 편이 좋습니다. 참고로 학교에는 아직 없어 신청해 놓았습니다.\n비판적 사고, 논리를 잡아라 : 논술의 기본 가이드 / 트레이시 보웰, 게리 캠프 [공] 지음 ; 하상용, 한성일[공] 옮김 이 책은 번역서지만 내용이 조금더 진보한 듯한 인상을 줍니다. 설명도 상당히 친절하고 좋습니다. 예전에 내용도 이해가 안 될만큼 이상한 번역서가 아닙니다. 상당한 내공을 가지신 분들이 번역을 해서 번역서라는 느낌을 받지 않고 읽었던 기억이 납니다. 그래도 번역이라서 가끔 읽는데 신경이 쓰이는 문장이 있다는 점이 옥에 티이지만 누가 번역을 하더라도 당연히 이런 점은 발생하기 때문에 그리 문제가 문제가 되지 않고 읽는데 불편이 전혀 없습니다.\n주의! : 이 글은 아직 완성이 되지 않았습니다. 일부 내용이 변경, 확장, 삭제될 수 있습니다.\n","href":"/intro_logic_books/","title":"논리학 교재"},{"content":"이 프로젝트는 “서양철학사(Geschichte der Philosophie), 요하네스 힐쉬베르거(Johannes Hirschberger) 지음 , 강성위 옮김”을 요약 정리하기 위해 시작한 것입니다. 항상 잘 읽고 있으면서 언젠가 전체를 요약을 해보자 하고 미루고 있다가 이제서야 시작해봅니다. 워낙 위의 책은 번역이 좋아서 읽는데 큰 불편은 없지만, 요즘 학생들이 읽기는 쉽지 않습니다. 이런 생각을 하던 중 후배들이 같이 읽어보자고 의기투합했고 읽으면서 혼자 읽는 다른 학생들에게 조금이라고 도움을 주고자 가이드북과 같이 요약문을 만들어보자고 시작했습니다. 시작은 했으나 철학사를 끝까지 읽고 요약문을 다 끝낼 수 있을지 걱정입니다. 본 프로젝트에 대한 질문은 아래에 코멘트를 달아주시면 됩니다.이 프로젝트에 대해서 더 알고 싶으신 분은 아래 내용을 참고하세요!\n스터디 정보 스티디 대략적인 정보는 아래 스터디 게시판에서 얻을 수 있습니다.\nhttp://www.philosopher.co.kr/lopes\n일정표 다음은 이 스터디 일정표 입니다. 참고로 과거 일정을 올라오지 않고 지금부터 해야 할 일정만 올라옵니다.\n스터디 진행상황 2012년 9월 1일: 인원 충원(신준영) 2012년 여름방학: 인원 충원(정재은) 2012년 3월 1일: 인원 충원(강범규, 손은정, 이윤영) 2012년 3월 1일: 인원 감소(이경수(아르바이트), 최민규) 2011년 7월 1일: 인원 충원(김민구, 이경수, 최민규, 최창묵) 2011년 3월 1일: 인원 충원(김태은) 2011년 3월 1일: 인원 감소(최지영: 집안 문제로) 2011년 1월 1일: 인원 충원(맹주영:군 제대) 2010년 11월 2일: 인원 충원(최지영) 2010년 9월 1일: 인원 감소(곽기영) 2010년 3월 1일: 인원 충원(곽기영: 복학!!, 한수진) 2010년 3월 1일: 인원 감소(박성준:학원 문제, 김동욱: 개인적 문제, 김현우: 입대하기 위하여 휴학 2010년 5월 11일) 2010년 1월15일: 인원 충원(김동욱) 2010년 1월 4일: 철학사 프로젝트 season 3 시작 스터디 인원(이임진, 박성준, 김현우) 2009년 12월 31일: 철학사 프로젝트 season 2 종료 2009년 9월 1일: 스터디 인원 감소(박종경: 취업문제, 김동욱: 학회문제) 2009년 7월 4일: 다시 스터디 시작 2009년 4월 ?~ 2009년 7월: 팀원 사정으로 잠시 중단 2009년 3월30일?: 스터디 인원 충원 (김동욱) 2009년 3월 7일: 스터디 인원 충원 (박종경) 2009년 3월 1일: 석사학위논문 작성으로 스터디 인원 감소 (서세영) 2009년 2월 2일: 군입대 문제로 스터디 인원 감소(맹주영: 2009년 2월 9일 군입대: 논산) 2009년 1월 13일: 스터디 인원 충원 (이진용, 서세영) 2008년 12월 1일: 철학사 프로젝트 season 2 시작 자세한 것은 아래 링크를 참고하세요! 철학사 하권 스터디 링크! 2008년 10월 7일: 철학사 프로젝트 season 1 종료 2007년 7월 17일: 철학사 스터디 시작 (인원: 정재환, 맹주영, 임동규) 자세한 것은 아래 링크 참고하세요. 철학사 프로젝트 season 1 서론: 일반적인 철학사의 본질과 가치 철학사란 일반적으로 철학자들의 생애, 저작 및 학설 등을 전하여 주는 것을 말하지만, 이러한 것을 잘 알려고 하면 우선 그 철학자가 살았던 시대의 사실적 흐름, 시대 현실 뿐만 아니라 그 학설이 생겨나게된 가장 기본적인 전제와 궁극적인 가정을 파악해야 한다. 이때 중요한 점은 주관적인 입장에서 바라보지 말고 실재로 있었고 말해졌고 생각되어졌던 것을 보려고 애써야 한다. 다시 말해 플라톤 속에서 신칸트의 철학을 읽거나 아리스토텔레스 속에서 스콜라 철학을 읽어내서는 안 된다. **“철학사란 진실을 위한 성실한 투쟁이다“**라고 할 수 있다. 물론 옳기만 한 것도 아니고 오류도 있을 수 있다. 그러나 “철학의 왕국에 있어서는 위대한 사람들의 사상들은 자기들보다 몇 세기 전에 살았던 철학자들의 사상들과 내용상으로 직접 잇닿아져 있다는 W.크라머의 말처럼 철학 문제는 낡아버리지 않는 시간을 벗어난 어떤 것이 있다. 물론 철학을 지식처럼 쌓아두기만 하면 이는 지식일 뿐 지혜가 아니다. 따라서 철학사를 정보로만 이용하지 말고 정신의 자기 성찰이라고 규정하면 진정한 철학이 우리 눈앞에 펼쳐질 것이다.\n","href":"/history_of_philosophy/","title":"철학사 스터디"},{"content":" adjacency matrix : 인접도 행렬. 참고: 인접 행렬 이라고도 합니다. affinity Matrix :유사도 행렬 binomial distribution: 이항분포 categorical data: 범주형 자료 central limit theorem: 중심극한정리 cumulative distribution function: 누적 분포 함수 conditional expected value: 조건부 기대값 discrete probability distributions: 이산 확률 분포 expected value: 기대값 frequency: 도수 Observed frequency: 관측 도수: 참고: ofs은 observed frequencies 의 약자로 많이 사용됩니다. Expected frequency: 기대 도수 goodness of fit test: 적합도 검증 independent variable: 독립 변수 참고: 이 독립변수는 예측 변수(predictor variable), 복귀자(regressor), 통제 변수(controlled variable), 조작 변수(manipulated variable), 노출 변수(exposure variable), 리스크 팩터(risk factor) 이라고 하기도 하고, 기계 학습 혹은 패턴 인식에서는 특징 (feature) 이라고도 한다. 그냥 단순히 입력 변수(input variable)이라고도 합니다. Numerical data: 수치적 자료 point setimation: 점 추정 population: 모집단 probability density function: 확률 밀도 함수 reject region: 기각역 sample: 표본 standard error : 표준 오차. 참고: 약자로 S.E. 쓰이기도 합니다. quantitative date: 양적 자료 ","href":"/%ED%86%B5%EA%B3%84%ED%95%99-%EB%B2%88%EC%97%AD/","title":"통계학 번역어"},{"content":"지금까지 올린 글 지금까지 올린 글들을 연도별로 정리했습니다.\n","href":"/archive/","title":"Archive"},{"content":"","href":"/authors/","title":"Authors"},{"content":"","href":"/categories/","title":"Categories"},{"content":"","href":"/tags/data-analysis/","title":"data analysis"},{"content":"","href":"/authors/dialektike/","title":"dialektike"},{"content":"","href":"/","title":"Epistemology"},{"content":"","href":"/tags/pandas/","title":"pandas"},{"content":"파이썬이 가지고 있는 기본 모듈로 csv파일을 저장할 수도 있지만, pandas을 이용하고 있는 경우에는 pandas을 사용하는 편이 훨씬 편합니다. 우선 pandas를 임포트하고 예제 자료를 만들어 봅시다.\nimport pandas as pd data = {\u0026#39;ID\u0026#39;: [\u0026#39;A1\u0026#39;, \u0026#39;A2\u0026#39;, \u0026#39;A3\u0026#39;, \u0026#39;A4\u0026#39;, \u0026#39;A5\u0026#39;],\u0026#39;X1\u0026#39;: [1, 2, 3, 4, 5], \u0026#39;X2\u0026#39;: [3.0, 4.5, 3.2, 4.0, 3.5]} data_df = pd.DataFrame(data, index=[\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;, \u0026#39;d\u0026#39;, \u0026#39;e\u0026#39;]) 실행 결과는 다음과 같습니다.\n\u0026gt;\u0026gt;\u0026gt; import pandas as pd \u0026gt;\u0026gt;\u0026gt; data = {\u0026#39;ID\u0026#39;: [\u0026#39;A1\u0026#39;, \u0026#39;A2\u0026#39;, \u0026#39;A3\u0026#39;, \u0026#39;A4\u0026#39;, \u0026#39;A5\u0026#39;],\u0026#39;X1\u0026#39;: [1, 2, 3, 4, 5], \u0026#39;X2\u0026#39;: [3.0, 4.5, 3.2, 4.0, 3.5]} \u0026gt;\u0026gt;\u0026gt; data {\u0026#39;ID\u0026#39;: [\u0026#39;A1\u0026#39;, \u0026#39;A2\u0026#39;, \u0026#39;A3\u0026#39;, \u0026#39;A4\u0026#39;, \u0026#39;A5\u0026#39;], \u0026#39;X1\u0026#39;: [1, 2, 3, 4, 5], \u0026#39;X2\u0026#39;: [3.0, 4.5, 3.2, 4.0, 3.5]} \u0026gt;\u0026gt;\u0026gt; data_df = pd.DataFrame(data, index=[\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;, \u0026#39;d\u0026#39;, \u0026#39;e\u0026#39;]) \u0026gt;\u0026gt;\u0026gt; data_df ID X1 X2 a A1 1 3.0 b A2 2 4.5 c A3 3 3.2 d A4 4 4.0 e A5 5 3.5 그이렇게 만든 자료를 data_df.csv이라는 파일 이름으로 저장해봅시다. 여기서 index = False을 한 이유는 자료에 'a', 'b', 'c', 'd', 'e'라는 index를 저장하지 않으려고 이렇게 False로 설정했습니다. True라고 하면 index도 저장하게 됩니다.\ndata_df.to_csv(\u0026#34;data_df.csv\u0026#34;, index = False) 그러면 실행하고 저장한 자료를 읽어서 확인해 봅시다.\n\u0026gt;\u0026gt;\u0026gt; data_df.to_csv(\u0026#34;data_df.csv\u0026#34;, index = False) \u0026gt;\u0026gt;\u0026gt; sample=pd.read_csv(\u0026#34;data_df.csv\u0026#34;) \u0026gt;\u0026gt;\u0026gt; sample ID X1 X2 0 A1 1 3.0 1 A2 2 4.5 2 A3 3 3.2 3 A4 4 4.0 4 A5 5 3.5 잘 저장된 것을 확인할 수 있습니다.\n","href":"/2023/04/07/1418/","title":"pandas 를 이용한 csv 저장"},{"content":"","href":"/posts/","title":"Posts"},{"content":"","href":"/tags/python/","title":"python"},{"content":"","href":"/categories/python/","title":"python"},{"content":"","href":"/tags/","title":"Tags"},{"content":"","href":"/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%84%9D/","title":"데이터 분석"},{"content":"","href":"/tags/hugo/","title":"Hugo"},{"content":"","href":"/categories/hugo/","title":"Hugo"},{"content":"블로그를 WordPress에서 Hugo으로 이전합니다.\nIntroduction This is bold text, and this is emphasized text.\nVisit the Hugo website!\n","href":"/2023/02/22/1416/","title":"My First Hugo Post"},{"content":"","href":"/tags/r/","title":"R"},{"content":"","href":"/categories/r/","title":"R"},{"content":"R을 가지고 데이터를 분석할 때 중복행을 제거해야 하는 경우가 많습니다. 쉬운 방법을 하나 소가하겠습니다. 우선 보기를 하나 만들겠습니다.\na \u0026lt;- c(rep(\u0026#34;A\u0026#34;, 3), rep(\u0026#34;B\u0026#34;, 3), rep(\u0026#34;C\u0026#34;,2)) b \u0026lt;- c(1,1,2,4,1,1,2,2) df \u0026lt;-data.frame(a,b) 윗 코드를 실행하면 다음과 같은 데이터프래임이 하나 만들어집니다.\n\u0026gt; df a b 1 A 1 2 A 1 3 A 2 4 B 4 5 B 1 6 B 1 7 C 2 8 C 2 이 데이터프래임은 1행과 2행, 5행과 6행, 그리고 7행과 8행이 중복입니다. 이때 unique() 함수를 사용하며 중복행을 쉽게 제거할 수 있습니다. 다음과 같이 사용하시면 됩니다.\n\u0026gt; unique(df) a b 1 A 1 3 A 2 4 B 4 5 B 1 7 C 2 \u0026gt; df a b 1 A 1 2 A 1 3 A 2 4 B 4 5 B 1 6 B 1 7 C 2 8 C 2 물론 덮어쓰기를 하지 않은 상태이기 때문에 앞에서 본 것처럼 df도 다음과 같이 그대로 있습니다. df가 더이상 필요하지 않다면 다음과 같이 해서 덮어써도 됩니다. 그러나 데이터 분석을 하는 경우에는 이렇게 하는 것은 추천하지 않습니다. 원자료는 소중합니다!!\n\u0026gt; df \u0026lt;- unique(df) \u0026gt; df a b 1 A 1 3 A 2 4 B 4 5 B 1 7 C 2 ","href":"/2023/02/22/1417/","title":"R에서 중복행을 제거하는 방법"},{"content":"","href":"/tags/wordpress/","title":"WordPress"},{"content":"","href":"/page/","title":"Pages"},{"content":"","href":"/tags/csv/","title":"csv"},{"content":"사용하고 있는 csv형식 파일들을 갯수도 많고 용량도 크다면, 이것들을 보관하거나 전달하기 위해서는 압축하는 것이 편리하다. archive라는 패키지를 이용해서 여러개의 csv형식 파일들을 한 파일로 압축해보자. 이 패키지에 대한 세부적인 내용은 아래 링크를 참고하자.\narchive: Multi-Format Archive and Compression Support 우선 해당 패키지를 설치해보자.\ninstall.packages(\u0026#34;archive\u0026#34;) 아래 명령어로 현재 압축하고자 하는 csv형식 파일이 있는지 살펴보자. 참고로 \u0026ldquo;data.zip\u0026quot;라는 파일명으로 압축하니, 이 폴더에 이 파일이 없어야 한다. 만약 있으면 에러가 날 확률이 많다.\ndir() 이제 압축하고자 하는 csv형식 파일을 한 파일로 압축해보자. 확장자가 소문자로 .csv인 것만 선택하고 있다. 참고하자. 그러면 압축을 해보자.\nlibrary(archive) save_files \u0026lt;- list.files(pattern=\u0026#34;*.csv\u0026#34;) archive_write_files(\u0026#34;data.zip\u0026#34;, save_files) 만약 파일 1개를 압축한다고 한다면, 다음과 같이 하면 된다. \u0026ldquo;aaa.csv\u0026quot;은 자신이 압축하고자 하는 파일명을 넣으면 된다.\nsave_files \u0026lt;- list.files(pattern=\u0026#34;*.csv\u0026#34;) archive_write_files(\u0026#34;data.zip\u0026#34;, \u0026#34;aaa.csv\u0026#34;) 윗 코드를 실행하면 압축 진행 과정이 보일 것이다. 다 끝났다면, 아래 코드로 압축된 파일을 확인할 수 있다.\narchive(\u0026#34;data.zip\u0026#34;) 이 글을 쓰기 위해서 테스트한 csv형식 파일들의 용량이 총 4.37GB이었는데 압축한 \u0026lsquo;data.zip\u0026rsquo; 파일은 707.6MB이었다. 거의 1/6로 줄었다.\n","href":"/2022/08/02/1415/","title":"R에서 `csv`형식 파일을 압축하기"},{"content":"","href":"/tags/zip/","title":"zip"},{"content":"","href":"/categories/programming/","title":"Programming"},{"content":"","href":"/tags/rust/","title":"Rust"},{"content":"","href":"/tags/string/","title":"String"},{"content":"","href":"/categories/%EB%9F%AC%EC%8A%A4%ED%8A%B8/","title":"러스트"},{"content":"러스트(Rust)에서 한글 문자열을 세기 위해서 단순하게 아래와 같이 len()을 사용하면 제대로 세지를 못한다. chars().count()을 이용해서 정확하게 셀 수 있다. 아래 코드를 실행하면, 정확하게 알 수 있다.\nfn main() { let temp = \u0026#34;안녕하세요!\u0026#34;; println!(\u0026#34;temp.chars().count()로 센 글자수:{}\u0026#34;, temp.chars().count()); println!(\u0026#34;temp.len() 센 글자수:{}\u0026#34;, temp.len()); } ","href":"/2022/02/11/1405/","title":"러스트(Rust)에서 한글 문자열 글자수 세기"},{"content":"","href":"/categories/mac/","title":"Mac"},{"content":"","href":"/tags/mac-os-x/","title":"Mac OS X"},{"content":"맥 OS에서 R 성능을 올리는 글이 봤었는데, 여기에서 알려지지 않을 것 같아서 정보 공유 차원에서 올려봅니다. 자세한 내용은 아래 링크 두 개를 참고하세요!\n대락적인 내용은 애플에서 제공하는 Apple’s BLAS를 사용하면 R 속도가 메트릭스 연산 속도가 거의 1/10로 줄어 듭니다. 그런데 아쉽게도 현재 macOS에서는 사용할 수 없게 되었고 macOS 10.13 하이 시에라까지만 사용할 수 있습니다. 이 내용이 두 번째 링크 내용입니다.\n그런데 첫 번째 링크를 보면, 저자는 M1 Mac mini에서 OpenBLAS 0.3.18 소스 코드를 다운받아서 직접 컴파일해 사용하면 위와 같은 효과를 볼 수 있다고 합니다. 이 글에서는 새로운 Apple Silicon arm64용 R과 비교하기 때문에 인텔 맥과 직접적인 비교를 할 수 없지만, 인텔 맥에서도 같은 방법으로 사용할 수 있을 것 같습니다.\nhttps://mpopov.com/blog/2021/10/10/even-faster-matrix-math-in-r-on-macos-with-m1/\nhttps://mpopov.com/blog/2019/06/04/faster-matrix-math-in-r-on-macos/\n","href":"/2021/12/09/1399/","title":"Mac용 R 성능을 올려 보기"},{"content":"러스트에서 문자열을 다루는 방법은 String을 이용하는 것입니다. 그런데 이것을 이용하더라도 유니코드를 사용하는 경우 인텍싱이 다른 언어와 같이 명확하게 처리되지 않습니다. 다음 코드를 살펴봅시다.\nfn main() { let s1 = String::from(\u0026#34;hello world!\u0026#34;); let hello = \u0026amp;s1[0..5]; let world = \u0026amp;s1[6..11]; println!(\u0026#34;{}, {}\u0026#34;, hello, world); let s1 = String::from(\u0026#34;안녕 세계!\u0026#34;); let hello = \u0026amp;s1[0..6]; let world = \u0026amp;s1[7..13]; println!(\u0026#34;{}, {}\u0026#34;, hello, world); let s1 = String::from(\u0026#34;こんにちは世界!\u0026#34;); let hello = \u0026amp;s1[0..15]; let world = \u0026amp;s1[15..21]; println!(\u0026#34;{}, {}\u0026#34;, hello, world); } 윗 코드를 실행하면 다음과 같은 결과 나옵니다. 앞에서 인텍싱하는 코드를 살펴보면 글자 수와 인덱싱 숫자가 맞지 않는 것을 알 수 있습니다.\ncargo run Compiling ownership v0.1.0 (/Users/jaehwan/git/rust/projects/ownership) Finished dev [unoptimized + debuginfo] target(s) in 0.39s Running `target/debug/ownership` hello, world 안녕, 세계 こんにちは, 世界 참고하세요!\n","href":"/2021/09/10/1392/","title":"러스트에서 `String`을 이용할 때, 생기는 유니코드 문제점"},{"content":"","href":"/tags/ansible/","title":"Ansible"},{"content":"","href":"/tags/apt/","title":"apt"},{"content":"apt을 이용해 업그레이드할 때 통상적으로 다음과 같이 하는 경우가 많습니다.\ntasks: - name: Update and upgrade apt packages become: true apt: upgrade: yes update_cache: yes cache_valid_time: 86400 #One day 이런 경우 다음과 같은 경고가 뜰 수 있죠.\nTASK [Update and upgrade apt packages] ************************************************************************************************************************ [WARNING]: The value \u0026#34;True\u0026#34; (type bool) was converted to \u0026#34;\u0026#39;True\u0026#39;\u0026#34; (type string). If this does not look like what you expect, quote the entire value to ensure it does not change. 이건 upgrade: yes을 upgrade: \u0026quot;yes\u0026quot;과 같이 바꾸면 해결됩니다. 즉 아래와 같이 하면 됩니다.\ntasks: - name: Update and upgrade apt packages become: true apt: upgrade: \u0026#34;yes\u0026#34; # not: yes update_cache: yes cache_valid_time: 86400 #One day 참고: ubuntu - Ansible warning about boolean type conversion - Stack Overflow\n","href":"/2021/03/18/1378/","title":"엔서블에서 `apt` 이용할 때 나오는 오류 처리법"},{"content":"","href":"/tags/chromedriver/","title":"chromedriver"},{"content":"","href":"/tags/mac/","title":"Mac"},{"content":"맥에서 크롤링을 하기 위해서 chromedriver를 사용하는 경우가 많습니다. 홈브루를 이용하시면, 터미널에서 brew install chromedriver을 입력하시면 사용할 수 있습니다. 그런데 맥 최신 오에스에서는 이렇게 설치한 chromedriver을 보안을 이유로 막는 경우가 있습니다. 좀 찾아봤는데 아주 쉽게 해결할 수 있습니다. 위와 같이 chromedriver를 설치하셨다면 터미널에서 xattr -d com.apple.quarantine $(which chromedriver)이라고 입력하시면 바로 문제 없이 사용하실 수 있습니다.\nxattr -d com.apple.quarantine $(which chromedriver) 아래 글을 참고하세요!\njava - MacOS Catalina(v 10.15.3): Error: “chromedriver” cannot be opened because the developer cannot be verified. Unable to launch the chrome browser - Stack Overflow ","href":"/2021/03/12/1369/","title":"맥에서 보안 때문에 사용할 수 없는 크롬드라이버 사용하는 법"},{"content":"","href":"/tags/sshpass/","title":"sshpass"},{"content":"homebrew로 sshpass이 설치되지 않는다! 아래 링크를 보면, 초보자들이 가볍게 설치하지 못 하도록 하려고 설치를 막았다고 하는 것 같다. 그래서 아래 링크에 있는 소스를 이용하는 방법으로 설치해보자! 설치한 후 다운받은 폴더와 파일을 삭제하면 된다.\ncd ~ curl -O -L https://fossies.org/linux/privat/sshpass-1.09.tar.gz \u0026amp;\u0026amp; tar xvzf sshpass-1.09.tar.gz cd sshpass-1.09 ./configure sudo make install sshpass macos - How to install sshpass on mac? - Stack Overflow\n","href":"/2021/03/09/1361/","title":"맥에서 sshpass 설치하기"},{"content":"","href":"/tags/docker/","title":"Docker"},{"content":"","href":"/tags/mariadb/","title":"MariaDB"},{"content":"이 글은 R로 MariaDB(이하 마리아디비)에 접근하기 위한 글입니다. 컴퓨터에 직접 마리아디비를 설치하고 이용하는 것이 아니라, 도커에 설치한 마리아디비를 이용하고자 합니다. 직접 설치하신 마리아디비를 사용하고자 하실 분들이나 외부 다른 컴퓨터에 설치된 것을 사용하고자 하실 분들도 아래 연결 설정값을 적절하게 입력하신다면, 그 글을 따라가시는데 문제가 없을 것 같습니다.\n본격적으로 시작하기에 앞서 참고로 여기에서는 이미 Docker로 마리아디비를 설치했다고 가정할 것입니다. 설치하는 방법은 다음 링크를 참고하세요. Docker를 사용해서 MariaDB을 설치하기 그리고 이미 다음과 같은 sql명령을 사용하여 gregs_list이라는 DATABASE를 만들고, 그 안에 my_contacts라는 테이블을 만들고 두 사람의 자료를 입력했습니다.\nCREATE DATABASE gregs_list; CREATE TABLE my_contacts( last_name VARCHAR(30), first_name VARCHAR(20), email VARCHAR(50), birthday Date, profession VARCHAR(50), location VARCHAR(50), status VARCHAR(20), interests VARCHAR(100), seeking VARCHAR(100) ); INSERT INTO my_contacts( last_name, first_name, email, gender, birthday, profession, location, status, interests, seeking ) VALUES ( \u0026#39;Anderson\u0026#39;, \u0026#39;Jillian\u0026#39;, \u0026#39;jill_anderson@breakneckpizza.com\u0026#39;, \u0026#39;F\u0026#39;, \u0026#39;1980-09-05\u0026#39;, \u0026#39;Technical Writer\u0026#39;, \u0026#39;Palo Alto, CA\u0026#39;, \u0026#39;Single\u0026#39;, \u0026#39;Kayaking, Reptiles\u0026#39;, \u0026#39;Relationship, Friends\u0026#39; ); INSERT INTO my_contacts( first_name, email, profession, location ) VALUES ( \u0026#39;Pat\u0026#39;, \u0026#39;patpost@breakneckpizza.com\u0026#39;, \u0026#39;Postal Worker\u0026#39;, \u0026#39;Princeton, NJ\u0026#39; ); 위에서 작업한 결과로 gregs_list 데이터베이스의 my_contacts라는 테이블에는 다음과 같이 두 사람의 자료가 들어있습니다.\nMariaDB [gregs_list]\u0026gt; SELECT * FROM my_contacts; +-----------+------------+----------------------------------+--------+------------+------------------+---------------+--------+--------------------+-----------------------+ | last_name | first_name | email | gender | birthday | profession | location | status | interests | seeking | +-----------+------------+----------------------------------+--------+------------+------------------+---------------+--------+--------------------+-----------------------+ | Anderson | Jillian | jill_anderson@breakneckpizza.com | F | 1980-09-05 | Technical Writer | Palo Alto, CA | Single | Kayaking, Reptiles | Relationship, Friends | | NULL | Pat | patpost@breakneckpizza.com | NULL | NULL | Postal Worker | Princeton, NJ | NULL | NULL | NULL | +-----------+------------+----------------------------------+--------+------------+------------------+---------------+--------+--------------------+-----------------------+ 2 rows in set (0.004 sec) RMariaDB 설치하기 R 에서 MariaDB에 접근하기 위해서는 odbc 패키지나 RMariaDB를 사용해야 합니다. 이에 관련된 내용은 R Statistical Programming Using MariaDB as the Background Database - MariaDB Knowledge Base을 참고하시면 됩니다. 여기서는 RMariaDB를 사용하도록 하겠습니다. 앞 링크에서 RMariaDB을 다음과 같이 소개하고 있습니다.\n“RMariaDB” R library, is a modern \u0026lsquo;MariaDB\u0026rsquo; client based on \u0026lsquo;Rcpp\u0026rsquo;.\n사용하기 위에서는 당연히 패키지를 설치해야 합니다.\ninstall.packages(\u0026#34;RMariaDB\u0026#34;) 설치를 했으면 사용하시는 방법은 다음과 같습니다. 앞에서 말한 도커에 설치된 마리아디비의 정보를 그대로 입력했습니다. 여기서는 직접 입력하고 있지만, 실전에서 사용하시려면 Database Interface and MariaDB Driver • RMariaDB에서처럼 별도 파일에 입력하여 사용하시는 것이 좋을 것 습니다. 마지막 줄에서 dbListTables(con)을 통해서 gregs_list이라는 데이터베이스가 가지고 있는 테이블을 보여주게 됩니다.\nlibrary(RMariaDB) con \u0026lt;- dbConnect( drv = RMariaDB::MariaDB(), username = \u0026#34;root\u0026#34;, password = \u0026#34;RT27hDosK\u0026#34;, host = \u0026#34;0.0.0.0\u0026#34;, port = 3306, dbname = \u0026#34;gregs_list\u0026#34; ) dbListTables(con) 앞의 코드가 실행된 결과는 다음과 같습니다. 현재 앞에서 입력한 my_contacts 테이블도 볼 수 있습니다.\n\u0026gt; library(RMariaDB) \u0026gt; con \u0026lt;- dbConnect( + drv = RMariaDB::MariaDB(), + username = \u0026#34;root\u0026#34;, + password = \u0026#34;RT27hDosK\u0026#34;, + host = \u0026#34;0.0.0.0\u0026#34;, + port = 3306, + dbname = \u0026#34;gregs_list\u0026#34; + ) \u0026gt; \u0026gt; con \u0026lt;mariadbconnection\u0026gt; Host: 0.0.0.0 Server: Client: \u0026gt; dbListTables(con) [1] \u0026#34;movie_table\u0026#34; \u0026#34;easy_drinks\u0026#34; \u0026#34;my_contacts\u0026#34; \u0026#34;doughnut_list\u0026#34; \u0026#34;users\u0026#34; \u0026#34;clown_info\u0026#34; R로 데이터베이스에 입력한 테이블을 살펴보기 이제 본격적으로 앞에서 데이터베이스에 저장한 테이블을 살펴보겠습니다. dbReadTable()을 사용하면 쉽게 테이블 내용을 확인하실 수 있습니다.\ndbReadTable(con, \u0026#34;my_contacts\u0026#34;) 윗 코드를 실행하면 다음과 같습니다.\n\u0026gt; dbReadTable(con, \u0026#34;my_contacts\u0026#34;) contact_id phone last_name first_name email gender birthday profession location status interests seeking 1 1 \u0026lt;na\u0026gt; Anderson Jillian jill_anderson@breakneckpizza.com F 1980-09-05 Technical Writer Palo Alto, CA Single Kayaking, Reptiles Relationship, Friends 2 2 \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; Pat patpost@breakneckpizza.com \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; Postal Worker Princeton, NJ \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; SQL을 사용하려면 다음과 같이 하시면 됩니다.\nres \u0026lt;- dbSendQuery(con, \u0026#34;SELECT * FROM my_contacts\u0026#34;) 위의 코드를 실행하면 다음과 같습니다. dbClearResult()을 이용해서 사용하신 다음에 정리하고 마무리하지 않으시면 에러가 날 수 있습니다. 주의하세요!\n\u0026gt; res \u0026lt;- dbSendQuery(con, \u0026#34;SELECT * FROM my_contacts\u0026#34;) \u0026gt; res \u0026lt;mariadbresult\u0026gt; SQL SELECT * FROM my_contacts ROWS Fetched: 0 [incomplete] Changed: 0 \u0026gt; dbFetch(res) contact_id phone last_name first_name email gender birthday profession location status interests seeking 1 1 \u0026lt;na\u0026gt; Anderson Jillian jill_anderson@breakneckpizza.com F 1980-09-05 Technical Writer Palo Alto, CA Single Kayaking, Reptiles Relationship, Friends 2 2 \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; Pat patpost@breakneckpizza.com \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; Postal Worker Princeton, NJ \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; \u0026gt; dbClearResult(res) 조금 더 세련되게 할 수도 있습니다.\nres \u0026lt;- dbSendQuery(con, \u0026#34;SELECT * FROM my_contacts\u0026#34;) while(!dbHasCompleted(res)){ chunk \u0026lt;- dbFetch(res, n = 5) print(chunk) print(nrow(chunk)) } 윗 코드를 실행하면 다음과 같습니다.\n\u0026gt; dbClearResult(res) \u0026gt; res \u0026lt;- dbSendQuery(con, \u0026#34;SELECT * FROM my_contacts\u0026#34;) \u0026gt; while(!dbHasCompleted(res)){ + chunk \u0026lt;- dbFetch(res, n = 5) + print(chunk) + print(nrow(chunk)) + } contact_id phone last_name first_name email gender birthday profession location status interests seeking 1 1 \u0026lt;na\u0026gt; Anderson Jillian jill_anderson@breakneckpizza.com F 1980-09-05 Technical Writer Palo Alto, CA Single Kayaking, Reptiles Relationship, Friends 2 2 \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; Pat patpost@breakneckpizza.com \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; Postal Worker Princeton, NJ \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; [1] 2 tidyverse를 추가해서 사용하면 좀 더 쉽고 멋있게 처리할 수 있습니다. 다음 코드에서 볼 수 있는 것처럼 SQL를 사용하지 않고 filter()와 같은 것을 이용하여 쉽게 테이블에 있는 자료를 처리할 수 있습니다. 마지막 줄에서 filter()를 사용하여 first_name 열에 있는 \u0026ldquo;Pat\u0026quot;이라는 단어가 있는 줄을 뽑아서 보여줍니다.\nlibrary(tidyverse) library(RMariaDB) library(dplyr, warn.conflicts = FALSE) con \u0026lt;- dbConnect( drv = RMariaDB::MariaDB(), username = \u0026#34;root\u0026#34;, password = \u0026#34;RT27hDosK\u0026#34;, host = \u0026#34;0.0.0.0\u0026#34;, port = 3306, dbname = \u0026#34;gregs_list\u0026#34; ) my_contacts \u0026lt;- tbl(con, \u0026#34;my_contacts\u0026#34;) my_contacts my_contacts %\u0026gt;% filter(first_name == \u0026#34;Pat\u0026#34;) 윗 코드를 실행하면 다음과 같습니다.\n\u0026gt; library(tidyverse) ─ Attaching packages ─────────────────────────────────────────────────────────────────────── tidyverse 1.2.1 ─ ✔ ggplot2 3.3.0 ✔ purrr 0.3.4 ✔ tibble 3.0.1 ✔ dplyr 1.0.0 ✔ tidyr 1.1.0 ✔ stringr 1.4.0 ✔ readr 1.3.1 ✔ forcats 0.5.0 ─ Conflicts ──────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ─ ✖ dplyr::filter() masks stats::filter() ✖ dplyr::lag() masks stats::lag() \u0026gt; library(RMariaDB) \u0026gt; library(dplyr, warn.conflicts = FALSE) \u0026gt; con \u0026lt;- dbConnect( + drv = RMariaDB::MariaDB(), + username = \u0026#34;root\u0026#34;, + password = \u0026#34;RT27hDosK\u0026#34;, + host = \u0026#34;0.0.0.0\u0026#34;, + port = 3306, + dbname = \u0026#34;gregs_list\u0026#34; + ) \u0026gt; my_contacts \u0026lt;- tbl(con, \u0026#34;my_contacts\u0026#34;) \u0026gt; my_contacts # Source: table\u0026lt;my_contacts\u0026gt; [?? x 12] # Database: mysql [root@0.0.0.0:NA/gregs_list] contact_id phone last_name first_name email gender birthday profession location status interests seeking \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;date\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; 1 1 \u0026lt;na\u0026gt; Anderson Jillian jill_anderson@breakneckpizza.com F 1980-09-05 Technical Writer Palo Alto, CA Single Kayaking, Reptiles Relationship, Friends 2 2 \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; Pat patpost@breakneckpizza.com \u0026lt;na\u0026gt; NA Postal Worker Princeton, NJ \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; \u0026gt; my_contacts %\u0026gt;% filter(first_name == \u0026#34;Pat\u0026#34;) # Source: lazy query [?? x 12] # Database: mysql [root@0.0.0.0:NA/gregs_list] contact_id phone last_name first_name email gender birthday profession location status interests seeking \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;date\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; 1 2 \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; Pat patpost@breakneckpizza.com \u0026lt;na\u0026gt; NA Postal Worker Princeton, NJ \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; \u0026lt;na\u0026gt; 참고 자료 Database Interface and MariaDB Driver • RMariaD R Statistical Programming Using MariaDB as the Background Database - MariaDB Knowledge Base A Grammar of Data Manipulation • dplyr A dplyr Back End for Databases • dbplyr ","href":"/2020/10/30/1342/","title":"R으로 Docker로 구성한 MariaDB 사용하기"},{"content":"","href":"/tags/pymysql/","title":"PyMySQL"},{"content":"","href":"/tags/sqlalchemy/","title":"SQLAlchemy"},{"content":"도커를 이용하여 MariaDB(이하 마리아디비)를 설치해봤습니다. 이렇게 설치한 마리아디비에 파이썬으로 이용하여 자료를 저장하고 저장한 값을 확인하고 지워보겠습니다. 우선 파이썬으로 마리아디비와 같은 실제 DB(이하 데이터베이스)에 접근하기 위해서는 해당 데이터베이스에 맞는 드라이버(또는 클라이언트 라이브러리(client library)라고 하기도 합니다)를 설치해줘야 합니다. 이 글에서는PyMySQL을 사용하겠습니다. 설치 방법은 Installation을 참고하세요. 현재 사용하고 있는 PyMySQL의 버전은 0.10.1입니다.\n본격적으로 시작하기에 앞서 참고로 여기에서는 이미 Docker로 MariaDB를 설치했다고 가정할 것입니다. 설치하는 방법은 다음 링크를 참고하세요. Docker를 사용해서 MariaDB을 설치하기 그리고 이미 다음과 같은 sql명령을 사용하여 gregs_list이라는 DATABASE를 만들고, 그 안에 my_contacts라는 테이블을 만들고 두 사람의 자료를 입력했습니다.그리고 사용하기 쉽게 하기 위해서 sqlalchemy을 사용합니다. 이것의 설치 방법은 How to Install SQLAlchemy on Windows, Mac and Linux | Python Central을 참고하세요!\nCREATE DATABASE gregs_list; CREATE TABLE my_contacts( last_name VARCHAR(30), first_name VARCHAR(20), email VARCHAR(50), birthday Date, profession VARCHAR(50), location VARCHAR(50), status VARCHAR(20), interests VARCHAR(100), seeking VARCHAR(100) ); INSERT INTO my_contacts( last_name, first_name, email, gender, birthday, profession, location, status, interests, seeking ) VALUES ( \u0026#39;Anderson\u0026#39;, \u0026#39;Jillian\u0026#39;, \u0026#39;jill_anderson@breakneckpizza.com\u0026#39;, \u0026#39;F\u0026#39;, \u0026#39;1980-09-05\u0026#39;, \u0026#39;Technical Writer\u0026#39;, \u0026#39;Palo Alto, CA\u0026#39;, \u0026#39;Single\u0026#39;, \u0026#39;Kayaking, Reptiles\u0026#39;, \u0026#39;Relationship, Friends\u0026#39; ); INSERT INTO my_contacts( first_name, email, profession, location ) VALUES ( \u0026#39;Pat\u0026#39;, \u0026#39;patpost@breakneckpizza.com\u0026#39;, \u0026#39;Postal Worker\u0026#39;, \u0026#39;Princeton, NJ\u0026#39; ); 위에서 작업한 결과로 gregs_list 데이터베이스의 my_contacts라는 테이블에는 다음과 같이 두 사람의 자료가 들어있습니다.\nMariaDB [gregs_list]\u0026gt;; SELECT * FROM my_contacts; +-----------+------------+----------------------------------+--------+------------+------------------+---------------+--------+--------------------+-----------------------+ | last_name | first_name | email | gender | birthday | profession | location | status | interests | seeking | +-----------+------------+----------------------------------+--------+------------+------------------+---------------+--------+--------------------+-----------------------+ | Anderson | Jillian | jill_anderson@breakneckpizza.com | F | 1980-09-05 | Technical Writer | Palo Alto, CA | Single | Kayaking, Reptiles | Relationship, Friends | | NULL | Pat | patpost@breakneckpizza.com | NULL | NULL | Postal Worker | Princeton, NJ | NULL | NULL | NULL | +-----------+------------+----------------------------------+--------+------------+------------------+---------------+--------+--------------------+-----------------------+ 2 rows in set (0.004 sec) 데이터베이스에 입력된 것을 가져오기 그러면 파이썬으로 이것에 연결해보겠습니다. 도커에 설치된 마리아디비의 정보를 파이썬에 입력하기 위해서 정보가 들어 있는 dict를 하나 만들었습니다.\ndb = { \u0026#39;user\u0026#39; : \u0026#39;root\u0026#39;, \u0026#39;password\u0026#39; : \u0026#39;RT27hDosK\u0026#39;, \u0026#39;host\u0026#39; : \u0026#39;0.0.0.0\u0026#39;, \u0026#39;port\u0026#39; : \u0026#39;3306\u0026#39;, \u0026#39;database\u0026#39; : \u0026#39;gregs_list\u0026#39; } 위에 입력한 자료를 가지고 DB_URL이라는 문자열을 만들어서 이를 가지고 데이터 베이스에 접근하기 위해 sqlalchemy으로 create_engine을 만들고, my_contacts 테이블에 접근하기 위해 execute을 가지고 sql을 직접 실행합니다. 그렇게 받아온 자료를 print를 이용해 확인합니다.\nimport sqlalchemy as sa DB_URL = f\u0026#34;mysql+pymysql://{db[\u0026#39;user\u0026#39;]}:{db[\u0026#39;password\u0026#39;]}@{db[\u0026#39;host\u0026#39;]}:{db[\u0026#39;port\u0026#39;]}/{db[\u0026#39;database\u0026#39;]}?charset=utf8\u0026#34; conn = sa.create_engine(DB_URL, encoding = \u0026#39;utf-8\u0026#39;) rows = conn.execute(\u0026#39;SELECT * FROM my_contacts\u0026#39;) for row in rows: print(row) 지금까지 한 것을 실행하면 다음과 같습니다. 맥에서 실행한 것이니 조금씩 다를 수는 있겠지만, 거의 다 같게 작동할 것입니다. 만약 자료를 보기 위해서 print(rows)라고 하신다면 \u0026lt;sqlalchemy.engine.result.resultproxy object=\u0026quot;\u0026quot; at=\u0026quot;\u0026quot; 0x102e33940=\u0026quot;\u0026quot;\u0026gt;이라고 나올 것입니다. 왜냐하면 sqlalchemy의 ResultProxy 객체는 출력해서 볼 수 없기 때문입니다.\u0026lt;/sqlalchemy.engine.result.resultproxy\u0026gt;\npython3 Python 3.8.6 (default, Oct 16 2020, 14:50:59) [Clang 11.0.3 (clang-1103.0.32.62)] on darwin Type \u0026#34;help\u0026#34;, \u0026#34;copyright\u0026#34;, \u0026#34;credits\u0026#34; or \u0026#34;license\u0026#34; for more information. \u0026gt;\u0026gt;\u0026gt; import sqlalchemy as sa \u0026gt;\u0026gt;\u0026gt; db = { ... \u0026#39;user\u0026#39; : \u0026#39;root\u0026#39;, ... \u0026#39;password\u0026#39; : \u0026#39;RT27hDosK\u0026#39;, ... \u0026#39;host\u0026#39; : \u0026#39;0.0.0.0\u0026#39;, ... \u0026#39;port\u0026#39; : \u0026#39;3306\u0026#39;, ... \u0026#39;database\u0026#39; : \u0026#39;gregs_list\u0026#39; ... } \u0026gt;\u0026gt;\u0026gt; DB_URL = f\u0026#34;mysql+pymysql://{db[\u0026#39;user\u0026#39;]}:{db[\u0026#39;password\u0026#39;]}@{db[\u0026#39;host\u0026#39;]}:{db[\u0026#39;port\u0026#39;]}/{db[\u0026#39;database\u0026#39;]}?charset=utf8\u0026#34; \u0026gt;\u0026gt;\u0026gt; conn = sa.create_engine(DB_URL, encoding = \u0026#39;utf-8\u0026#39;) \u0026gt;\u0026gt;\u0026gt; rows = conn.execute(\u0026#39;SELECT * FROM my_contacts\u0026#39;) \u0026gt;\u0026gt;\u0026gt; for row in rows: ... print(row) ... (\u0026#39;Anderson\u0026#39;, \u0026#39;Jillian\u0026#39;, \u0026#39;jill_anderson@breakneckpizza.com\u0026#39;, \u0026#39;F\u0026#39;, datetime.date(1980, 9, 5), \u0026#39;Technical Writer\u0026#39;, \u0026#39;Palo Alto, CA\u0026#39;, \u0026#39;Single\u0026#39;, \u0026#39;Kayaking, Reptiles\u0026#39;, \u0026#39;Relationship, Friends\u0026#39;) (None, \u0026#39;Pat\u0026#39;, \u0026#39;patpost@breakneckpizza.com\u0026#39;, None, None, \u0026#39;Postal Worker\u0026#39;, \u0026#39;Princeton, NJ\u0026#39;, None, None, None) 위의 방법을 보시면 아시겠지만, 기본적으로 SQL을 이용하는 것과 별 차이가 없습니다. 또한 PostgreSQL와 같은 다른 종류의 데이터베이스를 사용하면, 사용할 수 있는 SQL가 다르기 때문에 각각 DB에 맞춰 코드를 짜야 합니다. 이처럼 같은 기능을 하지만, 각각의 데이터베이스에서는 상이한 표현으로 되어 있는 것들을 같은 함수로 처리할 수 있는 기능이 SQLAlchemy에 들어 있습니다. 이 기능이 바로 \u0026lsquo;SQL Expression Language\u0026rsquo;입니다. 이것을 이용하여 위의 것과 동일한 일을 하는 코드를 작성하면 아래와 같습니다.\ndb = { \u0026#39;user\u0026#39; : \u0026#39;root\u0026#39;, \u0026#39;password\u0026#39; : \u0026#39;RT27hDosK\u0026#39;, \u0026#39;host\u0026#39; : \u0026#39;0.0.0.0\u0026#39;, \u0026#39;port\u0026#39; : \u0026#39;3306\u0026#39;, \u0026#39;database\u0026#39; : \u0026#39;gregs_list\u0026#39; } import sqlalchemy as sa DB_URL = f\u0026#34;mysql+pymysql://{db[\u0026#39;user\u0026#39;]}:{db[\u0026#39;password\u0026#39;]}@{db[\u0026#39;host\u0026#39;]}:{db[\u0026#39;port\u0026#39;]}/{db[\u0026#39;database\u0026#39;]}?charset=utf8\u0026#34; conn = sa.create_engine(DB_URL, encoding = \u0026#39;utf-8\u0026#39;) meta = sa.MetaData() my_contacts = sa.Table(\u0026#39;my_contacts\u0026#39;, meta, sa.Column(\u0026#39;last_name\u0026#39;, sa.String), sa.Column(\u0026#39;first_name\u0026#39;, sa.String), sa.Column(\u0026#39;email\u0026#39;, sa.String), sa.Column(\u0026#39;birthday\u0026#39;, sa.Date), sa.Column(\u0026#39;profession\u0026#39;, sa.String), sa.Column(\u0026#39;location\u0026#39;, sa.String), sa.Column(\u0026#39;status\u0026#39;, sa.String), sa.Column(\u0026#39;interests\u0026#39;, sa.String), sa.Column(\u0026#39;seeking\u0026#39;, sa.String)) meta.create_all(conn) result = conn.execute(my_contacts.select()) rows = result.fetchall() print(rows) 이 코드를 보시면 아시겠지만, SQL에서 벗어나, 순수 파이썬 코드처럼 보입니다. 윗 코드를 실행시키면 앞에 한 것과 동일한 결과가 나옵니다. 앞부분은 윗 코드와 동일하지만 데이블에 접근하는 방법은 많이 다릅니다.\nPython 3.8.6 (default, Oct 16 2020, 14:50:59) [Clang 11.0.3 (clang-1103.0.32.62)] on darwin Type \u0026#34;help\u0026#34;, \u0026#34;copyright\u0026#34;, \u0026#34;credits\u0026#34; or \u0026#34;license\u0026#34; for more information. \u0026gt;\u0026gt;\u0026gt; import sqlalchemy as sa \u0026gt;\u0026gt;\u0026gt; db = { ... \u0026#39;user\u0026#39; : \u0026#39;root\u0026#39;, ... \u0026#39;password\u0026#39; : \u0026#39;RT27hDosK\u0026#39;, ... \u0026#39;host\u0026#39; : \u0026#39;0.0.0.0\u0026#39;, ... \u0026#39;port\u0026#39; : \u0026#39;3306\u0026#39;, ... \u0026#39;database\u0026#39; : \u0026#39;gregs_list\u0026#39; ... } \u0026gt;\u0026gt;\u0026gt; DB_URL = f\u0026#34;mysql+pymysql://{db[\u0026#39;user\u0026#39;]}:{db[\u0026#39;password\u0026#39;]}@{db[\u0026#39;host\u0026#39;]}:{db[\u0026#39;port\u0026#39;]}/{db[\u0026#39;database\u0026#39;]}?charset=utf8\u0026#34; \u0026gt;\u0026gt;\u0026gt; conn = sa.create_engine(DB_URL, encoding = \u0026#39;utf-8\u0026#39;) \u0026gt;\u0026gt;\u0026gt; meta = sa.MetaData() \u0026gt;\u0026gt;\u0026gt; my_contacts = sa.Table(\u0026#39;my_contacts\u0026#39;, meta, ... sa.Column(\u0026#39;last_name\u0026#39;, sa.String), ... sa.Column(\u0026#39;first_name\u0026#39;, sa.String), ... sa.Column(\u0026#39;email\u0026#39;, sa.String), ... sa.Column(\u0026#39;birthday\u0026#39;, sa.Date), ... sa.Column(\u0026#39;profession\u0026#39;, sa.String), ... sa.Column(\u0026#39;location\u0026#39;, sa.String), ... sa.Column(\u0026#39;status\u0026#39;, sa.String), ... sa.Column(\u0026#39;interests\u0026#39;, sa.String), ... sa.Column(\u0026#39;seeking\u0026#39;, sa.String)) \u0026gt;\u0026gt;\u0026gt; meta.create_all(conn) \u0026gt;\u0026gt;\u0026gt; result = conn.execute(my_contacts.select()) \u0026gt;\u0026gt;\u0026gt; rows = result.fetchall() \u0026gt;\u0026gt;\u0026gt; print(rows) [(\u0026#39;Anderson\u0026#39;, \u0026#39;Jillian\u0026#39;, \u0026#39;jill_anderson@breakneckpizza.com\u0026#39;, datetime.date(1980, 9, 5), \u0026#39;Technical Writer\u0026#39;, \u0026#39;Palo Alto, CA\u0026#39;, \u0026#39;Single\u0026#39;, \u0026#39;Kayaking, Reptiles\u0026#39;, \u0026#39;Relationship, Friends\u0026#39;), (None, \u0026#39;Pat\u0026#39;, \u0026#39;patpost@breakneckpizza.com\u0026#39;, None, \u0026#39;Postal Worker\u0026#39;, \u0026#39;Princeton, NJ\u0026#39;, None, None, None)] 이것을 이용해서 자료를 입력해보겠습니다. 참고로 생년월일을 입력하기 위해서 datetime가 필요합니다.\nimport datetime conn.execute(my_contacts.insert((\u0026#39;Soukup\u0026#39;, \u0026#39;Alan\u0026#39;, \u0026#39;soupup@breakneckbizza.com\u0026#39;, datetime.date(1975, 12, 2), \u0026#39;Aeronautical Engineer\u0026#39;, \u0026#39;San Antonio, TX\u0026#39;, \u0026#39;Married\u0026#39;, \u0026#39;RPG, Programming\u0026#39;, \u0026#39;Nothing\u0026#39;))) 윗 코드를 작동시켜보면 자료가 입력된 것을 확인할 수 있습니다.\n\u0026gt;\u0026gt;\u0026gt; import datetime \u0026gt;\u0026gt;\u0026gt; conn.execute(my_contacts.insert((\u0026#39;Soukup\u0026#39;, \u0026#39;Alan\u0026#39;, \u0026#39;soupup@breakneckbizza.com\u0026#39;, datetime.date(1975, 12, 2), \u0026#39;Aeronautical Engineer\u0026#39;, \u0026#39;San Antonio, TX\u0026#39;, \u0026#39;Married\u0026#39;, \u0026#39;RPG, Programming\u0026#39;, \u0026#39;Nothing\u0026#39;))) \u0026gt;\u0026gt;\u0026gt; result = conn.execute(my_contacts.select()) \u0026gt;\u0026gt;\u0026gt; rows = result.fetchall() \u0026gt;\u0026gt;\u0026gt; print(rows) [(\u0026#39;Anderson\u0026#39;, \u0026#39;Jillian\u0026#39;, \u0026#39;jill_anderson@breakneckpizza.com\u0026#39;, datetime.date(1980, 9, 5), \u0026#39;Technical Writer\u0026#39;, \u0026#39;Palo Alto, CA\u0026#39;, \u0026#39;Single\u0026#39;, \u0026#39;Kayaking, Reptiles\u0026#39;, \u0026#39;Relationship, Friends\u0026#39;), (None, \u0026#39;Pat\u0026#39;, \u0026#39;patpost@breakneckpizza.com\u0026#39;, None, \u0026#39;Postal Worker\u0026#39;, \u0026#39;Princeton, NJ\u0026#39;, None, None, None), (\u0026#39;Soukup\u0026#39;, \u0026#39;Alan\u0026#39;, \u0026#39;soupup@breakneckbizza.com\u0026#39;, datetime.date(1975, 12, 2), \u0026#39;Aeronautical Engineer\u0026#39;, \u0026#39;San Antonio, TX\u0026#39;, \u0026#39;Married\u0026#39;, \u0026#39;RPG, Programming\u0026#39;, \u0026#39;Nothing\u0026#39;)] ","href":"/2020/10/23/%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9C%BC%EB%A1%9C-docker%EB%A1%9C-%EA%B5%AC%EC%84%B1%ED%95%9C-mariadb-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/","title":"파이썬으로 Docker로 구성한 MariaDB 사용하기"},{"content":"참고: 이 글은 JiHun님의 Docker를-사용해서-MariaDB-설치하기을 참고했습니다. 자세한 내용은 이 글을 참고하세요!\ndocker 에 mariadb container를 받고 실행합니다. MYSQL_ROOT_PASSWORD = RT27hDosK에 쓴 RT27hDosK은 DB 비번입니다. 적절하게 고쳐주세요. 연습용으로 쓰실 것이면, 그대로 사용해도 무방합니다.\ndocker pull mariadb docker run --name mariadb -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=RT27hDosK mariadb 앞에서 실행한 container에 들어가서 bash를 실행합니다.\ndocker exec -it mariadb /bin/bash container에 들어갔으니, mysql으로 들어가겠습니다. 피번은 앞에서 MYSQL_ROOT_PASSWORD = RT27hDosK이라고 했으니 RT27hDosK을 입력하시면 됩니다.\nroot@e144fdbab9be:/# mysql -u root -p Enter password: 들어갔으니 DB상태를 살펴보겠습니다. latin1이 2개 있습니다. 이것때문에 한글이 깨질 수 있습니다. 변경해보겠습니다.\nMariaDB [(none)]\u0026amp;\u0026gt; status -------------- mysql Ver 15.1 Distrib 10.5.5-MariaDB, for debian-linux-gnu (x86_64) using readline 5.2 Connection id: 4 Current database: Current user: root@localhost SSL: Not in use Current pager: stdout Using outfile: \u0026#39;\u0026#39; Using delimiter: ; Server: MariaDB Server version: 10.5.5-MariaDB-1:10.5.5+maria~focal mariadb.org binary distribution Protocol version: 10 Connection: Localhost via UNIX socket Server characterset: utf8mb4 Db characterset: utf8mb4 Client characterset: latin1 Conn. characterset: latin1 UNIX socket: /run/mysqld/mysqld.sock Uptime: 2 min 1 sec Threads: 2 Questions: 4 Slow queries: 0 Opens: 16 Open tables: 10 Queries per second avg: 0.033 앞에 설정을 바꾸기 위해서는 도커 컨테이너 안에 있는 파일을 고쳐야 합니다. 그런데 에디터가 없습니다. 에디터를 설치하고 파일을 열겠습니다.\nroot@e144fdbab9be:/# apt-get update root@e144fdbab9be:/# apt-get install nano root@e144fdbab9be:/# nano /etc/mysql/my.cnf 앞에서 연 /etc/mysql/my.cnf 파일에서 내용을 아래와 같이 추가/수정해 줍니다.\n[client] default-character-set = utf8mb4 [mysql] default-character-set = utf8mb4 [mysqld] collation-server = utf8_unicode_ci init-connect=\u0026#39;SET NAMES utf8\u0026#39; character-set-server = utf8 다 했으면 나갑니다.\nroot@e144fdbab9be:/# exit exit 이제 변경한 내용을 적용하시려면 mariadb를 재시작해야 합니다. 우선 mariadb ID를 다음과 같이 찾습니다. 그런 다음 그 ID를 가지고 mariadb를 재실행합니다.\n❯ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES e144fdbab9be mariadb \u0026#34;docker-entrypoint.s…\u0026#34; 20 minutes ago Up 20 minutes 0.0.0.0:3306-\u0026gt;3306/tcp mariadb ❯ docker restart e144fdbab9be e144fdbab9be 지금까지 한 것을 확인하러 컨데이너에 들어갑니다.\ndocker exec -it mariadb /bin/bash mysql -u root -p # MYSQL_ROOT_PASSWORD=RT27hDosK Enter password: 잘 변경되었습니다.\nMariaDB [(none)]\u0026amp;\u0026gt; status -------------- mysql Ver 15.1 Distrib 10.5.5-MariaDB, for debian-linux-gnu (x86_64) using readline 5.2 Connection id: 3 Current database: Current user: root@localhost SSL: Not in use Current pager: stdout Using outfile: \u0026#39;\u0026#39; Using delimiter: ; Server: MariaDB Server version: 10.5.5-MariaDB-1:10.5.5+maria~focal mariadb.org binary distribution Protocol version: 10 Connection: Localhost via UNIX socket Server characterset: utf8 Db characterset: utf8 Client characterset: utf8mb4 Conn. characterset: utf8mb4 UNIX socket: /run/mysqld/mysqld.sock Uptime: 1 min 46 sec Threads: 2 Questions: 4 Slow queries: 0 Opens: 16 Open tables: 10 Queries per second avg: 0.037 ","href":"/2020/09/26/1293/","title":"Docker를 사용해서 MariaDB을 설치하기"},{"content":"","href":"/categories/misc/","title":"Misc"},{"content":"줄리아에서 아래와 같은 array를 가지고 for 문을 돌려 열을 선택하고 싶은 경우가 있다.\nM = [1 2 3; 4 5 6; 7 8 9] 실행 결과:\n3×3 Array{Int64,2}: 1 2 3 4 5 6 7 8 9 그러나 아쉽게도 다음과 같이 셀을 하나씩 잡아서 준다.\nfor i in (M) println(i) end 실행 결과:\n1 4 7 2 5 8 3 6 9 이때 필요한 eachrow()함수이다. 이를 이용해서 for 문을 돌리면 아주 깔금하게 작동합니다.\nfor row in eachrow(M) println(row) end 실행 결과:\n[1, 2, 3] [4, 5, 6] [7, 8, 9] ","href":"/2020/01/16/1271/","title":"Array 에서 행을 잡는 방법"},{"content":"","href":"/tags/julia/","title":"julia"},{"content":"당연히 homebrew를 사용하는 것입니다.\nbrew cask install julia 다음 링크를 참고하세요\nPlatform Specific Instructions for Official Binaries ","href":"/2019/12/16/1250/","title":"맥에서 julia를 쉽게 설치하는 법"},{"content":"","href":"/tags/github/","title":"GitHub"},{"content":"","href":"/tags/r-markdown/","title":"R Markdown"},{"content":"아주 쉽습니다. 아래와 같이 맨처음에 있는 설정 부분에서 output: github_document이라고 변경하시면 됩니다.\n--- title: \u0026#34;Habits\u0026#34; author: John Doe date: March 22, 2005 output: github_document --- 다음 링크를 참고하세요\nGitHub Documents ","href":"/2019/06/18/1237/","title":"R Markdown 으로 작성된 것을 GitHub Markdown 으로 바꾸기"},{"content":"","href":"/tags/python3.7/","title":"python3.7"},{"content":"라즈베리 파이에는 Python 3.5.3이 설치되어 있어서, 여기에 Python 3.7.2을 설치하려고 합니다.\n아래 코드의 출처 다음과 같습니다.\nhttp://www.wikipython.com/raspberry-pi/installing-python-3-7-2/ 라즈베리 파이의 터미널에서 다음과 같이 입력하시면 설치가 됩니다.\nsudo apt install build-essential checkinstall sudo apt install libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev sudo apt-get install libffi-dev cd /usr/src sudo wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tgz sudo tar xzf Python-3.7.2.tgz cd Python-3.7.2 sudo ./configure --enable-optimizations sudo make altinstall 아마도 다음과 같은 문구가 나온다면 설치가 완료된 것입니다.\nInstalling collected packages: setuptools, pip Successfully installed pip-18.1 setuptools-40.6.2 Python-3.7.2를 실행하시려면 터미널에서 python3.7이라고 입력하시면 됩니다.\nps: 2019년 4월 16일 현재 Python-3.7.3이 나왔습니다. 이것을 설치하시려면, 위의 코드에서 3.7.2을 3.7.2으로 변경하시면 됩니다.\n","href":"/2019/03/22/1194/","title":"라즈베리 파이에 Python 3.7.2 설치"},{"content":"","href":"/tags/ios/","title":"iOS"},{"content":"","href":"/categories/ios/","title":"iOS"},{"content":"맥을 사용하는 이유 중의 하나가 맥에는 키노트라는 PT 프로그램이 있기 때문입니다. 전 수업을 키노트를 이용해서 하는데 수업 한 번 하려고 매번 무거운 노트북을 들고 다니는 것도 너무 힘들거군요.\n원래는 아이폰용 키노트가 맥용 키노트보다 품질이 좋지는 았지만, 애플이 맥에서 만든 키노트 파일을 아이폰에서도 그대로 사용하게 하기 위해서 맥용 키노트의 성능을 아이폰용 키노트에 맞춰 다운그래이드하고, 맥용 최신 버젼인 모하비에서는 아예 성능이 좋은 예전 맥용 키노트가 작동하지 못 하게 만들었습니다. 결국 이제는 맥용과 아이폰용 키노트는 거의 90% 같은 것이라고 할 수 있습니다.\n이런 결과로 아이패드를 이용해서 수업시간에 키노트를 사용해서 PT를 해도 상관없게 되어버렸습니다.그런데 문제는 아이폰용 키노트는 아이폰에 없는 폰트를 공식적으로 사용할 수 없더군요. 그래서 맥에서 만들어서 iCloud Dive에 넣어 사용하려고 하면 폰트가 없다는 에러가 나오더군요. 그래서 상심하다가 혹시나 하고 찾아 봤더니 방법이 있었습니다. 아래 링크 참고!\nHow to install custom fonts on your iPhone or iPad | Cult of Mac\n설치하는 방법은 다음과 같습니다.\n아이폰이나 아이패드에서 iFont을 설치합니다. 돈을 내면 광고를 제거할 수 있지만, 굳이 그렇게 하지 않아도 폰트를 설치할 수 있습니다. 2.본인이 사용하고자 하는 폰트를 새로 폴더를 만들어서 거기에 넣고, 이 폴더를 zip으로 압축합니다. 맥에서는 파인더에서 \u0026ldquo;압축하기\u0026quot;를 쓰시면 됩니다. 그런 다음 이 압축한 파일을 iCloud Dive, dropbox 같은 곳에 업로드합니다. 전 iCloud Dive를 사용했습니다. 3.다 업로드 되면 아이폰이나 아이패드에서 위에서 올린 zip 파일을 \u0026lsquo;파일\u0026rsquo;이나 \u0026lsquo;dropbox\u0026rsquo; 앱에서 확인합니다. 4.올린 파일을 선택해, \u0026lsquo;공유\u0026rsquo; 메뉴가 나오면, 앞에서 설치한 iFont이 나올 것입니다. 이것을 선택하면, iFont이 폰트 파일의 압축을 풀고 저장합니다. 5.다 저장되면, iFont 앱을 실행합니다. 아래 메뉴에서 \u0026lsquo;files\u0026rsquo;를 선택하면 앞에서 저장한 폰트가 보일 것입니다. 여기서 아이폰에 설치하고 싶은 폰트 이름 옆에 있는 \u0026lsquo;install\u0026rsquo; 버튼을 누르고 계속 진행하면 아이폰에 그 폰트가 설치될 것입니다. 6.iFont 앱에서 \u0026lsquo;installed\u0026rsquo; 메뉴를 누르시면 설치된 폰트를 확인하실 수 있습니다.\u0026gt; 7.이제 키노트에서 서체를 선택하시면 앞에서 설치한 폰트를 사용할 수 있습니다. ","href":"/2018/12/17/1173/","title":"아이폰 또는 아이패드 키노트에서 아이폰 또는 아이패드에 없는 폰트를 사용하는 법"},{"content":"","href":"/tags/namedtuple/","title":"namedtuple"},{"content":"파이썬에서 리턴값이 조금 복잡해지면, 딕셔너리를 많이 사용했었습니다. 그런데 이렇게 만든 함수를 쓰려면(함수 이름을 \u0026lsquo;fun\u0026rsquo;이라고 합시다!), fun[\u0026rsquo;name\u0026rsquo;] 과 같이 딕셔너리를 불러오는 방식으로 써야합니다. 뭐 키보드를 많이 두드려야 합니다. 그래서 이를 쉽게 하는 방법을 찾다가 Not using named tuples when returning more than one value from a function이라는 글을 봤습니다. namedtuple을 이용해서 하면 fun.name과 같이 쉽게 처리할 수 있습니다. 윗글에서 코드를 가져왔습니다. 아주 쉽게 처리할 수 있습니다! name = namedtuple(\u0026quot;name\u0026quot;, [\u0026quot;first\u0026quot;, \u0026quot;middle\u0026quot;, \u0026quot;last\u0026quot;]), 코드에서 namedtuple을 만들어서 return name(\u0026quot;Richard\u0026quot;, \u0026quot;Xavier\u0026quot;, \u0026quot;Jones\u0026quot;)같이 사용하는 것입니다. 그러면 만들 때 사용했던, [\u0026quot;first\u0026quot;, \u0026quot;middle\u0026quot;, \u0026quot;last\u0026quot;]을 가지고 처리할 수 있게 됩니다.\nfrom collections import namedtuple def get_name(): name = namedtuple(\u0026#34;name\u0026#34;, [\u0026#34;first\u0026#34;, \u0026#34;middle\u0026#34;, \u0026#34;last\u0026#34;]) return name(\u0026#34;Richard\u0026#34;, \u0026#34;Xavier\u0026#34;, \u0026#34;Jones\u0026#34;) name = get_name() # much easier to read print(name.first, name.middle, name.last) ","href":"/2018/11/30/1160/","title":"파이썬에서 함수를 만들 때, 리턴값으로 `namedtuple`을 써보자."},{"content":"","href":"/tags/homebrew/","title":"Homebrew"},{"content":"통상적으로 웹 상에 있는 자료를 수집할 때 , 로그인과 같은 것을 처리하려면 PhantomJS을 이용해서, 즉 화면이 존재하지 않는 웹 브라우저, Headless Browser을 사용해서 웹 크롤링을 합니다. 그런데 문제는 이 방법이 진짜 웹 브라우저를 실행하는 것은 아니기 때문에 자잘한 문제가 많았습니다. 이를 해결하는 방법이 나왔는데, 창없는 크롬으로 크롤링하기 | Beomi\u0026rsquo;s Tech Blog입니다.\n이 방법을 사용하기 위해서는 앞의 링크에서 언급한 것처럼 크롬과 chromedriver을 설치해야 합니다. 크롬은 설치하는 것을 쉽지만, chromedriver를 링크에서 언급한 곳에서 다운 받아 설치하면, 조금 번거로운 과정(chromedriver를 받아서 압축을 풀고, 그 압축을 푼 폴더 위치를 정확하게 찾아서 알아야 하는 과정)을 겪어야 합니다.\n맥에서는 이를 쉽게 하는 방법이 있습니다. 이게 바로 Homebrew, macOS 용 패키지 관리자 — macOS 용 패키지 관리자를 사용하는 것입니다. 만약 맥에서 크롤링과 같은 작업을 하신다면, 이미 이게 무엇을 하는 것인지 알 것입니다. 모르신다면 설치할 가치가 있으니, Homebrew 사용법을 구글링해 볼 가치가 있습니다.\nHomebrew를 알아보고 설치하셨다면, 터미널에서 brew cask install chromedriver이라고 치고 엔터를 누르면, 바로 chromedriver를 설치할 수 있습니다. 이렇게 설치한 다음 나만의 웹 크롤러 만들기(7): 창없는 크롬으로 크롤링하기 | Beomi\u0026rsquo;s Tech Blog에서 가져온 아래 python 코드를 실행하면, 바로 현재 naver 페이지를 naver_main_headless.png이라는 이름으로 저장할 것입니다.\nfrom selenium import webdriver options = webdriver.ChromeOptions() options.add_argument(\u0026#39;headless\u0026#39;) options.add_argument(\u0026#39;window-size=1920x1080\u0026#39;) options.add_argument(\u0026#34;disable-gpu\u0026#34;) # 혹은 options.add_argument(\u0026#34;--disable-gpu\u0026#34;) driver = webdriver.Chrome(\u0026#39;chromedriver\u0026#39;, chrome_options=options) driver.get(\u0026#39;http://naver.com\u0026#39;) driver.implicitly_wait(3) driver.get_screenshot_as_file(\u0026#39;naver_main_headless.png\u0026#39;) driver.quit() 참고: homebrew - Brew install chromedriver not working? - Stack Overflow\n추가: 맥에서 설치가 잘 되지 않으면 다음 글을 참고하세요! 맥에서 보안 때문에 사용할 수 없는 크롬드라이버 사용하는 법\n","href":"/2018/09/25/1153/","title":"맥에서 홈브루(Homebrew)를 이용해서 chromedriver를 설치하기"},{"content":"한국에서는 워낙 윈도우가 압도적으로 사용되는 곳입니다. 그래서 맥을 사용하는 사람 입장에서는 윈도우에서 만든 기본적인 자료, txt나 csv 형식 자료를 읽는데 가끔 문제가 생기기도 합니다. 물론 맥에서 작업하던 파일을 윈도우에 가져와 작업하려면 문제가 많이 발생합니다.\nR을 사용할 때도 문제가 많이 생깁니다. 이는 파일에 들어가는 글자를 어떤 형식으로 구성하느냐 하는 문제, 즉 인코딩 문제 때문입니다. 일반적으로 윈도우는 euc-kr를 사용하고, 반면에 맥이나 리눅스는 utf-8을 사용하기 때문입니다.\n이 문제를 극복하기 위한 여러가기 꼼수가 있었지만, R에서 이를 처리하는 함수를 하나 만들어서 처리하는 방식이 있어서 소개하고자 합니다. 이 방법은 r에서 한글문서 열때 인코딩 문제 에 소개된 것입니다. 뭐 이 글의 아이디어를 제가 했기 때문에 여기에 소개해도 무방할 것 같네요 ^^;\n뭐 사용하는 방법은 간단합니다. 우선 이 함수를 사용하기 위해서 library(readr)을 입력합니다. 만약 에러가 난다면, install.packages(\u0026quot;readr”)이라고 실행해서 패키지를 설치합니다. 패키지가 설치가 안 되면 R을 최신 것으로 설치하시면 됩니다. 그리고 다음과 같이 함수를 입력합니다. 전체 과정은 다음과 같이 하시면 됩니다.\nhttps://gist.github.com/dialektike/fd38a8fe76f32ddf41559bac144d6878\nR을 많이 사용하신 분은 어떻게 사용할지 감을 잡으셨겠지만, 저와 같은 초보자를 위해서 한 번 사용해보겠습니다. 우선 다음 링크를 눌러서 사용할 샘플자료를 다운 받으세요! 바로 저장하시면 됩니다.\n2017년 7월 8일 KBO 타격 순위 (윈도우 용) 이 자료에 들어 있는 2017_7_8_KBO_win.csv 파일을 R에서 자료를 읽을 수 있는 폴더에 넣으세요. R에서 dir()을 입력했을 때, 위 파일 이름이 있는지 확인하세요.\n맥에서 이 파일을 읽는 진행과정은 다음과 같습니다. 처음에는 read.csv()을 사용해서 읽는데 실패했던 파일이 read.any()을 이용해서는 성공하네요.\nhttps://gist.github.com/dialektike/8c877a79135629544cce2ccd59d27b85\n","href":"/2017/07/13/1121/","title":"Mac 용 R에서 잘 읽지 못 하는 한글 파일을 잘 읽는 방법"},{"content":"","href":"/tags/%ED%95%9C%EA%B8%80/","title":"한글"},{"content":"","href":"/tags/noesis/","title":"Noesis"},{"content":"플라톤의 대화편이 테아이테토스를 읽다가 갑자기 ‘노에시스’라는 단어가 생각나서 찾아봤더니 후설:노에시스/노에마이라는 글을 발견했다. 이 곳에 다음과 같은 내용이 있었다.\n중기부터 후기에 걸쳐 후설은 이 두 번째의 측면을 노에시스적 계기, 줄여서 노에시스(Noesis)라 불렀다.(좀 더 넓은 의미로, 지향적 체험 전체를 노에시스로 부르기도 한다.) 이것을 후설이 그리스어 누스\u0026rsquo;Nous(정신, 이성)\u0026rsquo; 와 \u0026lsquo;노에인Noein(사유하다, 지각하다, 직관하다)\u0026lsquo;을 결합시켜 만들어낸 술어이다. 노에시스를 직역하면 \u0026lsquo;의식작용\u0026rsquo;이 된다.\n진짜 그런가 하고 희랍어 텍스트에 이 단어가 들어있는 곳이 없는지 다음과 같이 Noesis를 검사해봤다. Perseus under Philologic: searching for νόησις\n링크를 눌어보면 아시겠지만, 아쉽게 31군데에서 이 단어가 발견되었다. 결국 이 단어는 후설이 자신의 철학 체계에 끌어다 쓴 것일 뿐, 조어한 것은 아닐 것 같다.\n","href":"/2017/04/13/1116/","title":"Noesis 라는 단어의 출처는 어디일까?"},{"content":"","href":"/tags/%EB%85%B8%EC%97%90%EC%8B%9C%EC%8A%A4/","title":"노에시스"},{"content":"","href":"/categories/%EC%B2%A0%ED%95%99/","title":"철학"},{"content":"","href":"/tags/raspberry-pi/","title":"Raspberry Pi"},{"content":"저는 라즈베리파이를 서버로 사용하고 있습니다. 터미널을 사용하다가 서버의 IP 주소를 알고자 할 때에는 조금 부식한 명령어인 ifconfig를 사용했습니다. 그런데 Raspberry Pi를 사용하다고 조금 더 쉬운 명령어를 알았습니다. hostname -I이라고 터미널에서 쓰면 바로 IP번호가 나옵니다. 이게 더 단순하게 이쁘게 나오네요! 아마도 파이가 우분투를 사용하니, 우분투를 사용하는 리눅스에서도 이 명령어는 돌아갈 것 같습니다. 맥에서는 이 명령어가 작동하지 않네요. 참고하세요. 이 내용은 Worksheet - Build a Python Web Server with Flask | Raspberry Pi Learning Resources에서 찾았습니다. ^^;\n","href":"/2017/04/10/1111/","title":"터미널을 이용해서 현재 Raspberry Pi 서버의 IP 번호를 알고 싶을 때?"},{"content":"구글에서 만든 Google\u0026rsquo;s R Style Guide를 번역해 봤습니다.\n번역한 것을 보시려면, 아래 링크를 가시면 됩니다. 영어 부분은 링크파일에 주석처리되어 있습니다. 이상한 부분은 코드를 직접 보시고 확인해주셔도 됩니다. 앞부분에 있는 참고 부분을 추가한 것을 빼고는, 거의 구조와 내용은 손대지 않고 영어만 한글도 번역했습니다. 꼭 번역이 필요하지 않다고 생각된 부분은 번역을 하지 않았습니다.\nGoogle\u0026rsquo;s R Style Guide\n제가 전문 번역가가 아니기 때문에 이상한 부분이 많을 것 같습니다. 이상한 부분을 아래 링크를 통해 지적해주시면 수정하도록 하겠습니다. 참! 답글을 다실려면 github.com 아이디가 필요합니다.\n구글 R 스타일 가이드(Google\u0026rsquo;s R Style Guide) 번역\n","href":"/2017/03/06/1108/","title":"구글 R 스타일 가이드(Google's R Style Guide)을 번역해 보았습니다."},{"content":"","href":"/categories/%ED%86%B5%EA%B3%84%ED%95%99/","title":"통계학"},{"content":"제목 그대로 다음과 같은 오류가 날 수 있습니다.\nhttps://gist.github.com/dialektike/f939309cd457ead414bb02e997b5a303\n그러면 XQuartz에 가서 XQuartz을 다운받아서 설치하시고 R을 종료하고 재실행하시면 잘 설치됩니다. 출처는 다음과 같습니다.\nInstalling \u0026ldquo;rgl\u0026rdquo; package in R, Mac OSX El Captian [fixed] - Stack Overflow\n","href":"/2016/12/28/1097/","title":"Mac 에서 R의 rugarch 패키지 설치시 오류가 날 때 처리법"},{"content":"","href":"/tags/rugarch/","title":"rugarch"},{"content":"","href":"/tags/mpv/","title":"mpv"},{"content":"맥에는 이미 무비스트라는 걸출한 동영상을 보는 앱이 있기 때문에, 다른 앱이 거의 필요가 없죠. 그러나 가끔은 다른 앱이 필요한 경우가 있습니다. 이런 경우 저는 MPlayerx, MPlayer, VLC 등을 사용했었습니다. 그러나 MPlayerx은 malware 문제가 있는 관계로 바로 지워 버렸고, MPlayer 도 설치하는 것이 어렵고 뭘 설치해야 하는지 정신이 없고, VLC는 좀 사용하기가 불편했습니다. 예를 들어 앞으로 돌리기, 뒤로 되돌아 가기 등을 잘 찾을 수가 없더군요.\n그러던 중 mplayer2 과 MPlayer을 포크해서(즉 소스를 갖다가 새로 만든) mpv(mpv.io)라는 새로운 플레이어 앱을 알게 되었습니다. 앞의 링크로 가보시면 아시겠지만, 정말로 단순한 UI을 가지고 있습니다. 물론 그건 것이 더 마음에 들었습니다. 그래서 설치를 해보고자 했더니 홈페이지에 OS X용은 다른 곳에 다운 받게 되어있더군요. 요즘 의심이 많아진 상태라서 앱을 직접 받는 것이 아니라 다른 방식으로 해보자는 생각이 들었습니다.\nmpv.io | Installation를 보시면 아시겠지만, Homebrew으로 설치가 가능한 것 같더군요. 그래서 바로 설치에 들어갔습니다. Homebrew에 관련된 이야기는 다음 링크들을 참고하세요. 맨 마지막 링크를 보시면, 맥에 서버 같은 것을 쉽게 설치해주기도 합니다.\n개발자를 위한 맥(Mac) 정보 – 패키지관리자 Homebrew | Popit homebrew - 생활코딩 [mac]mac os 터미널에서 HomeBrew 설치 Homebrew | 아이군의 블로그 우선 Homebrew — macOS 용 패키지 관리자을 참고하여 Homebrew을 설치합니다. 그런 다음 다음과 같이 터미널에서 2줄만 입력하시면 됩니다. 참고로 첫번째 줄은 mpv이 있는지 확인하는 것입니다. 두번째 줄은 Homebrew를 최근 버젼으로 업그래이드 하는 것입니다. 마지막 세 번째 줄이 mpv이 바로 설치하는 명령어입니다.\nbrew search mpv brew update brew install mpv 뭐 이렇게 설치하면 앱 아이콘도 생기지 않습니다. 그러면 어떻게 mpv을 실행할까요? 터미널에서 실행하면 됩니다. mpv 파일명과 같이 입력하시면 됩니다. 불편해 보입니다. 그래서 제가 쓰는 편한 방법을 알려드리겠습니다. 우선 터미널에서 mpv이라고 키보드는 칩니다. 그런 다음 거기에 실행하고 싶은 파일 아이콘을 파인더에서 드래그 하여 터미널에 넣습니다. 그러면 파일 이름이 들어가게 됩니다. 그런 다음 엔터 키를 누르시면 됩니다. 뭐 설명은 복잡하지만, 한번해보시면 쉽습니다.\n뭐 새로운 플래이어가 필요하시면 한번씩 설치해보세요! 생각보다 쓸만합니다.\n","href":"/2016/11/21/1094/","title":"맥에 mpv을 설치해보자!"},{"content":"","href":"/tags/philosophy/","title":"philosophy"},{"content":"","href":"/tags/ren%C3%A9-descartes/","title":"René Descartes"},{"content":"당근 지금 나는 생각하고 있겠지. 내가 있어야 생각할 수 있겠지. 없으면 생각할 수 있겠어? 나는 이것이 나에게 명석판명하게(clearly and distinctly), 인식되기 있기 때문에 참이라고 생각해. 그런데 그렇다고 해서, 다시 말해 내가 생각하고 있다고 해서, 내가 생각하고 있기 때문에, 이것을 근거로 내가 내 몸을 갖고 있다고 말할 수는 없지. 물론 나는 있지만 \u0026hellip;?!\n만일 내가 사고하지 않는다면 나는 내가 존재한다고 믿을 어떤 근거도 지니지 못할 것이다. 따라서 나는 오직 사고하는 것만을 본질로 삼는 실체이다. 따라서 내가 육체를 지닌다는 점은 나의 본질과 전혀 무관하다. 엔서니 케니, 『근대철학』, 김정호 옮김, 2014, 71~72쪽.\nCogito ergo sum - Wikipedia\n데카르트가 새로운 옷을 만들어 그 옷을 입고 다녔는데 이 패션이 유행이 되었다. 모든 철학자들이 그 유행에 적합한, 그 옷에 잘 맞는 사람들이 아니었다. 데카르트이기 때문에 이 옷이 잘 맞았던 것일뿐이다.\n고대 이래 자기 자신을 완전히 새로운 철학을 제시한 인물로 여긴 최초의 철학자는 바로 데카르트였다. 그는 자신을 인간과 인간을 둘러싼 세계에 관한 진리를 최초로 제시한 특권을 누린 인물로 여겼다. 이후 철학자들은 데카르트가 걸었던 길을 따랐다. 로크, 흄, 칸트는 각각 자신의 철학을 최초로 건전한 원리에 따라 구성된 새로운 창조물로 여겼다. ‘내 저술을 읽어라, 이전 사람들의 저술은 내다 버려라’ - 이것이 17, 18세기 사상가들의 한결 같은 주장이었다, 엔서니 케니, 『근대철학』, 김정호 옮김, 2014, 77쪽.\n","href":"/2016/10/31/1085/","title":"데카르트의 Cogito ergo sum 에 대한 짧은 느낌"},{"content":"","href":"/tags/utf-8/","title":"UTF-8"},{"content":"","href":"/tags/windows/","title":"windows"},{"content":"뭐 간단한 팁인데요.\nR을 사용하면서 csv파일을 맥, 윈도우, 리눅스 간에 같이 사용하는 경우가 있습니다. 이때 맥과 리눅스 간에는 유니코드 인코딩 방식중 UTF-8을 사용하면 그리 문제없이 파일을 공유할 수 있습니다. 그런데 문제는 윈도우가 끼어들면 문제가 복잡합니다. 윈도우에서 만들어진 csv 파일이 맥이나 리눅스에서 잘 안 읽어지는 경우가 많습니다.\n물론 고수이신 분들은 다 쉽게 처리하시겠지만, 저는 항상 이런 경우 문제가 많았습니다. 그런데 아주 쉬운 방법을 하나 찾았습니다. 맥으로 파일을 보내기 전에 윈도우에서 보낼 csv 파일을 윈도우에서 메모장을 엽니다. 만약 파일이 크면 잘 안 열릴 수도 있습니다. 참고로 윈도우 10에서는 메모장이 100MB까지는 여는 것 같습니다.\n그런 다음 파일 메뉴에서 다른 이름으로 저장을 선택하시면 아래와 같은 다이얼로그박스가 나옵니다. 여기서 아래와 같이 인코딩을 UTF-8을 바꾸신 다음 저장해주세요. 그런 다음 맥으로 보내시면, 문제 없이 R에서는 사용하실 수 있습니다.\n다른 이름으로 저장 ","href":"/2016/08/22/1074/","title":"윈도우에서 만든 csv 파일을 Mac에서 사용하는 R에서 쉽게 열어보자."},{"content":"","href":"/tags/latex/","title":"latex"},{"content":"RStudio에는 기본적인 R보다 유용한 기능이 많습니다. 그중에서는 저는 knitr 패키지를 이용하여 R 코드가 들어있는 R Markdown으로 쓰여진 글을 HTML이나 pdf 파일로 만들어 주는 기능에 관심이 많았습니다. 물론 프리뷰(Preview) 버젼인 RStudio Version 0.99.1273에는 이것 보다 더 진보한R Markdown Notebooks이 들어 있습니다.\n그러나 문제는 이 기능이 영어로만 되어 있는 것은 잘 되는데, 유난히 한글만 들어가면 잘 안 된다는 것입니다. HTML로 변환하는 것은 잘 되는 것 같았는데, pdf으로 변환하는 것이 문제였습니다. 그러다가 우연히 권재명님이 쓰신 Jaimyoung/data-science-in-korean: 한국어를 포함한 데이터와 분석코드를 다루는 팁을 살펴보다가 https://raw.githubusercontent.com/Jaimyoung/data-science-in-korean/master/test-template.Rmd이라는 링크를 발견했습니다. 이 파일을 살펴보니 다음과 같이 되어 있었습니다.\ntitle: \u0026#34;한글 레퍼런스 R 마크다운 템플릿\u0026#34; author: \u0026#34;권재명\u0026#34; date: \u0026#34;July 18, 2015\u0026#34; output: word_document: highlight: tango reference_docx: korean-template.docx pdf_document: latex_engine: xelatex mainfont: NanumGothic 그래서 이것을 참고로 RStudio 기본 파일을 다음과 같이 수정해서 아래와 같이 수정하니, 한글이 들어 있어도 pdf 파일로 잘 변환됩니다. 아래 내용은 기본 파일에서 앞부분만 고치고 한글이 들어 있는 내용을 한 줄 넣은 것입니다.\nhttps://gist.github.com/dialektike/64658e43e556b0cec7377b35b203880a\nRStudio에서 새 파일 에서 R Markdown은 선택하신 후 이미 만들어진 내용을 다 지우신 다음, 위의 코드를 붙여넣기를 하신 다음, knit라는 버튼을 눌러서, HTML과 pdf 파일로 변환하시면, 한글이 잘 나오는 것을 확인하실 수 있습니다. 참고로 pdf를 만드시려면 Latex를 설치하셔야 됩니다.\n","href":"/2016/08/04/1067/","title":"RStudio를 이용하여, R 코드와 한글이 들어 있는 R Markdown으로 쓴 파일을 pdf로 만드는 팁!"},{"content":"우리 나라에서 사용하는 연비란 에너지관리공단 수송에너지 \u0026gt; 자동차공인연비 \u0026gt; 공인연비에 따르면 연료 1ℓ로 주행 가능한 거리(km)를 말하는 것을 말합니다. 그러나 미국은 연료 1갤런(gallon)으로 주행 가능한 거리를 마일(mile)로 계산하여 연비를 계산합니다. 미국이랑 우리나라가 단위가 다르니 생기는 문제입니다. 참고로 1갤런은 3.785411784리터(참고: 갤런 - 위키백과, 우리 모두의 백과사전) 이고 1 마일은 1.609344 킬로미터(참고: 마일 - 위키백과, 우리 모두의 백과사전) 입니다.\n뭐 사전 지식은 다 알았으니, 실제로 연비를 바꿔보겠습니다. 미국 연비를 10부터 40까지 만들보겠습니다.\nmpg \u0026lt; - seq(10,40) mpg을 입력해 확인해보시면, 10부터 40까지 값이 들어있는 것을 보일 수 있습니다. 이것을 미국 연비라고 해봅시다. 이때 이것을 한국 연비로 바꿔 계산해봅시다. 위에서 살펴본 것을 토대로 변환식을 짜면 다음과 같습니다.\nkmL \u0026lt;- (mpg * 1.609344)/3.785411784 kmL을 입력해 확인해보시면, mpg에 들어있던 것을 한국 연비로 바꾼 값을 확인할 수 있습니다. 미국 자동차 연비마일 MPG -\u0026gt; km/L 보는법의 포스트와 비교해 보면, 지금까지 계산한 값이 더 정확하고 자세한 것처럼 보입니다. ^^; 위의 것은 너무 단순해서 조금은 멋지게 패키지를 사용해서 바꿔보도록 하겠습니다. 아래 코드는 지금까지 한 것을 다 넣고 패키지를 설치해서 계산하고 위에서 계산한 것과 패키지를 이용해서 계산한 것을 비교해봤습니다.\nhttps://gist.github.com/dialektike/eae1c9ba77a1d642acaa85435bc98c65\n맨 마지막 줄에 있는 kmL == kmL.uconv 명령을 입력하면 그 결과가 모두 TRUE로 나오는 것을 보니 두 계산 결과가 같은 것임을 확인할 수 있습니다.\n","href":"/2016/07/07/1057/","title":"R에서 미국 연비(MPG)를 한국연비(km/L)로 있어보이게 바꾸기"},{"content":"","href":"/tags/uconv/","title":"uconv"},{"content":"","href":"/tags/gephi/","title":"Gephi"},{"content":"","href":"/tags/sed/","title":"sed"},{"content":"안녕하세요!\n맥이나 리눅스에서 제피(Gephi)를 돌릴 때, 일반적으로 csv 파일을 이용하여 분석합니다. 그런데 Gephi는 csv 파일이 사용하는 ,보다 ;을 이용하여 작업을 하기 때문에, 분석 파일에 들어 있는 ,를 ;으로 바꿔줘야 합니다. 이런 경우 에디터로 해당 파일을 열어서 바꿔줍니다.\n그러나 맥이나 리눅스를 사용하시는 분은 에디터를 사용하지 않고 손쉽게 바꾸실 수 있습니다. 우리가 바꿀 파일이 aaa.csv라고 해봅니다. 그리고 이 파일을 변환하여 바꾼 파일을 bbb.csv라고 해봅시다. 그러면 아래와 같이 터미널에서 한 줄만 명령어를 쳐주시면 됩니다. 정규표현식을 사용하는 것인데, 가운데 s/,/;/g이라는 문장이 ,를 ;으로 바꿔주는 역할을 합니다.\nsed \u0026#39;s/,/;/g\u0026#39; aaa.csv \u0026gt; bbb.csv 이것을 이용하면 단어를 바꾸는데도 사용하실 수 있습니다. 참 윈도우에서는 안 될 것입니다. ^^; 제가 이것을 알게된 곳은 아래와 같습니다.\nmytory.net/archives/12993\n","href":"/2016/02/26/1038/","title":"맥이나 리눅스에서 제피(Gephi)를 돌릴 때, 손쉽게 분석 자료에서 “,”를 “;”로 바꾸는 방법"},{"content":"","href":"/tags/lower/","title":"lower"},{"content":"영어로 된 문자열을 모두 대문자로 바꾸거나 소문자로 바꿔야 할 경우가 있습니다. 그럴 때에는 toupper or tolower 아래와 같이 사용하면 됩니다.\n\u0026gt; test \u0026lt;- c(\u0026#34;Test tesT\u0026#34;) ##입력 \u0026gt; test ## 확인 [1] \u0026#34;Test tesT\u0026#34; \u0026gt; tolower(test) ## 소문자로 바꿉니다. [1] \u0026#34;test test\u0026#34; \u0026gt; toupper(test) ## 대문자로 바꿉니다. [1] \u0026#34;TEST TEST\u0026#34; R에서 다음과 같이 입력 하시면 도움말을 보실 수 있습니다.\n?toupper ?tolower https://gist.github.com/dialektike/4973ba184b8c6ccc49da\n","href":"/2016/01/22/1030/","title":"R 에서 대문자를 소문자로, 소문자를 대문자로 바꾸는 방법"},{"content":"","href":"/tags/upper/","title":"upper"},{"content":"","href":"/tags/idea/","title":"Idea"},{"content":"","href":"/tags/%EA%B7%B8%EB%A6%AC%EC%8A%A4/","title":"그리스"},{"content":"","href":"/tags/%EC%B2%A0%ED%95%99/","title":"철학"},{"content":"","href":"/tags/%EC%B2%A0%ED%95%99%EC%82%AC/","title":"철학사"},{"content":" The Principle of Commonality. Wherever several things are F, this is because they participate in or imitate a single Idea of F (Phd. 100c; Men. 72c, 75a; Rep. 5. 476a10, 597c). The Principle of Separation. The Idea of F is distinct from all the things that are F (Phd. 74c; Smp. 211b). The Principle of Self-Predication. The Idea of F is itself F (Hp. Ma. 292e; Prt. 230c–e; Prm. 132a–b). The Principle of Purity. The Idea of F is nothing but F (Phd. 74c; Smp. 211e). The Principle of Uniqueness. Nothing but the Idea of F is really, truly, altogether F (Phd. 74d, Rep. 5. 479a–d). The Principle of Sublimity. Ideas are everlasting, they have no parts and undergo no change, and they are not perceptible to the senses (Phd. 78d; Smp. 211b). ","href":"/2016/01/11/1015/","title":"플라톤의 대화편에서 이데아(희랍어 :ἰδέα, 영어:Idea)을 어떻게 이해할까?"},{"content":"","href":"/tags/statistics/","title":"statistics"},{"content":"엑셀(Excel)의 VLOOKUP 함수는 멋진 기능을 하는 함수 입니다. 엑셀(Excel) VLOOKUP함수, HLOOKUP함수 사용법 :: 빌노트의 노트을 보시면, 어떤 기능을 하는 것인지 알 수 있습니다. R에서 할 수 있지 않을까 하는 생각이 들어서 한번 구현해 봤습니다.\nR에서는 크게 두 가지 방법이 있는데 여기서는 merge이라는 함수를 사용해봤습니다. 그래서 최종 결과물의 순서가 위 링크에 있는 순서가 다르게 되었습니다.\n\u0026gt; a \u0026lt;-c(100,200,300,400,500) \u0026gt; a [1] 100 200 300 400 500 \u0026gt; b \u0026lt;- c(\u0026#34;컴퓨터\u0026#34;,\u0026#34;DSLR\u0026#34;,\u0026#34;냉장고\u0026#34;,\u0026#34;TV\u0026#34;,\u0026#34;에어컨\u0026#34;) \u0026gt; b [1] \u0026#34;컴퓨터\u0026#34; \u0026#34;DSLR\u0026#34; \u0026#34;냉장고\u0026#34; \u0026#34;TV\u0026#34; \u0026#34;에어컨\u0026#34; \u0026gt; c \u0026lt;- c(700000,450000,2300000,4100000,1400000) \u0026gt; c [1] 700000 450000 2300000 4100000 1400000 \u0026gt; items \u0026lt;- data.frame(번호=a, 상품명=b, 단가=c) \u0026gt; items 번호 상품명 단가 1 100 컴퓨터 700000 2 200 DSLR 450000 3 300 냉장고 2300000 4 400 TV 4100000 5 500 에어컨 1400000 \u0026gt; orderNumbers \u0026lt;- data.frame(번호=c(200,100,500)) \u0026gt; orderNumbers 번호 1 200 2 100 3 500 \u0026gt; Order \u0026lt;- merge(items, orderNumbers, by.x=\u0026#34;번호\u0026#34;, by.y=\u0026#34;번호\u0026#34;) \u0026gt; Order 번호 상품명 단가 1 100 컴퓨터 700000 2 200 DSLR 450000 3 500 에어컨 1400000 \u0026gt; Order$수량 \u0026lt;-c(1,3,1) \u0026gt; Order$금액 \u0026lt;- (Order$단가 * Order$수량) \u0026gt; Order 번호 상품명 단가 수량 금액 1 100 컴퓨터 700000 1 700000 2 200 DSLR 450000 3 1350000 3 500 에어컨 1400000 1 1400000 \u0026gt; sum(Order$금액) [1] 3450000 ","href":"/2016/01/06/995/","title":"엑셀(Excel)의 VLOOKUP 함수 기능을 R에서도 구현해보자!"},{"content":"생각 보다 단순합니다. Atom 에디터 메뉴에서 Find 메뉴에서 Find in Buffer 를 선택합니다. 그러면 에디터 아랫 부분에 다음과 같은 메뉴가 뜹니다.\nAtom에서 정규 표현식 사용하기 위에서 파란색으로 되어 있는 버튼을 눌러서 선택합니다. 그러면 저처럼 파란색이 되거나 다른 색으로 반전되면서 위에 “Finding with Options: Regex, ~ ”과 같은 문장이 보기에 됩니다. 그런 다음 앞에 칸에 사용할 정규표현식을 쓰시면 됩니다. 전 HTML 주석을 제거하기 위하여 거기에 \u0026lt;!--(.|\\s)*?--\u0026gt;이라고 적었습니다.\n정규 표현식을 배우시려면 영어로 된 RegExr: Learn, Build, \u0026amp; Test RegEx에서 배우실 수 있습니다.\n","href":"/2016/01/02/988/","title":"Atom 에서 정규 표현식(regular expression)을 사용하기"},{"content":"","href":"/tags/html/","title":"HTML"},{"content":"","href":"/tags/regular-expression/","title":"regular expression"},{"content":"","href":"/tags/nsdate/","title":"NSDate"},{"content":"","href":"/tags/nsdatecomponents/","title":"NSDateComponents"},{"content":"","href":"/categories/swift/","title":"swift"},{"content":"","href":"/tags/swift/","title":"Swift"},{"content":"swift에서 초 단위의 데이터를 사용하지 않고, 내일 날자를 구하는 코드입니다.\n// 아래 코드는 swift 2.0에서 현재 시간에 하루를 더하는 것을 보여주고 있습니다. let now = NSDate() // 현재 시간 정보를 넣습니다. let comp = NSDateComponents() // 하루를 더하기 위해서 NSDateComponents를 하나 만듭니다. comp.setValue(1, forKey: \u0026#34;day\u0026#34;) // 위에서 만든 곳에 1일을 넣습니다. forKey를 바꾸면 다른 것도 넣을 수 있습니다. let myCal = NSCalendar.init(calendarIdentifier: NSCalendarIdentifierGregorian) // 하루를 더해서 넣을 NSCalendar를 하나 만듭니다. let tomorrow = myCal!.dateByAddingComponents(comp, toDate: now, options: NSCalendarOptions(rawValue: 0)) // 위에서 만든 현재 시간인 now에 myCal을 이용하여 하루를 더해서 tomorrow에 넣습니다. ","href":"/2015/12/07/965/","title":"내일 날자를 만들어 봅시다."},{"content":"","href":"/tags/markdown/","title":"Markdown"},{"content":"마크다운(Markdown)으로 글을 쓰고 나서, 막상 대괄호(backslash bracket)인 \u0026lsquo;[ \u0026lsquo;이 사라지는 경우가 왕왕 있습니다. 이럴때는 앞 대괄호 앞에 \u0026lsquo;\\[\u0026lsquo;처럼 \\을 넣어주시면 간단하게 해결되기도 합니다. 만약 뒷 대괄호가 안 나온다면, 위와 마찬가지로 \u0026lsquo;\\]\u0026lsquo;처럼 그 앞에 \\에 넣어주시면 됩니다. 만약 \\이 키보드에 없거나 화면에 표시 되지 않는 경우가 있습니다. 역슬래시,\u0026rsquo;'대신 키보드에서 원화 마크를 찾아서 사용하시면 됩니다.\nPS:혹시 이 글에서 역슬래시가 안 나오고 원화 마크가 계속해서 나오면, 문제가 없는 것이니 위의 문제 해결을 하기 위해서 원화마크를 쓰시면 됩니다.\n","href":"/2015/12/05/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4markdown%EC%9C%BC%EB%A1%9C-%EA%B8%80%EC%9D%84-%EC%93%B0%EB%A9%B4%EC%84%9C-%EB%8C%80%EA%B4%84%ED%98%B8backslash-bracket-%EC%9D%84-%ED%91%9C%EC%8B%9C%ED%95%98%EA%B8%B0/","title":"마크다운(Markdown)으로 글을 쓰면서 대괄호(backslash bracket), '[, ]'을 표시하기"},{"content":"R에서는 170!까지만 계산할 수 있습니다(아래 코드 참조). 171!부터는 다음과 같이 일반적인 방법으로 계산할 수 없습니다.\n\u0026gt; factorial(170) [1] 7.257416e+306 \u0026gt; factorial(171) [1] Inf 경고메시지(들): In factorial(171) : value out of range in \u0026#39;gammafn\u0026#39; 그러면 어떻게 계산할 수 있을까요? factorialZ 을 쓰시면 됩니다. 우선 다음과 같이 gmp를 설치합니다.\n\u0026gt; install.packages(\u0026#34;gmp\u0026#34;) 그런 다음 아래와 같이 하면 됩니다. 참고로 조금 표현 방식이 다르게 나옵니다. 그리고 171!이상도 계산해서 결과를 보여주니, 너무 높은 값을 넣으면, 엄청난 숫자를 보게 되니 주의하세요!\n\u0026gt; factorial(170) [1] 7.257416e+306 \u0026gt; factorialZ(170) Big Integer (\u0026#39;bigz\u0026#39;) : [1] 7257415615307998967396728211129263114716991681296451376543577798900561843401706157852350749242617459511490991237838520776666022565442753025328900773207510902400430280058295603966612599658257104398558294257568966313439612262571094946806711205568880457193340212661452800000000000000000000000000000000000000000 \u0026gt; factorialZ(171) Big Integer (\u0026#39;bigz\u0026#39;) : [1] 1241018070217667823424840524103103992616605577501693185388951803611996075221691752992751978120487585576464959501670387052809889858690710767331242032218484364310473577889968548278290754541561964852153468318044293239598173696899657235903947616152278558180061176365108428800000000000000000000000000000000000000000 ","href":"/2015/11/12/944/","title":"R 에서 170!팩토리얼(factorial), 170계승 이상을 계산하는 법"},{"content":"","href":"/tags/factorial/","title":"factorial"},{"content":"3! = 3 * 2 * 1 = 6 R에서 계산하는 방법은 다음과 같습니다.\n\u0026gt; factorial(3) #3 × 2 × 1 [1] 6 \u0026gt; factorial(52) [1] 8.065818e+67 ","href":"/2015/11/08/938/","title":"R 에서 팩토리얼(factorial), 계승을 계산하는 법"},{"content":"swift 2.0 에서 문자를 세는 방법이 많이 바뀌었습니다. 어떻게 보면 단순해진 것이죠. 다음 코드를 보시면 담박 아실 수 있습니다.\nlet string = \u0026#34;나는 전설이다.\u0026#34; print(string.characters.count) let newString = \u0026#34;I Am Legend.\u0026#34; print(newString.characters.count) 좀 더 자세한 내용은 아래 링크를 확인하세요.\n애플 개발자 문서 Strings in Swift 2\n","href":"/2015/11/07/934/","title":"swift 에서 문자에 들어 있는 글자 숫자를 세어보자."},{"content":"swift에서 String를 NSData로, NSData를 String로 바꾸는 코드입니다.\nvar swift_string = \u0026#34;lorem ipsum dolor sit amet\u0026#34; // from String to NSData let data = swift_string.dataUsingEncoding(NSUTF8StringEncoding) print(data) // from NSData to String var out: String = String(data:data!, encoding:NSUTF8StringEncoding)! print(out) // print \u0026#34;lorem ipsum dolor sit amet\u0026#34; ","href":"/2015/10/12/929/","title":"String 를 NSData 로, NSData 를 String 로"},{"content":"","href":"/tags/shortcode/","title":"shortcode"},{"content":"","href":"/categories/wordpress/","title":"WordPress"},{"content":"초보자가 프로그램을 공부를 하면서 정리도 할 겸 이 곳에서 간단한 소개와 함께 써놓았죠. 워드프레스(wordpress)에서 코드를 보여주기 위해서 단순하게 글에 작은 코드를 넣고 보게끔 만들었습니다. 그런데 그 코드들을 변경하고자 할 경우, 번거롭게 글도 고쳐야 했습니다. 이때 https://gist.github.com를 사용하여 코드를 저장하고 관리하는데 더 편리한 것을 알게되었습니다. 그러면 여기에 저장되어 있는 작은 코드를 어떻게 하면 wordpress에 넣을까 하고 플러그인을 찾아봤습니다. 역시 있더군요.\nhttps://wordpress.org/plugins/gist-github-shortcode/\n사용하는 방법은 단순합니다. 우선 플러그인 Gist GitHub Shortcode을 설치합니다. 그런 다음 이 플러그인을 Plugins 메뉴에서 찾아 활성화(activate) 해 줍니다. 그런 다음 자신이 올린 여러분들이 gist에 올린 코드들의 주소를 찾아서 올리시면 됩니다. 제가 올린 코드의 URL 주소는 https://gist.github.com/dialektike/2b711592501eaf4f964d와 같은데 여기서 2b711592501eaf4f964d이 바로 코드 주소입니다.\n[gist id=\u0026#34;2b711592501eaf4f964d\u0026#34;] https://gist.github.com/dialektike/2b711592501eaf4f964d 상세한 것은 아래 링크를 참고하시면 됩니다.\nhttps://wordpress.org/plugins/gist-github-shortcode/screenshots/\nPS: 최근에 WordPress에서 뜨고 있는 Jetpack by WordPress.com을 설치하셨다면, 굳이 위의 플러그인을 설치하실 필요가 없습니다. 제가 궁금해서 질문을 올렸는데 답변을 받았습니다1. Shortcode Embeds이라는 기능이 위의 플러그인 기능을 대신합니다. 따라서 Jetpack을 까셨다면, gist-github-shortcode을 까실 필요가 없습니다. 심지어 두 개가 충돌하기도 합니다.Jetpack by WordPress.com을 설치하고 Gist를 사용하시는 방법은 Gist — Support — WordPress.com을 보시면 됩니다.\nWordPress › Support » gist-github-shortcode and Shortcode Embeds are conflicting\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","href":"/2015/10/12/920/","title":"wordpress에 Gist GitHub Shortcode 넣기"},{"content":"Swift 2.x에서 string(문자)를 int(숫자)로 바꿔 주는 .toInt() 함수가 없어졌네요. 헐! 그 대신 문자열을 제어할 수 있는 초기자(initializer), Int 가 생겼습니다. 다음 코드를 보시면 쉽게 아실 수 있습니다.\n// from string to int in swift let intString: String = \u0026#34;256\u0026#34; let stringInt: Int? = Int(intString) ","href":"/2015/09/21/888/","title":"Swift 2.x에서 .toInt() 명령어가 사라지고, 대신 초기자 Int 등장!"},{"content":"","href":"/categories/latex/","title":"Latex"},{"content":"혹시 MacTeX을 쓰시는 분은 다음 링크에서 업그레이드 하세요! 현재 다운로드 속도가 느리네요.\nhttps://tug.org/mactex/mactex-download.html\n","href":"/2015/07/06/872/","title":"MacTeX-2015이 6월 14일에 나왔습니다."},{"content":"","href":"/tags/tex/","title":"Tex"},{"content":"","href":"/tags/book/","title":"book"},{"content":"","href":"/categories/books-i-read/","title":"Books i read"},{"content":" 286쪽: 이제 마지막이라고 한마디 하자면, 나는 책이란 만인의 대학이라고 생각한다. 어느 대학에 들어가건 사람이 대학에서 배울 수 있는 것은 양적으로든 질적으로든 극히 일부분에 불과하다. 대학에서도, 대학을 졸업하고 나서도 무엇인가를 배우려고 한다면 인간은 결국 책을 읽지 않을 수 없다. 대학을 계속 다니지 않는다면 아무것도 배울 수 없다. 나는 지금까지 살아오면서 책이라는 대학에 지속적으로 그 누구보다 열심히 다니고 있다. 때로는 책이라는 대학의 한가운데를 하염없이 거닐거나, 노는 기분으로 긴장을 늦추는 행동을 다양하게 취해보면서 공부를 계속해 왔다. 그런 선배가 쓴 가이드북인 이 책이 책의 숲이라는 대학 안에서 때로 길을 잃고 헤매는 사람들에게 안내자로서 도움이 된다면 다행이겠다. 그리고 마지막으로 어떤 책을 읽더라도 잊지 말야야 할 충고 한마디!\n책에 쓰여 있다고 해서 무엇이건 다 믿지는 밀아라. 자신이 직접 손에 들고 확인할 때까지 다른 사람들의 말은 믿지 말아라. 이 책을 포함하여.\nPros: 이 책은 책이 나올 때 바로 읽고 싶었지만, 차일피일 미루고 있다고 이제야 읽었다. 역시 읽을만한 책이었다. 역시 책은 많이 읽는 사람은 다르다는 것을 느꼈다. 책에 대한 생각, 독서에 대한 입장, 많은 것을 배울 수 있었다. 나도 책을 좀 읽는다고 생각했지만, 이 책을 보고 나서 책 좀 읽었다고 하지 말아야 겠다는 생각이 들었다.\nCons: 일본 사람을 위해 쓴 책이라 소개해주는 책이나 출판 업계 이야기 등은 우리나라의 여건과는 한참 달랐다.\n지은이: 다치바나 다카시\n옮긴이: 이언숙\n펴낸곳: 청어람미디어\n출판연도: 2010. 10. 10.\nyes24 책 링크\n","href":"/2015/04/10/863/","title":"나는 이런 책을 읽어왔다"},{"content":"","href":"/tags/mean/","title":"mean"},{"content":"","href":"/tags/median/","title":"median"},{"content":"","href":"/tags/mode/","title":"mode"},{"content":"","href":"/tags/range/","title":"range"},{"content":"R로 평균값(mean), 중간값(median), 최빈값(mode), 범위(range), 분산(variance)을 구해보겠습니다. 그러기 위해서는 우선 준비작업으로 값을 넣어보겠습니다.\n여기서 입력하고자 하는 값들은 농구선수가 게임당 특점한 값들이라고 가정했습니다. 1번째 줄은 그 자료를 입력하는 것입니다. 2번째 줄은 그것을 R의 데이터 프레임 형식으로 만들어 player라는 변수에 넣는 것입니다. 마지막으로 3번째 줄은 이 값들에 열 이름을 넣는 것입니다. 엑셀 파일에 1줄로 자료를 입력한 후, 맨 앞 칸에 열 이름을 넣는 것이라고 생각하시면 됩니다. 마지막 줄을 입력하면 지금까지 한 것을 확인할 수 있습니다.\n## 데이터 입력 temp \u0026lt;- c(3,3,6,7,7,10,10,10,11,13,30) player \u0026lt;- data.frame(temp) colnames(player) \u0026lt;- c(\u0026#34;score\u0026#34;) player 자 이제 본격적으로 지금까지 입력한 값을 가지고 하고자 하는 일 차례로 해보겠습니다. 여기서 모든 값이 10으로 다 같습니다. 여기서 참고로 마지막 최빈값은 조금 복잡한 방식으로 처리했는데, 이는 R에 최빈값을 구하는 내장함수가 없기 때문입니다. 참고로 입력하는 방법은 \u0026ldquo;{\u0026rdquo; 키를 치고 엔터를 치면 \u0026ldquo;+\u0026ldquo;가 나타나고 거기에서 또 명령어를 치면 \u0026ldquo;+\u0026ldquo;가 나옵니다. 그렇게 하다가 마지막으로 \u0026ldquo;}\u0026ldquo;키를 치고 엔터를 누르면 Mode라는 함수 입력이 완료됩니다. 그럼 다음 마지막 줄에서 그 함수를 사용하는 것입니다. 여기 함수에 대한 내용은 나중에 자세히 살펴보도록 하겠습니다.\n## 평균값 구하기 mean(player$score) ## 중간값 구하기 median(player$score) ## 최빈값 구하기 Mode \u0026lt;- function(x) { ux \u0026lt;- unique(x) ux[which.max(tabulate(match(x, ux)))] } Mode(player$score) 이번에는 범위를 구해보겠습니다. 통계학에서 범위라는 것은 데이터 집합에서 상한값에서 하한값을 뺀 것을 말합니다. 그래서 R에서도 max라는 것을 가지고 상한값을 구한 다음, min이라는 것을 가지고 하한값을 구한 다음, 상한값에서 하한값을 빼서 구했습니다.\n## 범위 구하기 max(player$score) - min(player$score) 마지막으로 분산을 구해보도록 하겠습니다. R에서도 손쉽게 var()이라는 것으로 구할 수도 있지만, 우리는 정확하게 모집단을 정확하게 다 알고 있기 때문에 통계학 시간에 배운 공식을 가지고 단순하게 구해봤습니다. 앞에서 최빈값을 구한 것과 같이 함수를 이용했습니다. 참고로 이렇게 구한 값은 R에서 var()으로 구한 값과 다릅니다. 자세한 내용은 통계학에서 소위 모집단 분산과 모집단 분산 추정하기의 다르다는 것을 살펴보시면 됩니다.\n## 분산 구하기 my.var \u0026lt;- function(x) { m \u0026lt;- mean(x) return (sum((x-m)^2)/length(x)) } my.var(player$score) ","href":"/2015/02/11/844/","title":"R로 평균값(mean), 중간값(median), 최빈값(mode), 범위(range), 분산(variance) 구하기"},{"content":"","href":"/tags/variance/","title":"variance"},{"content":"","href":"/tags/array/","title":"Array"},{"content":"참 책을 만들면서 뭔가 바뀌면, 정오표를 만들어 제공하는 것이 예의인데, 그냥 개정판을 내는 것은 도리가 아닌 것 같다. swift에서 배열을 초기화하는 것은 다음과 같이 해서는 안 된다.\nvar WrongArrayInit = Int[]() 다음과 같이 해야 한다.\nvar RightArrayInit = [Int]() 애플 공식문서에 하면, \u0026ldquo;You can create an empty array of a certain type (without setting any initial values) using initializer syntax:\u0026rdquo;\nvar someInts = [Int]() println(\u0026#34;someInts is of type [Int] with (someInts.count) items.\u0026#34;) ","href":"/2014/11/19/837/","title":"Swift에서 array 초기화 하기"},{"content":"LaTex에서 논증을 구성하고 결론을 보여주고자 할 때 그냥 무작정 그었더니 예쁘지 않더군요. 그래서 오래간만에 좀 찾아봤더니 역시 그리는 방법이 있었습니다.TIMMURPHY.ORG의 글을 참고했습니다.\n선은 LaTeX의 \\line function을 이용하여 그립니다. 이 function은 다음과 같이 x-slope, y-slope 그리고 length등을 정의합니다:\n\\line(x-slope,y-slope){length} 이때 수평선은 그리기 위해서는, x-slope은 1로, y-slope는 0으로 설정합니다. 다음과 같이 하면 멋진 수평선을 그을 수 있습니다. 여기서 \\begin{center}은 문서 중앙에 그리라고 설정한 것입니다.\n\\begin{center} \\line(1,0){250} \\end{center} ","href":"/2014/11/14/833/","title":"LaTeX에서 수평선 그리기"},{"content":"","href":"/tags/line/","title":"line"},{"content":"이건 단순합니다.아래와 같이 하면 됩니다.\n$\\sim$ ","href":"/2014/10/24/828/","title":"Latex 에서 '~' 표시를 하려면?"},{"content":"","href":"/tags/windows-7/","title":"windows 7"},{"content":"저는 윈도우 8.1을 쓰고 있는데, iso파일을 CD로 구워 프로그램을 설치해야 할 경우가 생겼습니다. 그래서 예전에 쓰던 CD 굽는 프로그램을 찾아봤습니다. 그러다가 혹시 찾아봤더니 다음과 같은 링크가 있더군요.\nhttp://windows.microsoft.com/ko-kr/windows7/burn-a-cd-or-dvd-from-an-iso-file\n뭔가 이미 윈도우에 그런 프로그램이 설치되어 있는 것 같네요. 그래서 찾아보니 역시 들어 있네요. 윈도우 7 이상에는 \u0026ldquo;윈도우 7에 기본으로 디스크 이미지 버너가 포함되어 있습니다. 그냥 ISO 파일에 우클릭 하시면 디스크 이미지 굽기 메뉴가 뜹니다. \u0026ldquo;고 합니다. 다음 링크 참고!\nhttp://snoopybox.co.kr/1368\n","href":"/2014/09/03/766/","title":"윈도우 7 이상에서는 기본적으로 iso 파일을 구울 수 있는 디스크 이미지 버너가 포함되어 있습니다."},{"content":"동영상을 찍게 되어 살펴보던 중 쓸만해 보여서 압구정 매장에 직접 가 봤습니다. 저는 야외 뿐만 아니라 실내에서 강의 같은 것을 녹화하려고 살려고 했습니다. 그러나 매장 직원이 다음과 같은 점을 설명해주더군요. 혹시 틀린 점 있으면 지적해주시면 고맙겠습니다.\n배터리가 1시간 정도 밖에 되지 않습니다. 즉 실 사용시간이 1시간! 외부전원을 연결해서 사용할 수 없습니다. 즉 1시간 이상 녹화할 수 없다. 메모리는 추가로 구입해야 한다. 즉 메모리가 안 들어있다. ","href":"/2014/06/12/759/","title":"소니 액션 캠 라이브 뷰 HDRAS100VR/CE35 살 때 주의할 점"},{"content":"","href":"/tags/leica/","title":"LEICA"},{"content":"목표가 풀프레임_DSLR을 사보는 것인데, 최근에 라이카에서 새로운 LEICA T 카메라가 나와서, 라이카 홈페이지에서 TECHNICAL DATA 자료를 찾아봤습니다. 생각처럼 플프레임은 아니었고, size APS-C 이더군요(다음 인용 참고: 이 인용은 라이카 홈페이지 자료를 참고했습니다).\nCMOS sensor, size APS-C (23.6 x 15.7 mm) with 16.5/16.3 million pixels (total/effective), format aspect ratio 3:2.\n이 센서는 DSLR 이미지센서 - [ APS-H ] 와 [ APS-C ] 타입의 이해를 참고해 보면, 대략 풀프레임보다 1/2 정도 되는 것 같습니다.\n","href":"/2014/05/26/744/","title":"LEICA T 카메라의 센서 크기에 대한 메모"},{"content":"","href":"/tags/%EC%B9%B4%EB%A9%94%EB%9D%BC/","title":"카메라"},{"content":"드디어 LEMMON 스타일로 자연 연역 추론을 표현할 방법을 알게 되었습니다. 몇 가지 다른 표현법을 알고 있었는데 배운 것과 다르고 좀 단순한 것을 찾다가 포기했는데 드디어 찾았습니다. 물론 Edward John Lemmon이 쓴 Beginning Logic\u0026lt;에 사용된 표기법을 말합니다.\n이 내용은 http://phloxgroup.wordpress.com에 있는 \u0026ldquo;LEMMON-STYLE NATURAL DEDUCTION PROOFS IN LATEX\u0026ldquo;이라는 글입니다. 참고하세요. 메뉴얼도 위의 페이지에 있습니다.\n","href":"/2014/04/18/731/","title":"LEMMON 스타일로 Latex 에서 자연 연역 추론을 표현하기"},{"content":"","href":"/tags/logic/","title":"Logic"},{"content":"","href":"/categories/%EB%85%BC%EB%A6%AC%ED%95%99/","title":"논리학"},{"content":"","href":"/tags/evernote/","title":"Evernote"},{"content":"","href":"/tags/spotlight/","title":"Spotlight"},{"content":"에버노트를 잘 앱스토어에서 잘 다운 받아 쓰다가 문득 해봤는데 안 검색이 되지 않아서 고생했습니다. 찾아보니 해결책은 쉽습니다. 애버노트 홈피에서 개발자의 다음과 같은 답변을 찾았습니다.\nThere is an issue with 10.9 and Spotlight functionality. It is a restriction only on Mac App Store builds. To get around this, please download Evernote directly from us at\n즉 애플 앱스토어에서 애버노트 앱을 다운 받지 말고, 애버노트 홈에서 다음 링크로 가신 다음,\nhttps://evernote.com/intl/ko/evernote/\n그냥 맥용 내려받기 버튼을 누르시면 앱스토어로 가는 경우가 있으니 다음과 같이 해주시면 됩니다. 참고로 이렇게 해도 Spotlight가 완벽하게 작동은 하지 않지만, 쓸만하게 검색이 됩니다.\nevernote down 1 evernote down 2 ","href":"/2014/04/02/723/","title":"맥 검색인 Spotlight 에서 Evernote가 검색되지 않는 경우 해결책"},{"content":"R은 기본적으로 사분위도(Quatile)를 다루기 위해서 “ quartile(x, p) ”이라는 명령어를 사용합니다. 이 명령어의 사용법은 R 메뉴얼을 보면 다음과 같습니다.\n## Default S3 method: quantile(x, probs = seq(0, 1, 0.25), na.rm = FALSE, names = TRUE, type = 7, ...) 여기서 제일 중요한 x에 들어갈 것은 우리가 조사하고자 하는 자료입니다. 그리고 두 번째로 중요한 것은 probs = seq(0, 1, 0.25)입니다. 이 명령어의 의미는 0%~100%까지 까지 25%씩 나눠서 계산하라고 명령하는 것입니다. 따라서 위와 같이 입력한다면, \u0026ldquo;0%, 25%, 50% 75%, 100%\u0026ldquo;에 해당하는 값을 출력하게 됩니다. 그리고 나머지 값은 조금 전문적이 그냥 아래와 같이 사용해도 되고 제거해도 무방합니다. 결국 다음과 같은 정도로 명령어를 사용하면 됩니다.\n## 간략한 사분위도 명령어: quantile(x, probs = seq(0, 1, 0.25), na.rm = TRUE, type = 7) 그러면 이 명령어를 예제를 통해서 알아보겠습니다.\n1.이 명령어를 사용하기 위하여 우선 R에서 다음과 같이 입력하여 연습용 자료를 R에 입력합니다. 이것은 인터넷 상에 있는 자료를 R에 입력하는 명령어입니다. 이 명령어를 인터넷에 있는 자료 대신에 직접 입력하시려면 아래 2번을 보고 입력하시면 됩니다.\nplayer \u0026amp;lt;- read.csv(\u0026#34;http://dl.dropboxusercontent.com/u/17387789/chepter_4_ex_2.csv\u0026#34;) 2.위의 것은 인터넷에 있는 자료를 다운 받아 입력한 것이지만, 아래 명령어들은 그것을 직접 입력하는 것입니다. 첫번째 명령어는 우선 자료를 입력하는 것이고, 두 번째 명령은 이를 위와 같은 자료형(정확하게는 데이터 프레임 형식)으로 만드는 것이며, 마지막으로 세 번째 명령어는 그 자료에 열 이름을 넣는 명령어 입니다.\ntemp \u0026amp;lt;- c(3,3,6,7,7,10,10,10,11,13,30) player \u0026amp;lt;- data.frame(temp) colnames(player) \u0026amp;lt;- c(\u0026#34;score\u0026#34;) 3.위의 1,2번과 같이 자료를 입력하였으면, 이 자료가 잘 들어갔는지 확인해 봅시다. 아래 명령어를 치면 우리가 넣은 자료가 즉, score = {3,3,6,7,7,10,10,10,11,13,30}가 나올 것입니다.\nplayer 4.다음으로 이 자료에 대한 여러가지 자료를 알기위해 다음과 같이 입력하면, 최소값(Min.): 3.0 일사분위수(1st Qu.): 6.5, 중앙값(Median):10.0, 평균값(Mean):10.0, 삼사분위수(3rd Qu.):10.5, 최대값(Max.):30이 표시됩니다.\nsummary(player) 5.마지막으로 사분위도를 계산하기 위하여 다음과 같이 입력해봅시다. 위에서 실행한 값과 거의 같은 값들이 나오게 됩니다. 여기서 나오는 값들은 위의 자료를 값이 증가하는 방향으로 나열하고, 그 자료의 구역을 4등분, 예를 들어 20명 성적을 낮은 점수에서 높은 점수로 배열한 후, 가장 꼴지 즉 20등 점수, 25%에 있는 점수 다시 말해 15등 점수, 50% 중간인 10등 점수, 75%에 있는 5등 점수, 그리고 마지막으로 1등 점수를 보여주게 됩니다. 물론 여기서 \u0026ldquo;0.25\u0026quot;를 \u0026ldquo;0.1\u0026quot;로 한다면, 20등, 18등, 16등, 14등, \u0026hellip; 6등, 4등, 2등, 1등 점수가 나오게 됩니다. 물론 여기에는 조금 복잡한 이론이 있습니다. 예를 들어 어떤 자료는 정확하게 그 등수, 더 자세하게 말하면, 중간 등수가 없는 경우가 있죠. 이럴 때에 어떻게 처리하는지에 대한 문제가 있습니다. 이런 문제 때문에 위의 명령어에 \u0026ldquo;type = 7\u0026quot;과 같은 옵션이 있는 것입니다. 이런 문제는 통계학책을 참고하길 바랍니다. ^^;\nquantile(player, probs = seq(0, 1, 0.25), na.rm = TRUE, type = 7) 부록으로 다음과 같이 입력하시면, R이 사분위도 값을 이용하여 멋진 그래프를 만들어 줍니다.\nboxplot(player$score) 좀 더 깊은 내용은 아래 링크를 참고하세요.\nhttp://tolstoy.newcastle.edu.au/R/e17/help/att-1067/Quartiles_in_R.pdf\n","href":"/2014/03/17/690/","title":"R로 사분위도(Quatile)를 계산해보자."},{"content":"“안다는 것은 그 진리를 추적하는 믿음을 갖는 것이다(To know is to have a belief that tracks the truth),” p.178, Nozick, R., (1981) Philosophical Explanations, Harvard University Press.\n","href":"/2013/11/26/679/","title":"\"To know is to have a belief that tracks the truth.\""},{"content":"","href":"/tags/epistemology/","title":"Epistemology"},{"content":"","href":"/tags/nozick/","title":"Nozick"},{"content":"","href":"/categories/%EC%9D%B8%EC%8B%9D%EB%A1%A0/","title":"인식론"},{"content":"","href":"/tags/ubuntu/","title":"ubuntu"},{"content":"USB 에 만들어서 설치하면 빠르게 설치할 수 있다. 다음 링크 참고!\nhttp://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows 단, \u0026lsquo;Step 4: Set a persistent file size for storing change (Optional)\u0026lsquo;이라는 항목에서 USB 메모리가 허용하는 한 많은 양을 설정해야 한다. 왜냐하면 이 항목을 0으로 처리하면 모든 자료를 서버에서 다운받아 설치하기 때문에 우분투가 느리게 설치됩니다. 다음 링크 참고\nhttp://kmsblog.tistory.com/70 ","href":"/2013/07/03/672/","title":"ubuntu 설치에 대한 몇 가지 tip!"},{"content":"","href":"/tags/font/","title":"font"},{"content":"","href":"/categories/pt/","title":"PT"},{"content":"","href":"/tags/%EA%B8%80%EA%BC%B4/","title":"글꼴"},{"content":"거의 나올 때부터 한컴의 함초롬체를 사용해 왔습니다. 라이센스 문제도 조금 자유로워서 쓰기 편하죠(다음 링크 참고.) 물론 맥을 쓰기에 OTF 포멧으로 제공해주시면 더 좋을 것 같지만 그래도 이런 폰트를 무료로 제공한다는 점에서는 너무나 좋습니다. 고맙습니다. 한컴!\nhttps://www.hancom.com/cs_center/csDownload.do\n[\u0026lsquo;함초롬\u0026rsquo;체 지적재산권에 대한 안내]\n(1) \u0026lsquo;함초롬\u0026rsquo;체 2종에 대한 지적 재산권은 \u0026lsquo;한글과컴퓨터\u0026rsquo;에 있습니다.\n(2) \u0026lsquo;함초롬\u0026rsquo;체는 개인 및 기업 사용자에게 무료로 제공되며, 모든 출판물과 저작물에서 자유롭게 사용이 가능합니다만, 저작권 보호 문화를 위해 글꼴의 사용시 글꼴 출처를 표기하는 것을 권장합니다.\n(3) 사용자들은 \u0026lsquo;함초롬\u0026rsquo;체를 자유롭게 배포할 수 있으나, 상업적인 목적으로는 배포 및 수정할 수 없습니다.\n그런데 초기에 다운 받았던 폰트는 Version 1.600; Build 20100723 이었는데, 오늘(2013년 4월 15일 현재) 다운을 다시 받으니, Version 1.900; Build 20120425 이네요. 조금 많이 쓰시는 분은 다시 다운받으시면 좋을 것 같습니다. 위의 링크에서 다운 받으시면 됩니다.\n","href":"/2013/04/15/663/","title":"한컴 대표글꼴 함초롬체 version 변경에 대하여"},{"content":"","href":"/tags/greek/","title":"Greek"},{"content":"희랍 철학에 대해서 아시는 분은 다 아시는 유명한 철학자인 버넷(Burnet)이 쓴 초기 그리스 철학이라는 책이 인터넷에서 읽을 수 있게 되었군요. 초기 희랍철학에 대한 소스는 거의 이곳에서 나오는 것 같은데 좋은 책이 공개되어 있으니 좋네요. 물론 영어입니다.\nhttp://www.classicpersuasion.org/pw/burnet/index.htm ","href":"/2013/03/27/659/","title":"John Burnet 이 쓴 초기 그리스 철학(Early Greek Philosophy) 인터넷에 있네요."},{"content":"쓰다보면, 이 둘의 차이를 명확하게 알기 쉽지 않습니다. 그래서 그냥 혼합해서 사용했었습니다. 그런데 이 둘 사이에 들여쓰기와 줄간격이 조금 다르게 쓰이는 것을 보고 조금 찾아 봤더니역시 있더군요. 내용을 대충 번역해봤습니다. 참고하세요.\n{quote} : 짧은 인용문이나 작은 인용의 나열 모임 등을 위하여 사용한다. 빈 줄로 분리한다(for a short quotation, or a series of small quotes, separated by blank lines).\n{quotation}: 긴 인용문에 사용하는데, 특히 1단락 이상에서 사용한다. 왜냐하면 이것은 그 각각의 단락의 앞부분을 들여쓰기 하기 때문이다(for use with longer quotations, of more than one paragraph, because it indents the first line of each paragraph).\n출처: http://tex.stackexchange.com/questions/33219/whats-the-difference-between-the-environments-quote-and-quotation\n","href":"/2013/03/04/655/","title":"Latex 에서 {quotation} 와 {quote} 의 차이."},{"content":"","href":"/tags/%ED%85%8C%EC%B9%B4%EB%A5%B4%ED%8A%B8/","title":"테카르트"},{"content":"데카르트가 근대 이후의 관념에 대한 생각을 거의 처음으로 정립했을 것입니다. 그 이후의 관념은 그전의 관념에 대한 생각과는 확연히 달라집니다. 다음 인용문을 보면 어떻게 달라지고 있는지 알 수 있습니다. 재미있는 점은 이런 점이 신의 개념을 필요로 하게 된다는 점이죠.\n여기서 데카르트는 생득 관념과 \u0026lsquo;나에게 사실상 일어난\u0026rsquo; 사실적 사건을 구별한다. \u0026lsquo;생득 관념\u0026rsquo;(idea innata)들은, \u0026lsquo;사물\u0026rsquo; \u0026lsquo;진리\u0026rsquo; \u0026lsquo;사고\u0026rsquo; 및 \u0026lsquo;연장\u0026rsquo;등의 관념들과 같이, 나의 본성 자체로부터 내가 가지고 있는 관념들이다. 여기서 연장이라 함은, 나에게 감각적으로 제시되고 또 내가 내 눈앞에 떠올리고 있는 양초 조각의 다른 성질들처럼 변하고 증가하거나 감소되는 그런 연장이 아니라 오직 나의 지성만이 포착할 수 있는 연장을 가리키고 있다. 이처럼 아주 작은 어떤 빛나는 원반과 같은 태양 관념은, 외감 기관으로부터 나에게 오는 관념으로서, 어떤 객관적 실재와는 일치되지 않는다. 그러나 \u0026ldquo;천문학적 근거들에 입각해서 파악된, 즉 내가 함께 지니고 태어나게 된 특정 관념들에 의해서 파악된\u0026rdquo; 태양 관념은 자기 자체 안에 객관성을 담지하고 있다.\n이렇게 해서 관념은 우리에게 어떤 실재의 나타남이 된 것이 아니라 정신과 실제 사이의 어떤 매체적인 \u0026lsquo;무엇\u0026rsquo;이 되게 된다. 관념은 직접 인식되는 대상이 되었다. \u0026lsquo;우리 안에\u0026rsquo; 있는 이 대상에는 \u0026lsquo;우리 바깥\u0026rsquo;의 어떤 신비스러운 실재가 상응해야 한다. 바로 신이 이 상응의 보장자이다.\n출처 160 쪽, 인식론의 역사, 소피아 로비기 저/ 이재룡 역\n","href":"/2012/12/29/637/","title":"테카르트에게 있어서 관념이란?"},{"content":"","href":"/tags/bios/","title":"BIOS"},{"content":"","href":"/tags/ide/","title":"IDE"},{"content":"제가 오래된 컴퓨터를 재미삼아 서버로 사용하고 있습니다. 그러다 보니 여기저기서 남아 도는 IDE 하드 디스크를 많이 사용하고 있습니다. 거기에 우분투를 사용하다가 보니 작은 하드를 몇 개를 연결해서 큰 하드로 사용하는 방법을 공부하느냐고 IDE 하드 디스크를 포맷하고 다시 쓰다가 포맷하고 이렇게 몇 번 반복했습니다. 그러다가 갑자기 채팅하면서 바이오스 화면이 나왔는데, 더 이상 진행이 안 되는 것이었습니다.\n드디어 컴퓨터가 망가졌구나 생각이 들었습니다. 그래서 다른 컴퓨터를 구하려고 했는데, 조금 뭔가 이상해서 인터넷을 뒤졌습니다. 역시 \u0026ldquo;바이오스(BIOS)의 초기 화면이 출력된 후 시스템이 멈출 때\u0026ldquo;라는 글이 있더군요. 여기서 두 가지가 마음에 걸리더군요.\nIDE 하드 디스크의 케이블이 제대로 연결되어 있지 않거나, 바이오스의 IDE 하드 디스크의 설정이 잘못된 경우 IDE 장치를 초기화하기 위해 신호를 보내고 기다리는데 대기 시간 동안 시스템이 정지된다. ~ 하드디스크의 파티션테이블( FAT) 정보가 손상되어 비정상적인 위치를 액세스하는 경우나 바이러스에 감염되어 있는 경우 시스템이 정지될 수 있다. 그래서 가서 확인해보니 역시 이런 문제 때문에 컴퓨터가 작동을 안 했더군요. 특히 파티션테이블( FAT) 정보가 손상되어도 바이오스에서 멈춘다는 것을 처음 알았습니다. 역시 컴퓨터 문제가 있는 경우는 CPU, RAM, 필요하면 그래픽 카드만 꼽고 어디가 문제가 되는지 확인한다는 원칙이 새삼 대단한 원칙이라는 것을 확인했습니다.\n","href":"/2012/04/22/626/","title":"부팅하면서 바이오스(BIOS)의 초기 화면이 출력된 후 시스템이 멈출 때"},{"content":"","href":"/tags/google/","title":"google"},{"content":"저자: 시로타 마코토, 제이펍, 2009.\n책 느낌: 전문적인 용어 없이 편안하게 읽으면서, 어느 어느 정도 IT 관련 지식만 있으면 클라우드에 관한 대략적인 정보를 얻을 수 있다. 또한 2009년에 나온 책이기 때문에 현재 이 분야의 모습을 보면 얼마나 사람들이 예측하고 있었으며, 그 예측이 맞았는지 살펴 볼 수 기회를 제공하고 있다.\n36 쪽, 그렇다면 실제로 클라우드 컴퓨팅 환경에서 이용되고 있는 서버는 어느 정도의 빈도로 고장 나고 있을까? 이점에 관해서 구글의 팰로우인 제프딘(Jelf Dean)이 2008년 5월에 샌프란 시스코에서 있었던 구글 주최의 컨퍼런스에서 대단히 흥미로운 강연을 한 적이 있다. 다음은 제프 딘의 발언 중 일부다.\n“ 구글에서는 1,800대의 서버로 구성된 클러스터 컴퓨터를 하나의 단위로 해서 시스템을 유지하고 있다. 이 클러스터에서 1년간 약 1,000대의 머신에서 장애가 발생하고, 수 천건의 하드드라이브 고장이 일어난다. 한 대의 전력배분 장치가 고장나면 500~1,000대의 머신이 6시간에 걸쳐 정지한다. 20대의 랙이 고장 나면 그때마다 40~80대의 머신이 네트워크에서 사라진다. 5대의 랙이 불안정해지면 네트워크 패킷의 절반이 누락된다. 일단 클러스터의 배선을 변경하면 2일간에 걸쳐 머신의 5%에 영향을 준다. 클러스터가 오버히트할 확률은 50%, 서버의 대부분은 5분 미만으로 정지하고 복구까지는 1,2일이 걸린다.”\n이 발언 첫 부분에 있듯이, 1,800대의 서버 중에 1년에 1,000대가 고장난다는 것은 1일에 평균 2.7대는 고장난다는 것이다.\n","href":"/2012/01/13/620/","title":"클라우드의 충격"},{"content":"요즘 한참 vi를 익히고 있습니다. 그렇다 보니 Terminal을 많이 사용하게 됩니다. 그러다가 문득 클리앙에서 부드러운직선님이 쓰신 다음과 같은 글을 보았습니다.\n-Tip 터미널 텍스트 예쁜 컬러 입히기 IR Black\n원 출처를 조금 찾아보니 다음과 같았습니다.\nIR_Black for OS X Lion 설치는 쉽습니다. 위의 링크에서 IR_Black.terminal 파일을 다운 받으신 다음, 그 파일을 더블 클릭하시면 다음과 같이 멋진 색을 가진 터미널을 사용할 수 있게 됩니다.\nIR_Black Theme in Mac OS X Terminal 조금 조심할 부분이 두 가지 있습니다.\n1.부드러운직선님이 쓰신 앞의 글처럼 ~/.bash_profile 파일을 에디터로 열거나 없으면 새로 만들어 다음과 같은 값을 넣어줘야 합니다. 첫번째 줄은 주석이기 때문에 실제로 필요한 것은 2, 3 줄입니다. 원본 링크에서는 다르게 하지만, 부드러운직선님이 하신 이 방법이 더 쉽습니다.\n# Enabling directory and file color highlighting export CLICOLOR=1 export LSCOLORS=ExFxCxDxBxegedabagacad 2.vi 에서 한글이 깨지는 경우가 있습니다. 그럴 경우에는 우선 설정에서 텍스트 탭에서 서체를 한글 폰트로 설정하시고, 고급 탭에서 \u0026ldquo;비 ASCII 입력 취소\u0026quot;를 해체해보세요.\n그러면 멋지게 터미널를 사용해보세요!\n","href":"/2011/10/21/595/","title":"Mac OS X Terminal에 IR Black 테마로 예쁜 컬러로 바꿔보자."},{"content":"","href":"/tags/terminal/","title":"Terminal"},{"content":"","href":"/tags/bool/","title":"BOOL"},{"content":"BOOL 값과 같은 비 객체는 NSDictionary 에 넣을 수 없습니다. 그래서 다음과 같이 값을 숫자로 변신 시켜서 저장해야 합니다. BOOL isInReply; NSNumber *isInReplyToNumberValue = [NSNumber numberWithBool:isInReply]; reply = [NSDictionary dictionaryWithObjectsAndKeys: reply_time, @\u0026#34;time\u0026#34;, reply_id, @\u0026#34;iD\u0026#34;, isInReplyToNumberValue, @\u0026#34;isInReply\u0026#34;, reply_content, @\u0026#34;content\u0026#34;, nil]; ","href":"/2011/07/10/589/","title":"BOOL 값을 NSDictionary 에 넣어보자."},{"content":"","href":"/tags/nsdictionary/","title":"NSDictionary"},{"content":"드디어 2nd Edition이 나왔네요. 이제는 완벽한 논문 백화점이 되어있군요.. 상세한 내용은 다음 링크로 가보세요.\nhttp://as.wiley.com/WileyCDA/WileyTitle/productCd-1405169664,descCd-tableOfContents.html\nPart I: Skepticism:.\nIntroduction.\nThe Problem of the External World: Barry Stroud.\nProof of an External World: G. E. Moore.\nFour Forms of Scepticism: G. E. Moore.\nCertainty: G. E. Moore.\nHow a Pyrrhonian Skeptic Might Respond to Academic Skepticism: Peter Klein.\nEpistemological Realism: Michael Williams.\nPart II: The Structure of Knowledge and Justification:.\nIntroduction.\nThe Myth of the Given: Roderick M. Chisholm.\nDoes Empirical Knowledge Have a Foundation?: Wilfrid Sellars.\nEpistemic Principles: Wilfrid Sellars.\nCan Empirical Knowledge Have a Foundation?: Laurence BonJour.\nA Coherence Theory of Truth and Knowledge: Donald Davidson.\n","href":"/2011/05/11/583/","title":"Epistemology: An Anthology, 2nd Edition"},{"content":" 인스펙터의 다음 항목은 알파 Alpha 값인데 이 항목을 다룰 때에는 매우 신중을 기해야 한다. 알파값으로 이미지 투명도를 조정하는데 알파값 설정에 따라 이미지를 투명하게 만들어서 뒤에 있는 컨트롤이 보이는 정도를 조절할 수 있다. 1.0 보다 작은 값이면, 뷰는 투명해서 밑의 객체를 투과시키기 때문에, 애플리케이션은 투명도 계산을 위해 프로세서 사이클을 소비한다. 그러니 확실한 이유가 있지 않으면, 1.0외의 값으로 설정하지 않는 것이 좋다.\n\u0026ldquo;시작하세요 아이폰 프로그래밍: iPhone SDK를 이용한 아이폰 개발\u0026rdquo;, 66쪽.\n","href":"/2011/04/16/577/","title":"아이폰 앱을 만들 때, 객체를 알파 값을 바꿔 투명하게 만드는 것이 좋지 않군요."},{"content":"Head First Design Patterns : 스토리가 있는 패턴 학습법을 읽고, 한번 만들어 봤습니다. 다음 글을 보고, 책에 있는 자바로 만들어진 오리로 만들어 봤습니다. 책을 더 참고하시면 더 확장하실 수 있습니다. 참고로 저는 아직까지 50, 52, 64 번째 줄이 정확히 이해가 안 됩니다. ^^;\nHow to create a strategy pattern in Objective-C?\n// // main.m // testing // // Created by Jaehwan on 11. 2. 9.. // Copyright 2011 Wireless Air. All rights reserved. // #import @protocol FlyBehavior @required – (void) fly; @end @interface FlyWithWings : NSObject { // ivars for A } @end @implementation FlyWithWings – (void) fly { NSLog(@\u0026#34;Fly With Wings!\u0026#34;); } @end @interface FlyNoWay : NSObject { // ivars for A } @end @implementation FlyNoWay – (void) fly { NSLog(@\u0026#34;Fly No Way!\u0026#34;); } @end @interface Duck : NSObject { id flyBehavior; } @property (assign) id flyBehavior; – (void) fly; @end @implementation Duck @synthesize flyBehavior; – (void) fly { [flyBehavior fly]; } @end int main (int argc, const char * argv[]) { NSAutoreleasePool * pool = [[NSAutoreleasePool alloc] init]; // insert code here… NSLog(@\u0026#34;Hello, World!\u0026#34;); FlyWithWings * flyWithWings = [[[FlyWithWings alloc] init] autorelease]; FlyNoWay * flyNoWay = [[[FlyNoWay alloc] init] autorelease]; Duck * context = [[[Duck alloc] init] autorelease]; [context setFlyBehavior:flyWithWings]; [context fly]; [context setFlyBehavior:flyNoWay]; [context fly]; [pool drain]; return 0; } ","href":"/2011/02/10/555/","title":"Strategy pattern을 Objective-C 로 만들어봤습니다."},{"content":"많은 홈페이지를 쓰고 사용하는 경우 많은 아이디와 비밀번호에 때문에 고생하는 경우가 많습니다. 저같은 경우에도 제가 사용하는 블로그가 이것을 포함해서 2개이고, 관리하는 홈페이지가 1개 있습니다. 여기에 관리하는 홈페이지에 게시판을 달려고 하니 또 하나가 늘어서 4개의 아이디를 쓰면서 홈페이지들을 관리합니다. 물론 이것말고 또 여러 유명한 Site 아이디, 메일 계정 등등 한 10개 정도의 아이디를 가지고 있는 것 같습니다. 그렇다 보니 아이디와 비번을 잃어버리는 것은 다반사죠.\n물론 저만 이런 문제를 가지고 있는 것을 아니었습니다. 그래서 만들어 낸 것이 바로 OpenID입니다. 우리나라에서도 이 아디디를 만들 수 있는 곳이 http://www.myid.net/입니다. 저도 여기서 아이디를 만들어서 스프링노트(springnote)라는 것을 사용할 수 있습니다. 그러나 가장 많이 사용하는 것이 google 계정인데 여기서는 OpenID를 지원하지 않고 있었죠. 그러다가 다음 링크에서 \u0026lsquo;Windows Live, Gmail 계정을 OpenID로 사용\u0026quot;이라는 글을 일고 제가 쓰는 아이디를 줄여보자하고 한참을 찾아봤습니다. 그러나 제가 생각하는 것처럼 단순한 문제가 아니었죠.\nhttp://www.appleforum.com/mac-column/55970-애플-소식-2008-10-4주차.html 그러다가 Zkel님의 \u0026ldquo;구글 OpenID 만들기이라는 글을 발견하고 쉽게 만들게 되었습니다. ZKel님의 글을 보시면 단번에 아실 수 있지만 정리를 한번 해보겠습니다.\n우선 http://openid-provider.appspot.com/에 가서 접속하시고 로그인하면 아이디가 만들어 집니다. http://openid-provider.appspot.com/자신의 구글 계정 2번이 바로 자신의 OpenID가 됩니다. 예를 들어 자신의 아이디가 aaa이면 OpenID는 http://openid-provider.appspot.com/aaa가 되는 것이죠. 좀 복잡하기는 하지만, 그래도 비번은 동일하게 되니 편리하죠. 이것이 복잡하다면 깡 하나 http://myid.net/에 가서 오픈 아이디 하나 만드세요. 여기는 http://aaa.myid.net/ 이렇게 만들어 줍니다.\n참고 1: 이 글은 \u0026ldquo;Windows Live, Gmail 계정을 OpenID로 사용할 수 있다고 합니다.\u0026ldquo;라는 제목으로 썼던 토막글을 재작성한 글입니다.\n참고 2 : 다음에서도 이것을 지원하는 것 같네요. http://openid.daum.net/\n","href":"/2010/12/31/538/","title":"Gmail 계정을 OpenID로 사용해 보자!"},{"content":"다음은 인터넷이 뭔가 드려다 볼 때 필요한 프로그램들입니다.\n패킷의 흐름을 분석하는 tcpdump 패킷을 분석하는 ethereal 현재 시스템에서 지나가는 패킷을 종류별로 분석: iptraf PS: http://dialektike.textcube.com/ 가 없어지는 바람에 이전한 글입니다.\n","href":"/2010/12/31/535/","title":"인터넷을 살펴보는데 유용한 프로그램들"},{"content":"여기에 가끔 오시는 분들은 이 제목을 보고 무슨 뜻인지 전혀 모를 것 같네요. 그래도 자료 정리겸 끄적거려봅니다. 단순하게 설명하자면 \u0026ldquo;MD5 Check\u0026quot;란 다운로드 하거나 복사한 파일이 손상없이 원본과 같은 상태인지 확인하고자 할 때 필요한 것입니다. 참고로 \u0026lsquo;Check\u0026rsquo;란 뜻을 사전에서 찾아보면, \u0026ldquo;사물의 상태를 검사하거나 대조함. 또는 그런 표적으로 찍는 ‘V’ 자 모양의 표.\u0026ldquo;라고 하네요. 우리가 가끔 인터넷상에서 어떤 파일을 받으려고 할 때, 그 옆에 Md5: c3ad0b16898865a5b57ae4ebb5f1c3d6 라는 복잡한 것이 적혀 있는 경우가 있습니다. 이것이 바로 그 힌트죠. 우리가 받은 프로그램이나 파일을 MD5 Check해서 이것과 같지 않으면 그 파일은 손상된 것이죠.\n윈도우에서 사용하는 법은 eunhwak님의 \u0026ldquo;MD5 체크(MD5Check) - 설치와 사용이라는 글을 보시면 됩니다. 그런데 Mac OS X 에서는 어떻게 할지 궁금하더군요. 물론 구글에게 물어봤지만, 무슨 프로그램을 설치하라고 하는데, 벌로 탐탁지 않아서 좀더 찾아보니 터미널에서 처리할 수 있네요. 다음과 같이 터미널에서 작업하시면 됩니다.\nmd5 test.iso 이렇게 하시면, test.iso 라는 파일을 검사해서 대조할 수 있는 다음처럼 복잡한 값을 줍니다.\nMD5 test.iso c3ad0b16898865a5b57ae4ebb5f1c3d6 이 값과 앞의 값을 비교하여 같은 값이면, 같은 파일이라는 것을 알 수 있게 되는 것이죠. 뭐 프로그램을 다운받아 쓸 수도 있지만, 이렇게 쉽게 해결하는데 그럴 필요가 없을 것 같네요. 만약 우리가 파일을 만들어 배포하는 경우에도 파일이 크거나 복잡한 것이면 이런 식으로 값을 만들어 확인하라고 하면 쉽게 같은 파일인지 알 수 있게 됩니다.\nPS: http://dialektike.textcube.com/가 없어지는 바람에 이전한 글입니다.\n","href":"/2010/12/31/532/","title":"Mac OS X 에서는 어떻게 MD5 체크(MD5 Check)를 할까?"},{"content":"","href":"/tags/md5/","title":"MD5"},{"content":"Edmund L. Gettier, Is justified true belief knowledge? From Analysis 23 (1963): p.121-p.123, Translated by 정재환(Jae-hwan Chung), 곽기영(Keeyoung Koak), 2001, Updated: 2010-Jan-08\n","href":"/2010/12/03/526/","title":"Is justified true belief knowledge?"},{"content":"그냥 다음과 같이 하면, 아랫줄에 각주 번호가 나옵니다.\n\\section{History of Philosophy? \\footnote{코플스톤, 김보연 역, 『그리스 로마 철학사』 1998년, 들어가는 말에서} } 다음과 같이 하면 본인이 의도한 위치에 각주 번호가 나옵니다.\n\\section[blah]{History of Philosophy? \\footnote{코플스톤, 김보연 역, 『그리스 로마 철학사』 1998년, 들어가는 말에서} } [blah]이라는 태그만 들어가면 됩니다.\n출처: http://idontcare.us/blog/2006/07/11/footnote-in-the-chaptersection-title-latex\n","href":"/2010/09/30/520/","title":"LaTeX 에서 chapter / section title 에 Footnote(각주) 달기"},{"content":"","href":"/tags/%EC%95%84%ED%80%B4%EB%82%98%EC%8A%A4/","title":"아퀴나스"},{"content":" Pros: 아퀴나스의 생애에 대해서 비교적 자세한 정보를 얻을 수 있었습니다. 단순한 내용 나열이 아니라 그의 업적을 중심으로 내용을 이끌어 가고 있습니다. 특히 존재와 인식에 대한 내용을 이 책에서는 꽤 자세하게 다루고 있습니다. 개론서에서 볼 수 없는 자세한 설명을 보실 수 있습니다. Cons: 내용이 너무 특정 분야에 편중되어 있는 것 같습니다. 그래서 아퀴나스에 대한 전반적인 지식을 갖고자 하는 분들은 조금 실망하실 수 있습니다. 지은이: 헨리 채드웍 옮긴이: 김승철 펴낸곳: 시공사 참고: 시공 로고스 총서-24 출판연도: 2000. 11. 30. 참고: 절판 yes24 책 링크 ","href":"/2010/09/08/513/","title":"아퀴나스"},{"content":"","href":"/tags/%EC%95%84%EC%9A%B0%EA%B5%AC%EC%8A%A4%ED%8B%B0%EB%88%84%EC%8A%A4/","title":"아우구스티누스"},{"content":" Pros: 중세 철학에 관련된 책은 조금 지루하고 답답한 경우가 많은데, 이 책은 참 쉽고 나름 재미있게 쓰여졌습니다. 번역하신 분이 후기에 쓰신 것처럼 고수의 기운이 느껴지는 책입니다. 어거스틴에 대한 정보를 얻으시려면 읽어볼만한 책입니다. Cons: 재미있게 읽다보면 장이 끝나 다음 내용으로 넘어갑니다. 책이 너무 양이 적습니다. 지은이: 헨리 채드웍 옮긴이: 김승철 펴낸곳: 시공사 출판연도: 2010. 7. 31. 참고: 절판 yes24 책 링크 ","href":"/2010/08/19/508/","title":"아우구스티누스 : 라틴 교부 철학의 위대한 사상가"},{"content":"","href":"/tags/starbucks/","title":"Starbucks"},{"content":"Pros: 스타벅스에서 부담없이 사 먹을 수 있는 가격. 봉지를 뜯으면 떡 같아 보여 살짝 실망하지만 먹어보면 새콤합니다.\nCons: 그래도 비쌉니다. 한 1000원하면 사 먹을 수 있겠지만, 1800원이라니..\n","href":"/2010/08/10/495/","title":"스타벅스 라이스 칩"},{"content":"세상이 많이 변해서 제가 처음 이 홈피를 블로그로 만들 때에는 방명록을 만드는 것이 중요한 일이었습니다. 그래서 별별 방안을 다 강구했었죠! 그러나 요즘은 그런 것 고민할 필요가 없어졌습니다. 트위터가 생겼기 때문입니다. 생각해보면 이제서야 홈피가, 솔직히 블로그가 제 본연의 자리를 잡아가게 될 것 같네요. 전 블로그와 트위터를 다음과 같이 정의하려고 합니다.\n블로그: 인터넷 개인 출판사, 트위터: 개인 커뮤니케이션 창구!\n블로그는 원래 자신의 특징인 글을 올리고, 그 글에 고정된 인터넷 주소(permalink)를 부여하고, 그 글들을 관리하는 역할로 돌아갈 것 같습니다. 뭐 저처럼 개인 홈피 기능도 겸할 수 있죠 ^^; 물론 이렇게 될 수 있게 된 동기는 트위터라는 것이 나왔기 때문이죠. 트위터의 특징이 방명록 기능, 즉 커뮤니케이션 기능을 너무나 잘 해주기 때문에 이젠 방명록을 굳이 만들 필요가 없기 된 것입니다. 트위터가 더 뛰어난 기능을 합니다. 하여간 중요한 건 제 블로그에서 이젠 방명록을 퇴장시키고자 합니다.\n안녕! 방명록! Good Bye! GuestBook!\n저에게 연락하실 분은 방명록 대신 다음 링크로 연락주세요! 트위터를 하지 않으시면\u0026hellip; 이번에 트위터에 가입하세요!\nhttps://twitter.com/dialektike\nps: 참고로 저처럼 워드프레스(WordPress)를 쓰시는 분들은 Page에서 Post로 글을 전환하시려면 http://wordpress.org/extend/plugins/p2pconverter를 쓰시면 됩니다. 설치하시면 page나 post 관리하는 웹페이지에 변환 버튼(Convert to Page!)가 생깁니다. 그걸 눌려주시면 바로 변환됩니다. 저도 방명록 page를 post로 변환했습니다. 참고하세요!\n","href":"/2010/05/16/484/","title":"연락하실 분은 방명록 대신 트위터로!"},{"content":"","href":"/tags/pt/","title":"PT"},{"content":"쓸만한 폰트입니다. 그리고 거기에 무료네요. PT에 쓰기에도 좋네요. 참고로 이 글꼴은 11172자의 모든 현대 한글 글자를 표현할 수 있는 것 같습니다. 다음 링크에 가시면 받으실 수 있습니다. 또한 아래 그림을 누르시면 큰 그림으로 보실 수 있습니다.\nhttp://newj.joins.com/berliner/joongangfont.asp\n중앙폰트 ","href":"/2009/12/16/456/","title":"중앙일보 신문 전용서체, 중앙폰트"},{"content":"요즘 전 Twitter(이하 트위터)에 관심이 많습니다. 그런데 트위터가 생각보다 만만하지 않더군요. 알아야 할 것도 좀 있고 그래서 구글로 찾아봤는데 쏙 마음에 드는 설명서가 없어서 제가 필요한 것만 정리하다가 친구들에게도 트위처를 소개할 겸 Web page로 만들고자 합니다. 참고로 저는 Mac을 사용하고 있는데, tweetie이라는 프로그램을 사용하여 트위터를 사용하고 있습니다.\n1. 트위터랑 메신저는 어떻게 다를까요? 우선 메신저는 전용 프로그램을 이용해서 메세지를 1:1 또는 1:여러명이 주고 받습니다. 그러나 트위터는 제가 쓴 메세지를 누구에게 주지 않습니다.\n2. Twitter (트위터) 용어 정리 요즘 한창 트위터가 뜨고 있습니다. 그런데 그래서 한번 해보려고 시도하는 사람들이 많은데 막상 들어가 보면 영어로 서비스를 하기 때문에 어떻게 사용하는지 그 용어가 명확하지 않아 조금 혼란스럽습니다. 그렇다고 보니 제가 사용하는 방법이 맞는지 잘 모르겠고 생각보다 쓰기도 쉽지 않네요. 우선 트위터에서 사용하는 용어들이 생소합니다. 이런 용어들부터 무엇인지 알아보기 위해서 구글을 돌려봤습니다. 아래 중요한 링크를 참고해서 정리해보겠습니다.\nfollowing(따라가기): 우리가 보고 싶어하는 다른 사람의 트위터를 따라가는 것이죠. 즉 다름 사람 사람이 쓴 메세지를 우리가 쉽게 볼 수 있게 만든 것이죠. follower(따라오는 사람들): 이건 앞에서 following과는 반대 의미라고 생각하시면 됩니다. 내 트위터에 내가 쓴 메세지를 따라 오면서, 내가 쓴 것을 읽고 있는 사람들을 말합니다. list(목록): 이건 요즘 나온 기능입니다. 트위터를 쑥 안한 사람들은 잘 모를 것 같습니다. 저도 트위터를 많이 한 것이 아니기 때문에 조금 이해하기 어려운 면이 있더군요. 3. 트위터를 사용하는 유용한 링크 http://blog.creation.net/352 http://bloggershome.net/barry/entry/HowToTwitter01: 인용문 때문에 내가 이걸 적어야 하는지 걱정이 되네요.. http://twitteran.com/: 본격적으로 트위터를 소개하고 있는 블로그입니다. 조금 아쉬운 점은 내용을 잘 소개하고는 있는데, 말이 조금 어려워 보이네요.. http://ko.wikipedia.org/wiki/트위터: 한글 위키에서 트위터 소개 http://mushman.co.kr/category/Web2.0/twitter: “버섯돌이”님의 VoIP on Web2.0라는 블로그에서 트위터에 대해서 쓰신 글묶음입니다. 참 좋은 글입니다. 4. 사진 공유 사이트 플리커에 올리 사진 트위터에서 공유하기 http://ydnkrblog.com/blog/?p=159\n플리커에 올린 사진을 트위터를 통해서 링크를 공개하면서 메세지를 작성할 수 있다고 합니다. 물론 그냥 링크를 통해서 올릴 수도 있지만, 트위터는 작성할 수 있는 글자수(140)이 정해져 있기 때문에 링크를 짧게 올리는 것이 중요합니다. 그런데 이 기능을 이용하면 짧은 링크를 플리커에서 직접 만들어 줍니다.\n","href":"/2009/12/06/436/","title":"Twitter를 하는데 필요한 10가지"},{"content":"항상 책을 통해서 접하게 되는 플라톤의 대화편이지만, 너무 오래되었기 때문에 온라인에 있지 않을까하는 생각이 들어서 혹시나 해서 찾아봤더니만 역시 있네요. 아래 홈피 화면에서 볼 수 있는 것처럼 필요한 곳을 찾아보시거나, 저자 이름을 넣고 찾아보시면 됩니다. 참고로 희랍어도 같이 나옵니다. 물론 영어 번역도 있습니다.\nhttp://perseus.uchicago.edu/greek.html\nTexts-Translations 다음 링크는 제가 좋아하는 테아이테토스편을 희랍어로 찾아본 것입니다. (참고: 2014년 9월 현재 링크가 변경되었습니다. 아래 링크로 가세요.)\nhttp://artflx.uchicago.edu/perseus-cgi/citequery3.pl?dbname=PerseusGreekTexts\u0026amp;getid=0\u0026amp;query=Pl.%20Tht.%20142a\nhttp://perseus.uchicago.edu/perseus-cgi/citequery3.pl?dbname=PerseusGreekTexts\u0026amp;getid=0\u0026amp;query=Pl.%20Tht.%20142a\n다음 링크는 제가 좋아하는 테아이테토스편의 내용중 위의 내용을 영어로 찾아본 것입니다.\nhttp://artflx.uchicago.edu/perseus-cgi/citequery3.pl?dbname=PerseusGreekTexts\u0026amp;query=Pl.%20Tht.%20142a\u0026amp;getid=1\nhttp://perseus.uchicago.edu/perseus-cgi/citequery3.pl?dbname=PerseusGreekTexts\u0026amp;query=Pl.%20Tht.%20142a\u0026amp;getid=1\n아래에 보면 영어는 희랍어로, 희랍어는 영어로 그 부분을 볼 수 있게 링크를 걸어두었네요.\n","href":"/2009/09/16/423/","title":"영어로 플라톤의 대화편을 찾아서 보는 방법"},{"content":"","href":"/tags/%EC%BB%A4%ED%94%BC/","title":"커피"},{"content":"요즘 커피 전문점에 가면 메뉴가 복잡합니다. 뭘로 만드는지도 궁금하기도 하고.. 물론 어느 정도는 대충 알고 있었지만, 이 그림을 보면서 정확하게 알게 되었습니다. 참 잘 그렸죠? 다음 링크에 가시면 원본을 보실 수 있습니다.\ncoffee_menu http://www.lokeshdhakar.com/2007/08/20/an-illustrated-coffee-guide/\n","href":"/2009/02/25/359/","title":"커피 전문점 커피, 어떻게 만들까?"},{"content":"","href":"/tags/presentation/","title":"presentation"},{"content":"","href":"/tags/%ED%8C%8C%EC%9B%8C%ED%8F%AC%EC%9D%B8%ED%8A%B8/","title":"파워포인트"},{"content":" 지은이: 유현덕 펴낸곳: 한빛미디어(주) 출판연도: 2007년 이제 Presentation(이하 PT) 책도 진화를 거듭해서 볼만하고 쓸 만한 책이 상당히 많습니다. 예전에는 PT책이 파워포인트 활용서인 경우가 많았죠. 그러나 요즘은 PT자체에 대한 이야기를 많은 이야기를 담고 있는 책들이 많아서 실제로 PT를 하는데 많은 도움이 됩니다. 바로 이 책이 그런 책 중 하나입니다. 이 책은 크게 1. 기획파트와 2. 디자인 파트로 나눠집니다. 여기서 기획파트가 참 알차게 되어 있습니다. 그리고 2. 디자인 파트도 아주 쓸모 있게 되어 있습니다.\n그러나 아쉬운 점이 조금 있습니다. 이 책은 이 두 마리 토끼를 다 잡으려고 욕심을 부리고 있고, 어느 정도는 그 성과를 만족시키고 있습니다. 그러나 아쉽게도 1.기획 파트 정도의 내공이 2.디자인 파트에서는 보이지 않습니다. 2.디자인 파트는 단지 조금 어려운 따라하기 수준을 보여주는 것 같아서 안타깝습니다. 그래도 이 책정도 분량에서 이 정도 좋은 내용을 담고 있기는 상당히 어렵습니다. 사람들에게 자신 있게 PT할 때 보라고 추천한 만한 책임은 틀림없습니다.\n참고로 CD에 있는 내용도 바로 PT에 투입할 만큼 좋습니다. 한 번 쭉 보세요. 그리고 조심할 부분은 이 책은 2003용 파워포인트를 가지고 설명하고 있으니 자신이 사용하고 있는 파워포인트 버전을 살펴보시고 이 책을 읽으세요\n72쪽: 데이터는 정성 데이터와 정량 데이터로 구분할 수 있습니다. 정성데이터는 텍스트 위주의 데이터이며 정량 데이터는 통계학 자료로 표나 그래프 위주의 데이터입니다. 프레젠테이션에서는 정성데이터와 정량 데이터를 복합적으로 사용하지만, 내용 전달을 효과적으로 전달하기 위해서 정량데이터의 사용비중이 높습니다.\n","href":"/2009/02/20/351/","title":"회사에서 바로 통하는 프레젠테이션 기획 + 디자인"},{"content":"이제서야 채점이 끝나 오래간만에 도서관에서 잡지를 보다가, 한글에 대한 광고를 보게 되었습니다. 라디오, TV, 잡지등 많은 매체를 보거나 듣다 보면, 수많은 광고들이 정신을 어지럽게 만들지만, 꼼꼼히 잘 들여다보면 쓸만한 정보가 꽤 있습니다. 『디자인』이라는 잡지에 11, 12월호에 유익한 광고가 있어서 소개합니다.\n우선 12월호에 나온 ‘타이포 그래피 Tip 02: 가독성 높이는 방법’부터 보겠습니다. 가독성을 높이기 위해서서는 글자에 관련된 다양한 것을 조절해야 한다고 합니다. 단어사이가 좋으면 단어 구별이 잘 안 되면 단어를 잘 구별할 수 없고, 반대로 너무 넓으면 같은 문장으로 보이지 않을 수 있다고 하네요.\n다음으로는 11월호에 나온 ‘타이포 그래피 Tip 01: 글꼴의 특성을 판별하는 방법’에 대한 이야기를 정리해보겠습니다. 한글꼴 명조에서 ‘ㅎ’자가 가장 많은 개성을 가지고 있다고 합니다. 꼭지점, 가로 줄기, 동굴이응과 상투의 모양에서 각 글꼴의 개성이 드러 난다고 합니다. 그래서 많이 쓰는 글꼴을 다음과 같이 살펴봤습니다. 쓸 때는 잘 몰랐는데 정말로 많이 다르네요.\nhangul fonts ","href":"/2009/02/03/%ED%8F%B0%ED%8A%B8-%EA%B4%91%EA%B3%A0%EC%97%90%EC%84%9C-%ED%95%9C%EA%B8%80%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%ED%95%9C%EC%88%98-%EB%B0%B0%EC%9A%B0%EB%8B%A4./","title":"폰트 광고에서 한글에 대해서 한수 배우다."},{"content":"저자: 앤드류 그레고리, 몸과마음, 2003\n이 책은 서양 고대 철학과 과학을 잘 소개하고 있는 책입니다. 서양 고대 철학(특히 그리스)에 관심이 있으신 분에게 강추합니다.\n201-202쪽, 그리스인들에게 유리한 도운 조건에는 중앙집권적 종교와 위계적 조직이 없었다는 것과 표현의 자유가 있었다는 것이다. 그리스 사회는 충분히 풍족해서 사람들이 세계의 본성에 대한 질문을 탐구하기 위해 한가한 시간을 가질 수 있는 사회였다. 덧붙여 어떤 분야(기하학, 천문학, 의학)에서는 기술적인 기초가 이미 마련되어 있었다. 그래서 과학에 대한 변화의 시간이 무르익었다. 비판 정신과 토론, 지식 자체를 사랑한 그리스 사회는 일단 과학의 씨가 뿌려지자 엄청나게 비옥한 토양이라는 것을 증명했다.\n","href":"/2009/01/27/333/","title":"왜 하필이면 그리스에서 과학이 탄생했을까?"},{"content":"저자: 천웨이핑, 미다스북스, 2003\n최근에 오래간만에 읽은 동양철학에 관한 책입니다. 공자에 대한 평가는 정말로 다양하지만, 중요한 점은 기원전 551년에 태어나 479년에 떠난 이후 지금까지 유가라는 사상이 전해져 내려고 있다는 점이죠. 2천년을 지난 지금까지도 성인으로 우리에게 남아있다는 것은 정말로 대단한 것입니다. 물론 객관적으로 공자를 파악하기는 쉽지 않지만 이 책을 통해서 그 풍모를 조금이나마 엿볼 수 있다는 점이 좋았습니다. 제 1부는 풍부한 문헌으로 공자의 일생을, 제 2부는 유가사상에 대하여, 제 3부는 공자의 사고가 중국 내외에 어떤 영향을 미치고 있는지를 보여줍니다. 필자는 2부를 흥미롭게 읽었습니다. 유가에 대해서 한발짝 나아갈 수 있었습니다. 3부는 초반에는 역사적인 맥락에서 유가의 변천을 살펴보는데 조금 지루한 면이 없지않았습니다. 그러나 \u0026lsquo;전통 문화의 지류 안에서\u0026rsquo;라는 소단원은 재미있었습니다. 유가가 다른 학문에 어떤 영향을 주었느지 설명하는 부분이었는데 역법, 천문학과의 관계는 재미있었습니다.\n119쪽, 공자는 교육을 맏는 대상에 대해서 \u0026ldquo;가르침에는 일정하게 정해진 부류가 없다\u0026quot;고 주장하였다. 교육을 평민에게까지 보급시켜 모든 사람이 가르침을 받아야 한다고 여겼으며, 그 결과 누구든 공자에게 교육받을 수 있었던 것이다. ~ 또한 공자는 \u0026ldquo;사람의 성품은 태어날 때는 비슷하지만 공부하는 습관에 따라 달라진다\u0026quot;고 했는데, 이는 인간 본성은 서로 가까운데 지식 도덕상 중대한 차이가 있으며, 그 이유는 후천적인 사회 환경과 교육의 결과라는 것이다.\n347쪽, 그러나 지천명으로 인해 관심을 얻은 천문학은 국가의 정치 도구가 됨을써 발전이 더뎌졌다. 이는 독점성과 허구성의 두 측면이 드러낸 것이다. 통치자는 천상을 이용해 왕조를 바꾸고 세대를 교체시켰으나, 다른 사람이 천상을 이용해 자신에게 대응하는 것을 우려했다. 때문에 지천명의 권리는 자신만이 독점했다.\n","href":"/2008/11/17/291/","title":"공자 평전"},{"content":"","href":"/tags/itune/","title":"iTune"},{"content":" first buy the song in iTune 제가 첫번째로 iTunes에서 산 파일입니다. 복잡하게 선불카드인 iTune card를 사고 아주 단순하게 몇번의 클릭으로 음악파일을 샀습니다. 아시는 분은 아시겠지만, 전 정식으로 모든 음악파일을 사는 것이 목표입니다. 물론 가지고 있던 모든 파일도 다 지웠죠. 그러나 아쉽게도 한국에서 음악 파일을 사거 듣는 다는 것이 것이 그리 쉬운 결정은 아니었습니다. 너무 쉽게 불법으로 구할 수 있기 때문입니다. 그러나 저부터 양심을 속이지 말고 변하기로 결정했습니다. 술 한잔 먹지 말고 CD를 사고 음악 파일을 구입하겠습니다.\n","href":"/2008/10/28/139/","title":"정식으로 음악파일을 사는 것이 이렇게 쉬운데.."},{"content":"","href":"/tags/physics/","title":"physics"},{"content":"공부하는 있어서 불편한 점 중의 하나가 용어를 이해하는 것입니다. 물론 외국에서 들어온 학문은 외국어로 하는 편이 좋을 수도 있습니다. 그러나 책을 보는 경우에는 문제가 조금 달라집니다. 용어들이 통일되어 번역되지 않은 경우가 있습니다. 이런 경우 답답하죠. 이 단어가 어떤 것인지.. 물리학 용어들이 번역되어 인터넷에 있다는 것은 좋은 일입니다.\n물리학 용어 (영문을 한글로) 마지막 수정일 : 2000. 2. 29 한국물리학회가 1995년에 제정하여, 사용하기를 권장하고 있는 물리학 한글용어를 싣습니다. 한글 용어의 표준화를 위하여 실험보고서 등에 이용하기를 바라며, 따로이 책으로 된 \u0026ldquo;물리학 용어집\u0026quot;을 구입하기를 원하는 분들은 한국물리학회(전화: 556-4737)로 문의하십시요.\n다음 링크를 누르시면, 많은 번역된 물리학 용어를 보실 수 있습니다.\nhttp://physlab.snu.ac.kr/http(1)/lab/wordeth.htm\n","href":"/2008/10/09/256/","title":"영문 물리학 용어를 한글로."},{"content":"","href":"/tags/plugin/","title":"Plugin"},{"content":"조금 제목이 이상하지만, 가끔 글을 올릴 때 컴퓨터 명령어나 프로그램 코드와 같은 것들을 올려야 될 경우가 있습니다. 바로 Mac OS X 에서는 어떻게 MD5 체크(MD5 Check)를 할까?라는 글이 그렇습니다. 여기에는 터미널에서 사용하는 명령어를 넣어야 하는데 그냥 쓰는 글로 쓰면 구별이 안될 것 같아서 다르게 넣으려고 인용으로 넣었지만 보기가 좋지 않았습니다. 그래서 찾아보다 다음 플러그인을 발견했습니다. 쓸만합니다. 사용법도 물론 간단합니다.\nWP-Syntax\n","href":"/2008/10/03/234/","title":"프로그램 코드와 같은 형식의 글을 넣어보자!"},{"content":"","href":"/tags/no_11172_%ED%95%9C%EA%B8%80/","title":"no_11172_한글"},{"content":"요즘 좋은 글꼴이 쏟아지고 있습니다. 예전에 네이버에서도 나오더니 다음에서도 한글날을 얼마 안 남기고 누구나 사용할 수 있도록 다음체를 배포하고 있네요. 고딕 형식이기 때문에 문서 본문용으로 쓰기에는 무리가 있지만, PT나 제목용으로 쓰기에는 좋을 것 같습니다. 참고로 TTF 형식의 서체입니다. 들어있는 영어글꼴이 예뻐서 찾아보았더니 현대카드 등을 통해 독창적인 디자인으로 인정받은 유명 네덜란드 디자인회사 토털아이덴터티가 영문글꼴을 만들었다고 합니다. 한글글꼴은 국내 폰트 디자인 전문업체인 좋은글씨가 만들었다고 합니다. 다음 링크를 가시면 다운받을 수 있습니다. 그런데 이 글꼴은 11172자의 모든 현대 한글 글자를 표현할 수 없네요. 예를 들어 \u0026lsquo;똠\u0026rsquo;방각하에서 \u0026lsquo;똠\u0026rsquo;을 쓸 수 없네요. 조금은 아쉽네요.\nhttp://fontevent.daum.net/\n한번 테스트 해봤습니다. 조금 굵은 것 같은데 잘 쓰면 좋을 것 같습니다. 아래 그림을 누르시면 더 크게 볼 수 있습니다.\nfont test 1001 ","href":"/2008/09/14/199/","title":"PT에서 쓸만한 서체 \"다음체\" 무료 배포!"},{"content":"","href":"/tags/pointer/","title":"pointer"},{"content":"저도 PT를 많이 하기 때문에(수업을 모두 PT로 ^^;) 포인터에 대한 관심이 무척 많습니다.예전에 홈피에도 썼지만,지금 사용하고 있는 PT용 포인터 X-Pointer II도 PT하는데 불편 없이 잘 사용하고 있습니다. 그러나 이 제품을 보니, 혹 하네요. 우선 디자인이 좋고 무엇보다도 무선 3차원 공간인식을 한다는 점이 마음에 듭니다. 손목만 움직이면, 마우스처럼 움직인다고 하네요. 제가 쓰는 것이 망가지면 고민해 봐야겠습니다. 그러나 안 좋은 점은 충전한다는 점이네요. 하여간 링크 하나 걸어둡니다.\nhttp://www.zmotion.co.kr/products/products.asp\n","href":"/2008/07/26/161/","title":"PT 용 포인터: Z-motion의 MM-120"},{"content":"이 글은 영미 언어철학을 공부하는데 필요한 논문의 이름을 정리한 글입니다. 필요하신 분은 아래를 클릭해주세요!\n다음에서 소개할 논문들의 출처는 다음과 같은 약자로 표시 합니다.\nL = Peter Ludlow. Readings in the Philosophy of Language. Cambridge, MA: MIT Press, 1997.\nM3 = A. P. Martinich. The Philosophy of Language. 3rd ed. Oxford: Oxford University Press, 1996.\nM4 = A. P. Martinich. The Philosophy of Language. 4th ed. Oxford: Oxford University Press, 2001.\nRT = Jay F. Rosenberg and Charles Travis. Readings in the Philosophy of Language. Prentice Hall, 1971.\n기본적으로 미리 읽어야 할 책들 Kenneth Taylor. Truth and Meaning. Oxford: Blackwell, 1998.\nBob Hale and Crispin Wright. A Companion to the Philosophy of Language. Oxford: Blackwell, 1997\nScott Soames. Understanding Truth. Oxford: Oxford University Press, 1999\n읽어야 할 논문 분야: Truth and meaning Gottlob Frege. The thought (1925). L 9-30\nAlfred Tarski. The semantic conception of truth (1944). M3 61-84, M4 69-91, L\nH. P. Grice. Meaning (1957). M3 85-91, M4 92-97\nDonald Davidson. Truth and meaning (1967). L 89-108, M3 92-103, M4 98-109\nP. F. Strawson. Meaning and Truth (1970). M3 104-114, M4 110-119\n분야: The analytic/synthetic distinction W. V. O. Quine. Two dogmas of empiricism (1951). M3 39-52, M4 47-60, RT 63-80\nH. P. Grice and P. F. Strawson. In defense of a dogma (1956) RT 81-93\nHilary Putnam. The analytic and the synthetic (1966) RT 94-125\nAaron Sloman, “Necessary”, “a priori” and “analytic”, Analysis 26, 1965-6, pp. 12-16.\nSaul Kripke. Naming and necessity. Cambridge, MA: Harvard University Press, 1980. Lecture I.\n분야: Reference, descriptions, proper names Gottlob Frege. On sense and reference/nominatum (1892). L 563-584, M3 186-198, M4 199-211\nBertrand Russell. On denoting (1905). M3 199-207, M4 212-220\nBertrand Russell. Descriptions (1919). L 323-335, M3 208-214, M4 221-227, RT 166-174\nP. F. Strawson. On referring (1950). L 335-360, M3 215-230, M4 228-242, RT 175-194\nJohn Searle. Proper names (1958). L 585-592, M3 249-254, RT 212-218\nKeith Donnellan. Reference and definite descriptions (1966). L 361-382, M3 231-243, M4 247-258, RT 195-211\nGareth Evans. The causal theory of names (1973). L 635-656, M3 271-284, M4 296-307\nSaul Kripke. Speaker\u0026rsquo;s reference and semantic reference. L 383-414\nSaul Kripke. Naming and necessity. Cambridge, MA: Harvard University Press, 1980. Lecture I and II\nHilary Putnam. Meaning and reference (1973). M3 284-291, M4 288-295\nDavid Kaplan. Demonstratives. In: Joseph Almog and John Perry (eds.), Themes from Kaplan, Oxford: Oxford University Press, 1989, 481-563\nNathan Salmon, Reference and information content. In Handbook of Philosophical Logic IV\n분야: Propositional attitudes W. V. O. Quine. Quantifiers and propositional attitudes (1956) Jac 285-291, M3 330-336, M4 355-360\nDonald Davidson. On saying that (1968) L 817-832, M3 337-346, M4 361-370\nDavid Kaplan. Quantifying In (1968) Jac 318-337, M3 347-368, M4 371-391\nSaul Kripke. A puzzle about belief (1979) L 875-920, M3 382-409, M4 405-431\nDavid Kaplan. Opacity. In: Lewis E. Hahn and Paul A. Schilpp. The Philosophy of W. V. Quine. La Salle, IL: Open Court, 1986, 229-289\n분야: Speech acts J. L. Austin. How to do things with words. 2nd Edition. Cambrigde: Harvard University Press, 1975.\nJohn Searle. Speech acts. Cambridge: Cambridge University Press, 1969. Part I.\nH. P. Grice. Logic and conversation. In: Studies in the Way of Words. Cambridge, MA: Harvard University Press, 1989\n간단한 문제들 What is rigid designation? State and assess Kripke\u0026rsquo;s arguments that proper names such as \u0026lsquo;Aristotle\u0026rsquo; and \u0026lsquo;Moses\u0026rsquo; are rigid designators.\nState and assess the modal argument against descriptivism.\nWhat is Frege\u0026rsquo;s Puzzle? Explain how Frege attempts to resolve it in his \u0026lsquo;On Sense and Reference.\u0026rsquo;\nState the main features of Russell\u0026rsquo;s theory of descriptions and explain how this theory handles the puzzle about George IV.\nExplain the phenomenon of referential use of definite descriptions. Is this a problem for Russell\u0026rsquo;s theory of descriptions?\nAssess the following argument: 9 is the number of planets, Necessarily, 9 is odd, Therefore, Necessarily the number of planets is odd.\nDescribe a Tarskian definition of truth for a simple language L, and assess the view that a theory of meaning for L can be cast in the form of such a definition.\nA sign reads \u0026ldquo;Thank you for not smoking!\u0026rdquo; Analyze this according to the theory of speech acts.\nExplain Davidson\u0026rsquo;s slingshot argument in \u0026ldquo;Truth and meaning\u0026rdquo;? What does it show, if anything, about the role of facts in the theory of meaning.\n출처: http://www.phil.ucalgary.ca/philosophy/grad/language.html\n","href":"/2008/07/24/157/","title":"Philosophy of Language 논문 정리"},{"content":"이제야 방학이 되는 것 같습니다. 물론 아직 계절학기 채점이 남았지만, 그래도 조금은 여유가 있네요. 2008년도 1학기, 계절학기를 수업하신 분들 수고하셨습니다.\n","href":"/2008/07/17/150/","title":"안개낀 왕산"},{"content":"\n참 막연하게 이산화탄소에 대해서 생각했었는데 우리나라가 생각보다 많이 매출하네요. 앞에 그림 자료를 인쇄할만한 크기의 파일을 찾으시려면 다음 링크를 누르세요.\ncarbonatlas.pdf\n","href":"/2008/07/16/146/","title":"전세계에서 발생하는 이산화탄소 발생 지도"},{"content":"요즘 프레젠테이션(이하 PT)가 대학에서는 대세로 굳어지고 있는 것 같습니다. 그럼에도 불구하고 제가 수업시간에 PT가 대세라고 떠들어 대도, 아직도 많은 학생들은 꾿꾿하게 막상 PT로 발표하라, 레포트를 내라고 시키면, 대충 만들어 내고 발표하는 것 같습니다. 그러나 아쉽게도 현실은 조금 더 빠르게 변하고 있습니다. 이미 엔티니어들도 PT를 잘해야 하는 시대가 오고 있습니다. 다음 링크는 \u0026ldquo;엔지니어들을 위한 프레젠테이션 잘하는 방법\u0026quot;라는 컬럼입니다. 이 컬럼에 나오는 다음과 같은 글을 곰 씹어볼 필요가 있다. 뭐 다 아는 이야기지지만, PT의 정수를 말하는 말이니 한번 잘 생각해봅시다. 그리고 꼭 한 번 읽어봅시다.\n누군가의 표현처럼 \u0026ldquo;발표 자료는 보고서가 아닙니다\u0026rdquo;, 즉 발표자료는 많은 내용을 정리하는 것이 목적이 아니라 얼마나 청중을 잘 이해시킬 수 있는가가 목적인 것이다.\nhttp://www.zdnet.co.kr/itbiz/column/anchor/minupark/0,39035389,39164309,00.htm\n","href":"/2008/07/03/124/","title":"엔지니어들을 위한 프레젠테이션 잘하는 방법: \"발표 자료는 보고서가 아닙니다\""},{"content":"우선 다음을 참고합니다.\n유인물 만들기 및 인쇄 http://office.microsoft.com/ko-kr/powerpoint/HA100312841042.aspx\nPowerPoint에서 유인물 인쇄 http://office.microsoft.com/ko-kr/powerpoint/HA010348091042.aspx\n아쉽게도 앞의 기능을 사용하면 유인문 인쇄 기능을 사용해서 메모, 멘트를 같이 인쇄할 수는 있습니다. 그러나 이 기능으로는 1장에다가 메모를 가진 슬라이드를 3개밖에 넣을 수 없습니다. 그러면 어떻게 6장을 넣을 수 있을까요? 아래 내용만 잘 이해하시면 메모와 멘트가 들어 있는 PT 슬라이드 6장을 A4 1장에 넣으실 수 있습니다.\n1장에 6개의 슬라이드를 인쇄하려면, 프린트의 \u0026lsquo;모아찍기\u0026rsquo;기능을 이용하시면 됩니다. 이 기능을 어떤 프린터에서는 \u0026lsquo;용지당 page 수\u0026rsquo;라고도 합니다. 그러면 1 page 에 2 pages 를 찍을 수 있게 됩니다. 1장에 3개의 메모를 가진 슬라이드를 넣을 수 있으니 2장을 넣으면6장의 슬라이드를 가진 A4 1장을 인쇄할 수 있게 됩니다. 다음 내용은 성균관대학교 학술정보관에서 운영하는 우리 모두의 전공 위키백과사서를 위한 맞춤형 컴퓨터 팁 2에서 가져온 것입니다. 여기서 \u0026lsquo;2) 프린터의 모아찍기 기능 활용하기\u0026rsquo;, \u0026lsquo;3) 모아찍기 전용 프로그램\u0026rsquo;을 사용하 해결할 수 있습니다.\n프린터 사용할 때 용지 절약하는 방법 한번 읽을 용도로 출력할 때 종이가 아깝다고 생각되는 경우가 종종 있다. 이럴 때에는 문서를 축소하여 출력(모아찍기)하면 종이를 절약할 수 있다. (또 다른 용도로는, 지위를 이용해 꼭 도서관 사무용 프린터를 쓰려는 분(\u0026ndash;;)들이 있을 경우 이런 방법으로 배 아픈 정도를 줄일 수 있을 것이다.)\n프로그램 자체의 모아찍기 기능 활용하기 아래아한글 인쇄(Ctrl+P) → \u0026lsquo;인쇄방식\u0026rsquo; 옵션에 \u0026lsquo;자동 인쇄\u0026rsquo;를 \u0026lsquo;2쪽씩 모아 찍기\u0026rsquo;로 하면 2쪽(페이지)이 1장의 용지에 축소되어 출력됨. \u0026lsquo;4쪽씩 모아 찍기\u0026rsquo;로 설정하면 4쪽을 1장의 용지로 출력할 수 있음. Microsoft Word 인쇄(Ctrl+P) →(프린터 아이콘을 누르지 말고) 메뉴 → \u0026lsquo;한 면에 인쇄할 페이지수\u0026rsquo;에서 1장의 용지에 함께 출력할 쪽수를 선택 Microsoft Powerpoint (유인물 출력기능 활용) 인쇄(Ctrl+P) →(프린터 아이콘을 누르지 말고) 메뉴 → 인쇄 → \u0026lsquo;인쇄대상\u0026rsquo;을 슬라이드에서 유인물로 선택 → \u0026lsquo;한 페이지에 넣을 수 있는 슬라이드 수\u0026rsquo;는 6으로 조정 → \u0026lsquo;확인\u0026rsquo; 클릭 (단, 글자가 작거나 그림이 복잡한 파일은 출력후 식별이 어려울 수도 있음) 프린터의 모아찍기 기능 활용하기 제어판의 프린터 설정창에서 기본 프린터로 등록된 프린터를 마우스 오른쪽으로 클릭하여 \u0026lsquo;속성\u0026rsquo;을 선택하면 프린터 등록정보창이 뜬다. 여기서 \u0026lsquo;기능\u0026rsquo; 메뉴를 클릭하면 프린터에 따라 모아찍기 기능이 있다. 물론 모아찍기 기능을 지원하지 않는 프린터도 있다.\n모아찍기 전용 프로그램 이도저도 안되면 모아찍기 전용 프로그램을 쓸 수밖에 없는데, FinePrint가 대표적이다. 이 프로그램은 일종의 프린터 드라이버로서, 어떤 응용 프로그램에서도 1, 2, 4, 8 장의 문서를 한 장의 종이에 인쇄할 수 있어 종이와 토너/잉크의 절약을 가능케 합니다. 상용 프로그램이지만 http://www.fineprint.com에서 셰어웨어를 다운로드 할 수 있으며 이 버전에서는 각 페이지에 작은 배너가 삽입된다. 개인용도라면 이 정도 광고는 감수할 만할 것이다. (단, 출력할 때마다 제어판에서 기본 프린터 설정을 해주어야 하는 불편함이 있음)\n다른 링크도 소개하겠습니다. 소나무의 한글 이야기 그리고 소나무 사친첩이라는 한글 문서 인쇄할 때 여러 개 문서를 한꺼번에 2쪽씩 모아찍기에서도 다음과 같은 내용을 보실 수 있습니다.\nFinePrint라는 프로그램을 이용하는 것 다양한 인쇄 옵션을 설정할 수 있는 프린터 유틸리티다. 1장에 2장씩, 4장씩 그 이상도 출력할 수 있고 워터마크도 줄 수 있는 등의 기능이 있다. 단 상용 프로그램이라는 것. 체험판이 있으나 체험판을 쓰면 FinePrint에서 인쇄하였다는 문구가 찍힌다.\n프린터 드라이버를 이용하는 방법 프린터 드라이버를 보면 1장에 2장 또는 4장씩 인쇄할 수 있게 해 주는 옵션이 있다. 모든 프린터에 다 있는 건 아니고 없는 프린터도 있다. 요새 나온 것은 기본으로 설정할 수 있지 않을까 한다.\n제어판의 프린터로 이동 사용하는 프린터(기본 프린터)를 선택하고 마우스 오른쪽 단추를 눌러 “인쇄 기본 설정\u0026hellip;” 실행 ","href":"/2008/06/28/142/","title":"여러개 PT 슬라이드를 한 장에 모아 인쇄하는 방법"},{"content":"","href":"/tags/vi/","title":"VI"},{"content":"Mac은 원래 출생이 유닉스이기 때문에 터미널이 있습니다. linux를 쓰신 분들은 잘 아시겠지만, 터미널만 있어도 많은 일을 할 수 있고 실제로 많은 일을 했죠. 요즘은 이런 터미널을 쓰는 사람이 많지는 않지만 배워두면 나중에 웹 호스팅 하거나 서버를 만질 때 유용합니다. 저도 기록을 남기기 위해서 여기에 정리합니다. 참고로 여기서 소개하는 내용을 Mac 우선시 하시만, 다른 Uinx 계열에서도 잘 작동할 것 같네요 ^^;\nvi의 기본 사용법: vi는 입력 모드와 명령 모드로 나누어져 동작합니다 명령모드로: [esc] 키 입력 모드로: i키: 현재 커서의 위치부터 입력 a키: 현재 커서의 위치 다음 칸부터 입력 o키: 현재 커서의 다음 줄에 입력 s키: 현재 커서 위치의 한 글자를 지우고 입력 vi를 종료하기: 우선 명령행 모드로 가야 합니다. 시작하고 나면 명령 모드 이기 때문에, :를 입력하면 vi 좌측 하단에 :가 출력됩니다. 이 때 vi를 종료하는 q를 입력하고 [return]을 치면 종료! 파일 만들고 저장하기: 터미널에서 vi text.txt 과 같이 입력하면, text.txt파일이 만들어지고 그 파일을 vi에서 실행합니다. 여기서 i를 입력하면 입력모드가 실행됩니다. 내용을 타이핑하고 나서 [esc]키를 눌러 명령 모드로 들어가서 :wq를 입력하고 [return]키를 입력하면 vi는 종료됩니다. 참고로 명령어 wq는 파일을 저장하고 종료하라는 명령어입니다. vimrc 설정: http://www.cocoadev.co.kr/30 참고 터미널에서 ANSI 컬러 사용을 위해 ~/.profile 파일에서 수정할 내용: http://www.likejazz.com/macosx/ 참고 ","href":"/2008/06/21/141/","title":"터미널의 설정법"},{"content":"4월 8일자 기사로 \u0026ldquo;철학의 부활\u0026quot;이라는 제목으로 거의 똑같은 내용의 기사가 올라왔습니다. 다음 링크를 참고하세요.\n동아일보, 횡설수설/홍찬식: 철학의 부활 조선일보, 만물상/이선민 논설위원: 철학의 부활 조선일보, 이석호 기자, 미(美) 대학가 \u0026lsquo;철학의 부활\u0026rsquo; 철학과에서 생활하는 입장에서 반가워서 읽어 보았더니, 철학이 의외로 실용적인 면이 있어서 미국 대학생들이 선택하고 있었더군요. 신기하기도 하고 조금은..\n미국 대학생들에게 외면당해 온 철학 과목이 다시 인기를 끌고 있다고 한다. 6일 뉴욕타임스 보도에 따르면 뉴욕시립대의 경우 철학이 전공인 학생이 6년 전보다 50%나 늘어난 322명에 이른다. 미국 로스쿨 지망생들이 치르는 LSAT(Law School Admission Test・법과대학원 입학시험) 성적을 분석했더니 학부에서 철학을 전공했던 학생의 평균 점수가 전체 2위였다. 1위는 물리학 전공 학생\n저는 어떤 식으로든 철학이 주목을 받았다는 점이 좋습니다. 너무 무겁고 진지하게 접근하는 것도 좋지만 이처럼 현실적인 면에서도 접근하는 것도 좋다고 생각합니다. 우선 살아야 뭔가 펼칠 수도 있는 것 아닙니까?\n","href":"/2008/04/09/132/","title":"철학의 부활?"},{"content":"","href":"/tags/spam/","title":"Spam"},{"content":"가끔 바쁠때 전화가 옵니다. 그것도 모르는 전화가 옵니다. 난감한 상황이 생기곤 하죠. 당연히 그 때는 받지 못하고 있다고 나중에 걸어야 하는 것인지 걱정하게 됩니다. 이런 경우에 다음 사이트에서 찾아보세요. 걸려온 전화번호가 스팸전화번호인지 아실 수 있습니다. 쓸만한 싸이트이기 때문에 정리 차원에서 홈피에 올려봅니다.\nSpam Caller-ID Database:http://missed-call.no-ip.info ","href":"/2008/03/10/131/","title":"스팸전화번호일까 한번 알아볼까요? 스팸번호 검색DB"},{"content":"Edited by: Dale Jacquette (Pennsylvania State University)\nSeries: Blackwell Philosophy Anthologies\nPreface.\nAcknowledgments.\nIntroduction: Logic and Philosophy of Logic: Dale Jacquette.\nPart I: Classical Logic:\nThe Laws of Logic: Arthur Pap. Russell’s Mathematical Logic: Kurt Gödel. Which Logic is the Right Logic?: Leslie H. Tharp. What Can Logic Do For Philosophy?: Karl Popper. Part II: Truth, Propositions and Meaning:\nTruth and Meaning: Donald Davidson. Outline of a Theory of Truth: Saul A. Kripke. Tarski’s Theory of Truth: Hartry Field. Types and Ontology: Fred Sommers. Propositions: George Bealer. Part III: Quantifiers and Quantificational Theory:\nLogic and Existence: Czeslaw Lejewski. A Plea for Substitutional Quantification: Charles Parsons. Nominalism and the Substitutional Quantifier: Ruth Barcan Marcus. Interpretations of Quantifiers: Thomas Baldwin. Language Games for Quantifiers: Jaakko Hintikka. Part IV: Validity, Inference and Entailment:\nBolzano’s Concept of Consequence: Rolf George. On the Concept of Logical Consequence: Alfred Tarski. The Pure Calculus of Entailment: Alan Ross Anderson and Nuel D. Belnap, Jr. Formal and Material Consequence: Stephen Read. Tarski on Truth and Logical Consequence: John Etchemendy. Part V Modality, Intensionality and Propositional Attitude:\nWhat are Possible Worlds?: John E. Nolt. Quantifiers and Propositional Attitudes: W.V.O. Quine. Counterpart Theory and Quantified Modal Logic: David Lewis. Interpretation of Quantifiers: Dagfinn Follesdal. A Backward Look at Quine’s Animadversions on Modalities: Ruth Barcan Marcus. Quantifying In: David Kaplan. Substitutivity and the Coherence of Quantifying In: Graeme Forbes. The Intensionality of Ontological Commitment: Michael Jubien. Index.\nPaperback\nISBN: 9780631218685 ISBN10: 0631218688\n도서관 번호: 160 J19p\nUSA: Oct 2001 Rest of World: Oct 2001 Australia: Dec 2001\nFormat: 244 x 172 mm , 6.75 x 9.75 in\nDetails:384 pages, 1 illustrations.\n","href":"/2008/01/31/476/","title":"Philosophy of Logic"},{"content":"우리는 한국인이 서양 사람들보다 합리적이지 않다고 생각하는 경향이 있습니다. 물론 이러한 것도 한국인의 특징이 될 수 있지만, 그렇다고 해서 서양사람들이 항상 우리보다 합리적인 것만은 아닌 것 같습니다. 조선일보에 나온 조지프 스티글리츠 선생님의 \u0026ldquo;국제금융의 위선\u0026quot;라는 칼럼을 읽어보면, 서양인 또한 항상 합리적이지 않고 그들도 자신의 이익에 따라서 얼마든지 자신들의 입장을 바꿀 수 있다는 점을 볼 수 있습니다. 앞의 컬럼에 나온 한 단락을 살펴봅시다.\nIMF와 미국 재무부가 동아시아에 내린 처방과 현재 서브프라임 사태에서 일어나고 있는 일과 너무 대비돼 눈이 부실 지경이다. 동아시아 국가들은 금리를 올리도록 요구받았다. 금리가 25%, 49%, 심지어는 이보다 더 높은 경우도 있어, 도산사태의 원인이 됐다. 하지만 현재의 서브 프라임 위기에서, 미국 연방준비위원회와 유럽중앙은행은 금리를 낮췄다.\n또 동아시아 위기를 겪은 국가들은 당시 보다 투명하고, 보다 나은 규제에 대해 강의를 들었지만, 투명성의 결여는 바로 올여름 신용위기의 핵심이다.\n이처럼 서양도 그리 합리적이지만은 못한 것 같네요. 점점 더 국가들간의 대화나 논의가 많아 질수록, 대화나 논의가 중요해질 것입니다. 이때 우리가 가져야 할 것이 아이러니하게도 합리적이고 이성적으로 남을 설득하는 방법입니다. 이러한 방법없이 문화적 배경이 이질적인 나라간의 합의를 도출하는 것은 그리 쉬운 일은 아니기 때문이죠.\n","href":"/2008/01/28/130/","title":"\"국제금융의 위선\"이라는 칼럼을 읽고"},{"content":"","href":"/tags/%EC%BB%AC%EB%9F%BC/","title":"컬럼"},{"content":"","href":"/tags/%EA%B8%80%EC%93%B0%EA%B8%B0/","title":"글쓰기"},{"content":"","href":"/categories/%EB%B9%84%ED%8C%90%EC%A0%81-%EC%82%AC%EA%B3%A0/","title":"비판적 사고"},{"content":"제가 대학교 1학년때 탁석산 선생님께 수업을 들었던 적이 있습니다. 그 때도 항상 말씀이 쨍쨍했죠. 그러다가 TV에서 보고 이렇게 인터넷을 통해 기사를 보니 너무 좋습니다. 다음 글을 보면 선생님의 스타일을 짐작하실 수 있죠.\n고등학생을 위한 논술 책이라기보다는 실용적인 글쓰기에 대한 책입니다. 논술이라는 것은 자신의 주장을 남에게 설득시키는 글이지, 감정을 표현하는 글은 아니죠. 우리는 ‘글쓰기’라면 문학적인 글쓰기를 생각하는데 생활에서 필요한 글은 문학적인 글이 아닙니다.\n다음 링크를 보시면, 선생님의 인터뷰를 보실 수 있습니다. 강추합니다. 저랑 비슷한 책을 좋아하시기 때문에 더욱 더 좋습니다. ^^;\nhttp://ch.yes24.com/Article/View/12910 ","href":"/2008/01/12/128/","title":"철학자 탁석산이 제안하는 글쓰기의 왕도 – 논증을 배워라!"},{"content":"이 제목은 2007년 12월 29-30일 토-일요일 자 조선일보 D1 면에 있는 \u0026lsquo;왜 나는 너를 사랑하는가\u0026rsquo; 작가 알랭 드 보통과의 인터뷰 기사의 제목입니다. 저도 글 좀 써보겠다고 끄적대고 있지만, 제가 쓴 글이 과연 사람들이 내 의도대로 이해하게끔 썼을까 하는 고민은 별로 안 했던 것 같습니다. 최근에서야 이런 고민이 중요하다는 것을 알았지만, 생각만 하고 있었지 행동으로 옮기기 못했던 것 같습니다. 이 내용에 대한 내요을 한번 살펴봅시다.\n역사학자인 조너선 스펜스 에일대 교수는 영국의 19세기 작가들이 교양 대중을 위한 글쓰기의 전통을 쌓아 올렸다고 한다. \u0026ldquo;개인적으로 18세기 프랑스 작가들에게서 영향을 많이 받았다. 볼테르, 파스칼, 몽테뉴 -, 그들은 명확하고, 단순하면서도 우아하게 썼다. 복잡하게 쓰지 않았다. 이들언 문화가 엘리트가 아니라 모든 사람들을 위한 것이라 믿었다. 오늘날 프랑스와 영국엔 이런 경향이 여전히 남아있다. 당신이 복잡하고 셰련된 지식인인데, 아무도 당신을 이해할 수 없다면 얼마나 슬픈 일인가. 당산이 정말 어떤 문제를 잘 이해하고 있다면, 명확하고 간결하게 표현할 수 있을 것이다. 그렇지 않다면 그 문제를 제대로 이해라고 있지 못하거나.\u0026rdquo;\n이 내용에서도 가장 마음에 드는 문장은 마지막 문장, \u0026ldquo;당산이 정말 어떤 문제를 잘 이해하고 있다면, 명확하고 간결하게 표현할 수 있을 것이다. 그렇지 않다면 그 문제를 제대로 이해라고 있지 못하거나.\u0026ldquo;이 마음을 꽉 찌르는 것 같습니다. 부록으로 다음 내용도 마음에 듭니다. 한국도 이와 같다는 생각이 드니 좀 마음은 무겁습니다.\n당신은 일상 생활을 철학과 예술, 시, 심리학과 연관지어 쉽게 설명하는 작가로 알려져 있다. 오늘날의 인문학은 일상과 유리돼 있다는 비판을 받고 있다. \u0026ldquo;전통적인 인문학 커리귤럼은 구체적인 일상 생활에서 자꾸 벗어나려는 경향이 있다. 특히 영국 대학들은 자꾸 담을 쌓아 올리려고 한다. 대중들은 TV나 타블로이드 신문 같은 형편없는 대중 문화에 둘려싸여 살고 있다. 학자들은 연구를 통해 발견한 진리와 일상 생활을 연경하는 작업을 포기했기 때문이다. 단순하게 명료하게 생각을 전달하는 방법을 찾는 일은 작가들에겐 커다란 도전이다. 누군가 내가 쓴 글을 이해하지 못했다면, 독자의 잘못이라기보다는 내 잘못이다.\u0026rdquo;\n","href":"/2008/01/06/126/","title":"\"누군가 내 글을 이해하지 못했다면 독자의 잘못이 아닌 내 잘못입니다.\""},{"content":"","href":"/tags/gulim/","title":"gulim"},{"content":"인터넷에서 뭔가를 할 때, 가장 고민하는 문제가 바로 서체, 유식하게 말하다면 서체 문제가 아닐까 생각이 듭니다. kukie님 홈피인 Designer kukie에서 귀중한 글을 발견했다. HTML에 관심이 있으시면 곱씹어 읽어볼 충분한 가치가 있는글입니다. 강추합니다.\n-http://kukie.net/resources/font_gulim/#gulim\n","href":"/2008/01/01/127/","title":"굴림 폰트 사용시 크기 비교 및 특징"},{"content":"뭐 아시는 분은 아시겠지만, 제가 웹디자인에 관심이 있습니다. 이번에 http://www.webdesignerwall.com/이라는 곳에서 올해의 Best of CSS Design 2007 을 선정했습니다. 관심 있으신 분은 다음 링크를 클릭하시면 됩니다. 뭐 한국은 아직도 윈도우에서 벗어나고 있지 못한데, 참 많은 것이 빨리 변하고 있습니다.\nhttp://www.webdesignerwall.com/trends/best-of-css-design-2007/ ","href":"/2007/12/18/125/","title":"Best of CSS Design 2007"},{"content":"","href":"/categories/css/","title":"CSS"},{"content":"글을 쓰는데는 아래하 한글을 많이 쓰기 때문에 폰트에 대한 걱정을 하지 못하지만, PT를 하는 경우에는 쓸만한 폰트가 없어서 항상 고민이 많습니다. 물론 편법으로 구할 수도 있지만 조금은 꺼림직한 것도 사실입니다. 요즘 무료 폰트가 많이 나와서 이런 걱정을 많이 덜어 주고 있었는데 이런 무료 폰트를 잘 정리해 둔 사이트가 있어서 소개합니다.\n황씨 신문이라는 사이트인데 여기에서 다음 링크에 나온 글이 이러한 무로푠트를 자세하게 소개하고 있습니다.\nhttp://sulfur.pe.kr/nudalak/free_font.html\n","href":"/2007/10/11/119/","title":"무료 폰트를 써봅시다."},{"content":"요즘 다시 조엘 온 소프트웨어 : 유쾌한 오프라인 블로그이라는 책을 읽고 있습니다. 원래 제가 IT에 관심이 엄청 많기 때문이기도 하지만, 이 책을 또 읽으면서 참 똑똑한 사람이 많다는 생각을 다시금 하게 됩니다. 지금 이야기하고 싶은 것이 이 책 내용이 아니라 이 책을 번역하신 박재호님의 326쪽, 338쪽에 실려 있는 글의 내용입니다. 번역에 대한 글인데, 번역하는 과정에서 생긴 재미있는 에피소드를 이야기하면서 본인이 번역할 때 사용했던 Site들을 소개하고 있습니다. 저도 유용하다는 생각이 들어서 글로 남겨 봅니다.\nhttp://www.knowlex.org/lang/en/index.html: 이 주소는 없어진 듯! http://en.wikipedia.org/wiki/Main_Page http://www.wordiq.com http://www.ocf.berkeley.edu/~wrader/slang가 http://onlineslangdictionary.com으로 멋지게 변했군요. ","href":"/2007/09/20/114/","title":"사전을 찾아봐도 안 나오는 영어 단어 때문에 고민할 때"},{"content":"이미지를 크게 보려고 이미지를 눌러도 커지지 않습니다. 그래서 고민하다가 옛 기억을 살려서 다음 플러그 인을 설치했습니다. 아래 링크를 가 보시면 알 아실 수 있습니다.\nLightbox 2 Wordpress Plugin\n","href":"/2007/07/22/109/","title":"이미지 파일을 크게 띄우는 플러그인 Lightbox 2"},{"content":"Wordprss는 테마가 정말로 많습니다. 저도 기분에 따라 바꾸곤 하는데 이런 글이 있었네요. 영어로 되어 있지만 볼만합니다. 뭐 디자인만 보면 되니..\n83 Beautiful Wordpress Themes You (Probably) Haven’t Seen\n","href":"/2007/07/22/108/","title":"83개의 멋있는 WordPress 테마를 봅시다."},{"content":"여기에 글을 올릴려고 하는데, 긴 글이다 보니 각주를 달아야 될 일이 생겼습니다. 고민하고 있었는데 역시 찾았습니다. 아직 설치는 하지 않았지만, 설치할 계획입니다. 자세한 것은 아랫 글을 참고해주세요!\nWP-Footnotes (a plugin for WordPress)\n","href":"/2007/07/22/107/","title":"블로그에서 각주를 달아봅시다!"},{"content":"Philosopher’s Stone 길드 Description: 외대철학과 와우게시판에 2005년 5월 7일에 처음으로 글을 썼네요. 이것보다 더 전에 와우를 시작했는데, 게시판을 만들고 시작한 것은 이 날이 처음이었네요. 지금도 하고 있으니 참 오래동안 와우를 하고 있습니다. 그때는 정말로 재미 있었는데 이때 같이 하던 사람들은 요즘은 와우 안하시는 분들은 뭐하고 지내시나.. 성겸이가 갑자기 보고 싶네요. 오늘 서버를 고치면서 게시판을 지우고 기념으로 게시판을 갈무리 해 둡니다. 그림을 누르시면 큰 사진으로 보실 수 있습니다.참고로 아래 Read more…을 클릭하시거나 글 제목을 나머지 게시판 갈무리 화면 링크가 나옵니다. 그 링크를 누르시면 다른 갈무리 화면도 보실수 입니다.\n외대철학과 와우게시판 #1 외대철학과 와우게시판 2 외대철학과 와우게시판 3 외대철학과 와우게시판 4 외대철학과 와우게시판 5 외대철학과 와우게시판 6 ","href":"/2007/07/22/106/","title":"Philosopher's Stone 길드를 정리하며.."},{"content":"조선일보 2006년 11월 6일 월요일, D1, \u0026lsquo;맛있는 공부\u0026rsquo; 편에 나왔던 이야기를 소개해보겠습니다. 우선 제목이 \u0026ldquo;초등 꼴지, 4년 만에 15등이 된 비결은? \u0026ldquo;6가지 습관 고쳐 상위권으로\u0026quot;\u0026ldquo;이라고 상당히 길었습니다. 저를 포함한 많은 사람들이 \u0026lsquo;비법\u0026rsquo;이니 \u0026lsquo;특효약\u0026rsquo;이니 같은 것에 관심이 많습니다. 저도 여기에 특별한 비법이 있다하고 자세히 읽어봤습니다. 내용은 초등학고 선생님이 아마도 꼴지라는 말에 충격을 받은 여학생이 공부를 해야겠다는 중학교에 들어가면서 성적이 올라가서 결국은 고등학교에서 성적이 순위권에 들어가게 되었다는 단순한 이야기입니다.\n이런 이야기는 여러곳에서 접해볼 수 있는 평범한 이야기지만, 제가 글을 쓸만큼 관심가는 내용이 있었습니다. 다음과 같은 그 학생이 바꾼 6가지 습관이었습니다.\n공부 얘기만 하기 선생님 말씀 무조건 받아적기 아침형 인간 되기 나만의 공부 계획짜기 외모 신경쓰지 않기 컴퓨터 게임 끊기 이런 습관들은 평범하게 보일지도 모르지만, 이런 평범함 속에 결정타가 들어 있습니다. 저도 효과를 봤던 것이 들어 있었는데, 2번, 선생님 말씀 무조건 받아적기 입니다. 기사를 보시면 아시겠지만, 공부를 못하는 사람들은 어떤 것이 중요한 이야기인지 모릅니다. 그러니 수업이 재미없죠! 그리고 어떤 것은 적어야 할지도 당연히 모릅니다. 그래서 무조건 적는 것이 효과적입니다. 저같은 경우도 대학교에서 어떤 한 수업을 좋아서 몇 번이나 청강한 적이 있었는데, 같은 수업을 몇 번 들어면서 무조건 수업 내용 모두를 적어보니, 수업시간도 재미있고, 내용도 잘 알게 되고, 수업시간에 집중도도 높아집니다. 이 습관은 참 좋은 습관입니다. 한번 해보세요!\n3번째 아침형 인간도 할만합니다. 아침에 조금 읽찍 일어나려면 우선 일찍 자야 되고 일찍 자면 수면량이 늘어나 학교에 가도 졸립지 않게 됩니다. 그리고 5번, 6번도 다들 아시는 것처럼 효과적입니다. 외모꾸미는 시간이 생각보다 많이 드는 것은 다들 잘 알고 있을 것 같고, 컴퓨터 게임도 중독성이 있어서 시간을 많이 뺏기게 됩니다. 저도 제가 겪어봐서 압니다. \u0026ldquo;2시간만 게임하지\u0026quot;라고 말하고 정말로 2시간만 하는 사람은 정말로 자제력이 좋은 사람이고 이런 사람은 공부도 잘합니다. 그러니 자신이 공부를 잘 못한다고 생각하면 , 아에 안하시는 편이 공부를 하는데 좋습니다.\n이처럼 공부를 잘하는 것은 어떤 특별한 방도가 있지 않습니다. 사람들이 평범하고 모두 알만한 것들을 지키는 것이 공부 잘하는 방법이라고 할 수 있겠죠. 그런데 그런 것들이 왜 그렇게 하기 힘들까요? 참 어렵네요 ^^;\n","href":"/2007/01/11/89/","title":"습관을 고쳐 초딩때 꼴찌가 전교 순위권이 된 이야기"},{"content":"이 글의 출처가 어딘지는 모르겠네요! 아마도 컴퓨터에 자료를 저장하기 시작한지 15년은 충분히 넘었을 것 같습니다. 그러니 좋은 글들은 모아두었던 것 같습니다. 이 자료도 프로그래머가 되어 보겠다고 이곳 저곳 기웃거릴 때 모아두었을 겁니다. 지우기에는 아까워 여기에 보관하려고 합니다.\nC 프로그래머처럼 생각하기\n여러분은 이 책의 내용을 공부하고 나서 능숙한 C 프로그래머가 되기를 바랄 것이다. 그러나 이것이 쉬운 일만은 아니다. 프로그래밍 언어도 영어나 일본어 같은 일반적인 언어와 마찬가지로 아무리 문법을 많이 알고 있다고 해도 적절한 경우에 적절한 문법을 사용하지 못한다면 아무 소용이 없다. 해결해야 하는 문제에 대해서 적절한 C의 문법을 사용하면서 프로그램을 작성하기 위해서는 문법을 아는 것도 중요하지만, C 프로그래머처럼 생각하는 방법을 기르는 것 또한 매우 중요하다.\nC 프로그램을 작성하여 어떤 문제를 해결할 때에는 일련의 단계를 거쳐야하는데, 여기에서는 프로그램을 작성하여 문제를 해결하는 방법에 대해서 잠시 이야기를 해볼까 한다. 항상 어떤 일이든지 치밀한 구성과 주도 면밀한 계획이 있어야만 성공할 수 있는 법! C 언어의 문제 해결을 위한 프로그래머로서의 지침을 지금부터 알아보기로 하자.\n해결해야 할 문제 분석하기: C 언어로 프로그램을 작성하기 전에 가장 먼저 해야 할 일은 어떤 문제를 해결해야할 지를 알아내는 것이다. 왜 그런고 하니, 해결해야 하는 문제가 무엇인지 확실히 알아야 어떻게 해결할 것인지를 결정할 수가 있기 때문이다. 작성하려고 하는 프로그램이 어떤 기능을 갖고 있는 프로그램인지, 누가 사용할 프로그램인지를 먼저 분석하고 깨닫는 것이 무엇보다 중요하다. 프로그램의 목적 결정하기: 해결해야 할 문제가 무엇인지를 알았다면 어떠한 프로그램을 작성해야 할지 결정해야만 한다. 그러니까, 자신이 작성할 프로그램이 어떤 작업을 수행하는 프로그램이지 설계해 보는 것이다. 사용자에게 어떤 입력을 받고 파일 또는 데이터베이스에서 어떤 데이터를 읽어 작업하고 어떠한 결과를 출력할 것인지를 결정한 후, 자신이 만들 프로그램의 목적과 상세한 기능에 대해서 설계하는 것이 필요하다. 프로그램의 구조 설계하기: 작성할 프로그램의 목적과 외형적인 설계가 끝났다면 실제 프로그램의 구조를 설계해야 한다. 데이터가 어떻게 흘러가는지 어떠한 작업들을 어떤 순서로 실행할 것인지를 설계하여야 한다. 이런 경우, 프로그램의 어떤 문제를 해결하기 위한 작업들을 시간 순서대로 설계할 수도 있을 것이고 작업의 계층적인 형태로 설계할 수도 있을 것이다. 또, 프로그램에서 사용하는 데이터는 어떤 구조를 갖는지를 반드시 설계하자. 만일 여러 사람이 공동으로 작업하는 커다란 프로젝트일 경우에 프로그램의 구조를 설계하지 않고 작업에 들어간다면 그 프로젝트는 실패하기 십상이다. 프로젝트의 크기가 클수록 프로그램의 구조를 설계하는 것이 더욱 중요해진다. 이것은 객체 지향 이론으로 넘어가는 이야기이긴 하지만, 프로그래머라면 반드시 숙지해야할 내용이므로 명심하자! 혼자 살아가는 사람은 없듯이, 항상 다른 사람들과의 교류, 다른 운영 체제와의 호환을 생각하면서 프로그램을 작성해야한다. 함수 설계하기: C는 독립된 작업들을 함수로 사용하여 작성하는데 앞에서 설계한 프로그램의 구조를 바탕으로 하여 독립된 작업들을 함수로 분리하는 작업을 거쳐야한다. 어떤 함수가 어떤 작업을 수행할 지를 설계하는 것이다. 이렇게 함수가 설계되면 프로그램에서 공통적으로 사용되는 부분을 찾을 수 있게 되는데 이러한 부분을 함수로 작성한다면 좀 더 효율적으로 코드를 작성할 수 있게 된다. 또한 함수 설계를 잘하면 한 프로그램에서 작성한 함수를 다른 프로그램에서 다시 사용할 수도 있게 된다. 이렇게 함수를 설계하고 나면 프로그램의 작업들은 계층적인 형태를 갖게 되고, 실제로 프로그램을 작성할 때에는 각각의 함수에서 해겨해야 하는 작업에만 신경쓰게 되므로, 빠르고 쉽게 작업할 수 있다. 프로그램 작성하기: 설계한 함수를 바탕으로 실제로 프로그램을 작성하는 부분이다. 함수를 사용하여 전체 프로그램의 작업을 구분하고 나면, 하나의 함수를 작성할 때에는 그 함수의 기능만을 신경쓰게 되므로 실제 프로그램 작성은 어려운 문제가 아니게 된다. 이제 C의 문법을 사용해서 그동안 설계한 추상적인 내용들을 실제 코드로 표현하기만 하면 되는 것이다. 테스트 및 디버그하기: 프로그램을 작성하고 나면 이 프로그램을 실행해 보고 잘못된 부분이 있으면 그 부분을 수정하는 작업을 가해야 한다. 항상 마무리가 좋아야 하는 법! 작성한 프로그램이 한번에 원하는 결과를 내는 일은 극히 드문 경우이므로, 잘못된 연산이나 원치 않은 오류가 발생할 수 있는데 이러한 부분을 프로그램의 버그(BUG)라고 하고 이러한 버그를 수정하는 작업을 디버그(DEBUG)라고 한다. 얼마나 버그를 최소화하는지, 얼마나 디버그를 잘 하는지 하는 것도 프로그래머로서의 자질 여부를 판가름 하는 중요한 요소이다. ","href":"/2007/01/02/88/","title":"C 프로그래머처럼 생각하기"},{"content":"","href":"/tags/metaphysics/","title":"Metaphysics"},{"content":" 책제목: The Blackwell Guide to Metaphysics 펴낸곳: Blackwell Publishers 출판연도: 2002 Contents Preface. Physics, Metaphysics, and Method in Newton’s Dynamics: Lawrence Sklar. Causation: Wesley Salmon. What Events Are: Jonathan Bennett. Time, Temporality and Paradox, Richard M. Gale. A Thomist Metaphysics: John Haldane. The Concept of Ontological Catergory: a New Approach: Lorenz Puntel. Universals and Predication: Bruce Aune. Composition as a Fiction: Gideon Rosen and Cian Dorr. What Do We Refer To When We Say ‘I’? Peter van Inwagen. Personal Identity: The Non-Branching Form of ‘What Matters’: Jennifer E. Whiting. Idealism: T.L.S. Sprigge. An Idealistic Realism: Presuppositional Realism and Justifcatory Idealism: Nichlas Rescher. Overcoming a Dualism of Concepts and Causes: The Basic Argument of -‘Empiricism and the Philosophy of Mind’: Robert Brandom. Metaphysical Realism and Logical Nonrealism: Panayot Butchvarov. The Metaphysics of Possibilia: William Lycan. The Actual and the Possible: Alexander Pruss. ps: 본 책은 논문집 형식으로 되어있습니다. 자료로 올립니다.\n","href":"/2006/12/26/86/","title":"The Blackwell Guide to Metaphysics"},{"content":"","href":"/tags/css/","title":"CSS"},{"content":"제 실력은 미천함에도 불구하고, 문과에서 컴퓨터를 잘 다루는 사람이 없는 관계로 관리하고 있는 홈페이지가 좀 있습니다. 뭐 그래도 Html과 같은 것은 어느 정도 알지만, 미적 표현력이 떨어진 나머지, 디자인적인 측면에서는 거의 50점도 못 되는 수준입니다. 그래서 웹디자인 실력을 늘리고자 자료를 조사했습니다. 이 아래 링크들은 아마도 책같은 곳에서 찾은 것 같은데, 정리한 파일에는 책이름이 적혀 있지 않네요. 출처불명이 되는군요. 그래서 좋은 곳들을 모아둔 것이니 참고하세요!\nhttp://www.w3.org 여기는 웹은 물론이고 웹 표준을 매일 개발하는 기관\nhttp://www.webstandards.org 1998년에 설립된 조직으로 웹 표준을 대중에게 널리 알리고 웹 디자이너와 개발자들이 표준에 따라 개발할 수 있는 교육자료를 제공한다.\nhttp://www.alistapart.com 웹 표준으로 디자인하기 위한 테크닉과 장점에 초점을 맞춰 웹 컨텐트를 만들기 위한 디자인, 개발에 관련된 내용을 소개하는 웹진\nhttp://www.csszengarden.com 동일한 마크업 구조를 사용하는 자기만의 CSS 디자인을 만들어 제출하여, 보여주는 사이트, 지속적인 업그래이드 되고 있습니다.\nhttp://www.digital-web.com 동일한 마크업 구조를 사용하는 자기만의 CSS 디자인을 만들어 제출하여, 보여주는 사이트, 지속적인 업그레이드 되고 있습니다. 웹 디자이너를 위한 컬럼, 뉴스, 튜토리얼을 제공하는 온라인 잡지입니다.\nhttp://www.diveintoaccessibility.org 웹 접근성에 대해 논의하는 홈피\nhttp://web-graphics.com 하이퍼텍스트 디자인 자료, 링크, 설명 들을 모아놓은 곳입니다. 표준에 관련된 디자인과 개발 분야의 새로운 소식을 알려줍니다.\nhttp://www.zeldman.com 1995년부터 웹 디자인과 관련된 소식과 정보를 올리고 있는 \u0026lsquo;웹 표준의 대부\u0026rsquo;라고 불리우는 제프리 젤드만의 홈피. (참고: 개인적으로 강추하는 홈피입니다. 정말로 인쇄매체처럼 잘 만들어져 있는 곳입니다. 고수의 숨결을 느낄 수 있습니다.\nhttp://www.mezzoblue.com css 젠 가든를 만든 Dave Shea의 홈피입니다.\nhttp://www.meyerweb.com CSS의 전문가라고 알려진 에릭 마이어의 홈피입니다. 그는 넷스케이프 사와 웹표준에 관련된 컨설팅과 작업을 했습니다.\nhttp://www.whatdoiknow.org 훌륭한 표준 웹 사이트 작업에 많이 참여한 토드 도미니의 개인 웹 사이트입니다.\nhttp://www.saila.com 온라인 저널리즘부터 웹 구축까지 캐나다 뉴미디어에 관한 소식을 전하는 싸이트. 웹 표준과 관련된 고품격 정보들을 전해줍니다.\nhttp://www.cssdrive.com CSS Drive- Categorized CSS gallery and examples.\n","href":"/2006/12/26/85/","title":"Web 디자인에 유용한 곳 링크 모음"},{"content":"","href":"/tags/xhtml/","title":"XHTML"},{"content":"제 7부 일상언어의 기호화, 필로지아, 오란디프, 도서관 번호:160 J581n2.\n제 4부 연역 논증1:명제 논리, (비판적 사고를 위한) 논리, 도서관 번호:160 B149n.\n제 10장 기호논리, 제 11장 연역의 방법, 논리학입문, 도서관 번호: 160 C783iKb10.\n","href":"/2006/11/29/80/","title":"기호 논리 참고 자료"},{"content":"출처는 아마도 옛날에 정은임 님이 라디오 하실 때, 정성일 선생님과 나눈 대화를 채록한 것 같습니다. 출처모르겠지만, 좋은 글이라고 생각이 들어 올려봅니다. 저도 인쇄본으로만 가지고 있다가 인터넷을 뒤져보니 옛날에는 이곳 저곳에 있었는데, 요즘은 보기 힘들어 보존차원에서 올려봅니다. 조금 이상한 부분이 있지만 그대로 올려봅니다. 참고로 읽기 편하게 편집을 조금했습니다. 그리고 이름 앞에 성을 붙여서 올렸습니다.\n정은임: 자 이번에는 영화 평론가 정성일의 영화 읽기 시간입니다. 안녕하세요!\n정성일: 안녕하세요.\n정은임: 노래 어떠세요 멋있죠!\n정성일: 네.\n정은임: 낭만적이죠!\n정성일: 네.\n정은임: 근데 오늘 얘기는?\n정성일: 오늘 얘기는 그 낭만적인 것과 정 반대되는 아주 금속성나는 얘기를 해 드리겠읍니다. 요즘 유행처럼 번지고 있는 말이 하나 있읍니다. 그래서 이 말 잘 모르면 영화광 자격 상실이라느니 등 등 하는 말도 심심치 않게 들리고 있읍니다. 만일 그 이말에 대해서 호응하지 않으면 영화광 상실이라면 저는 기꺼이 영화광 자격을 상실 당하겠읍니다. 그 말은 다름 아닌 사이버펑크라는 말입니다.\n정은임: 사이버펑크요.예! 요즘은 컴퓨터광도 많고요. 저의 하이텔을 통하여 많은 분들의 사연도 받는데 정말 유행인 것 같애요. 도데체 뭡니까?\n정성일: 얘 사이버펑크라는 이 말 도데체 무엇일까라는 이 말 도데체 이것은 영화에 새로운 조류인가? 아니면 새로운 사기인가!\n정은임: 예.\n정성일: 분명한 것은 이 말은 영화에서 온 말은 아니라는 말입니다. 최근에는 이 말을 좀 마구자비로 쓰는 경향이 있어서 예전에는 자기가 좀 이해 할 수 없는 용어는 몽땅 컬트 아니면 포스트 모더니즘 영화라고 부르던 것처럼 요즘 들어서 조금 식상한 나머지 표현을 좀 바꿔서인지 모르겠지만 SF를 닥치는데로 표현하는 말로 사용하고 있읍니다. 그래서 이것이 혹시 SF 컬트영화를 좀 세련되게 표현한 것이 사이버펑크가 아닐까 라는 말까지 나오고 있읍니다.\n정은임: 일종에 문화계념으로도 확대가 되지요.사이버펑크가\n정성일: 네.이 사이버펑크의 사이버라는 말은 사이버네틱스 그러니까 인공지능 공학이라는 데서 나온 말인데요. 샘과 위버라는 그 두 과학자가 원래는 전기 공학자 였는데요.. 그후 이러한 발전 경향을 이름짓기를 사이버라는 접두어를 붙여서 모두 사용하게 되었읍니다. 그래서 인공지능을 가진 인간을 사이보그라고 부르는 것도 바로 이 사이버에서 나온 말입니다. 그렇다면 펑크라는 말은 또한 무슨 말일까라고 반문하실 겁니다. 1970년대 후반 베트남전이 끝나면서 서구 청년 문화는 모두 막다른 골목에 이르게 되었읍니다. 제3세계 작은 나라를 상대로 벌였었던 이 제국주의 전쟁에 전면적인 패배를 도데체 어떻게 수용해야 하는 것인가라는 것이었읍니다. 그리고 청년문화는 자신들의 상징으로 대표되던 그 라큰롤 문화에서 반란을 시작하게 됩니다. 그 당시 그러니까 펑크 음악이 나오기 직전의 이 라큰롤의 분위기라는 것은 아주 고도로 세련된 라큰롤밴드 어마어마한 천재적인 재능이 아니라면 할 수 없는 놀랄만한 연주를 20분 30분씩 에드립으로 연주하는 그 락벤드들이 아니면 견뎌낼수 없는 상황이었읍니다. 그 분위기를 대표하는 것은 물론 \u0026lsquo;레드제플린\u0026rsquo;이었읍니다. 또 상업화된 \u0026lsquo;비틀즈\u0026rsquo;가 비틀즈에 열광했던 세대들을 모두 좌절시켰읍니다. 바로 \u0026lsquo;폴 메카트니\u0026rsquo;의 그 상업주의가 그러한 반감을 더욱 고조 시킵니다. 이미 \u0026lsquo;존 레런\u0026rsquo;은 그 당시 음악을 만들기를 포기한지가 이미 몇년의 지나가고 있었읍니다. 또 락큰롤이 자신의 이빨을 모두 다 뽑힌 상태로 발라드 싱어송 라이터들이 차트를 모두 장악하게 됩니다 \u0026lsquo;캐롤킹\u0026rsquo;이 발표한 그 앨범은 \u0026lsquo;핑크 플로이드\u0026rsquo;가 을 발표하기 직전까지 최장기 차트진입에 성공하여 100주 진입을 돌파합니다.또 \u0026lsquo;제임스 테일러\u0026rsquo;나 \u0026lsquo;폴 사이먼\u0026rsquo;같은 가수들의 음반이 불티나게 팔려 나갔읍니다. 그리고 클래식인지 락큰롤인지 애매 모호한 프로그래시브음악들이 차트를 누비기 시작 했읍니다 그래서 \u0026lsquo;핑크프로이드\u0026rsquo;나 아니면 \u0026lsquo;에머슨 레이크 앤 팔머\u0026rsquo;나 \u0026lsquo;예스\u0026rsquo;나 \u0026lsquo;킹 그림슨\u0026rsquo;같은 그룹들이 노래들이 FM레디오를 타고 방송되기 시작했읍니다. 물론 이 연주들이 대단하기는 하지만 여러분들 락큰롤의 정신은 체제 저항의 정신입니다. 저항의 정신을 잃은 라큰롤은 이미 라큰롤이 아닙니다. 60년대 라큰롤을 생각해 보십시오. \u0026lsquo;짐 모리슨\u0026rsquo;이 그 나이에 그토록 절규하며 죽어갔는지 생각해 보십시요. 왜 \u0026lsquo;지미 핸드릭스\u0026rsquo;가 전기 기타를 물어 뜯으며 미국 성조가를 연주하다가 죽어 갔는지 생각해 보십시오. 저처럼 못생긴 여자와 한번 연애해 보실생각 없으세요. 라고 \u0026lsquo;제니스 조플린\u0026rsquo;이 그렇게 부르스를 부르다 죽어간 것을 한번 생각 해 보십시오.그 죽음엔 의미가 있었던 것입니다.이러한 라큰롤에 저항하여 해성같이 등장했었던 벤드가 바로 다름아닌 그 유명한 를 곡을 발표 했었던 그룹 섹스 피스톨즈였었읍니다. 이 그룹은 베이스 주자였었던 시드 비셔스를 중심으로 한 3인조 였었었는데 아마 여러분중에서 영화 좋아 하시는 분들이라면 당연히 \u0026ldquo;시드와 낸시\u0026quot;를 보셨였을 텐데요. 시드가 바로 이 베이시스트였던 시드 비셔스 였었읍니다. 이들은 등장하자마자 이이라는 곡을 발표하여 신이시여 우리여왕을 보우하셔서 우리 여왕한테 그거 한번좀 해주세요라는 노래를 발표하여 방송 금지 처분을 당했고 EMI와 계약 했다가 파기처분 당하고 영국에서는 방송 금지 그룹으로 찍히게 됩니다. 이 섹스 피스톨즈는 딱 한가지만 내세울 뿐입니다. 중요한 것은 저항 이다. 혁망하라라고 선언한 것입니다.\n정은임: 그러니까 70년대의 펑크문화를 상징하는 것이군요.\n정성일: 물론 그 이 저항이 이념적으로 무정부주의 지향이기도 하지만 그리고 그후 \u0026lsquo;섹스피스톨즈\u0026rsquo;의 영항을 받아 등장했었던 그 무수한 펑크 그룹들 그러니까 \u0026lsquo;크래쉬\u0026rsquo;라든가 아니면 초기 \u0026lsquo;폴리스\u0026rsquo; 라든가 그 \u0026lsquo;엘비스 코스텔\u0026rsquo;로 라든가 아니면 \u0026lsquo;레몬스\u0026rsquo; 라든가 \u0026lsquo;그레엄 파크\u0026rsquo;같은 모든 가수들이 그런 무정부주의 적인 성향을 따르면서 엄청난 영향을 끼치고 그리고 그것이 청년문화의 대세처럼 불리기도 했었읍니다. 만일 80년대의 라큰롤에 펑크문화가 없었다면 지금은 연주 자랑들이나 하고 있는 썩은 예술 지상주의가 라큰롤에 자리 잡고 있었을 지도 모릅니다.\n정은임: 그러면 사이버와 펑크가 결합했다는 대서 상당히 모순이 아닐까 이렇게 생각하는 분들도 많을 것 같아요.\n정성일: 그래서 억지로 정의를 내리자라면 사이버 펑크란 컴퓨터 인공지능세대의 무정부주의자들 이라고 정의내릴수 있을 것 같읍니다.\n정은임: 복잡하내요.\n정성일: 이 사이버 펑크라는 말을 쓰고 있는 타임지 같은 경우에 사이버펑크를 표현할때 쓰는 말은 핵커들입니다.\n정은임: 예 그렇죠 컴퓨터 무단 칩입자.\n정성일: 그래서 컴퓨터 속에 들어가서 남의 프로그램을 엉망으로 만들어 놓고 세상을 질서화 시키는 프로그램을 부셔라 중요한 것은 저항이다. 컴퓨터에 혁명하라라고 외치는 것입니다. 그러니까 우리나라하고는 정반대인 셈이죠. 우리나라에서 사이버 펑크를 얘기하는 것 좀\n정은임: 지적인 의미인것이죠.\n정성일: 지적인 향락 지적인 유희에 더 가까우니 사실 펑크의 정신은 다 죽어 버린 펑크인 셈입니다. 이래도 펑크로 불러야 될지는 저도 잘 모르겠읍니다. 하여튼 사이버 펑크는 원래 처음 사용했었던 것은 비트 제너레이션 정신을 이어 받었었던 SF소설가들로 부터 온 것입니다. 비트 제너레이션 소설의 대가였었던 윌리엄 벌로우즈의 기법이라는 것은 그 데이비드 크로넨버그가 찍었었던 의 원작이 바로 이 윌리엄 벌로우즈의 소설이었는데요. 윌리엄 벌로우즈가 그의 소설을 쓰기 위해서 그는 마약에 쩌른 상태에서 마약 없이는 단 한줄도 쓰지 않았다고 합니다. 그래서 미국 히피들한테 이 소설을 읽을때는 꼭 마약을 피면서 읽을 것 이 이책의 제1장 제 1절인데요. 이러한 기법을 받아 들여서 캐나다를 중심으로 이루어진 작가 동맹 사이버 2001이 결성되었읍니다. 이 캐나다라는 나라는 전세계에서 포스트모더니즘의 연구가 가장 깊이 있게 연구되온 나라인데요. 그래서 이 케나다 토론토 대학을 열광적인 포스트 모더니즘 광들이 많고요 학자들도 많은데요. 이러한 것과 캐나다의 문학 소설가 들이 바로 서로 결합하게 된 겁니다. 그리고 이 사이버 2001을 통해서 발표되는 소설의 경향을 가르켜서 미국의 지도적인 미국의 창작과 비평이라고 불려도 괜찮을 \u0026ldquo;크리티컬 인 콰이어리\u0026quot;가 \u0026ldquo;사이버 펑크 커런트\u0026rdquo; 그러니까 사이버펑크경향이라는 타이틀 하에 특집호를 마련하게 됩니다. 그리고 이 말을 쓰자마자 이 말은 금방 유행하게 되었읍니다. 우선 이 표현에 가장 관심을 귀울였었던 것은 컴퓨터통신망 세대들입니다. 사실 우리나라에도 이것에 가입하신 분들이 꽤많은 걸로 알고 있는데 아마도 이들은 일류 역사상 최초로 pc통신 세대 pc대화세대 더 나아가서 pc연애 세대\n정은임: 그렇죠 요즘은\n정성일:라고 부를수 있을 텐데요. 바로 이들이 컴퓨터 통신망 세대들이 사이버 펑크를 자신들을 들을 가르키는 표현이라고 생각하게 된 겁니다. 문제는 사이버 펑크들에게는 자신을 남들과 차별화 시킬수 있는 즉 구세대와 기존세대와 기성 세대와 차별화 시킬수 있는 테크널리지는 있지만 자신들이 생산해낸 문화가 없다는 심각한 고민에 빠지게 되었읍니다. 지금까지 청년문화에 최정예 부대는 라큰롤이었었읍니다. 하지만 사이버 펑크세대들은 라큰롤에서 자신들을 찾는데 그만 실패하였읍니다. 최근의 라큰롤의 스타일이라는 것은 얼터너 티브 밴드들입니다. 그리고 얼터너 티브밴드의 공통적인 주제는 그린 피스 운동입니다. 즉 환경보호 운동입니다. \u0026lsquo;REM\u0026rsquo;도 \u0026lsquo;유투\u0026rsquo;도 \u0026lsquo;미드나잇 오일\u0026rsquo;도 \u0026lsquo;서닉유스\u0026rsquo;도 그리고 최근에 등장한 젊은 슈퍼스타들 \u0026lsquo;펄잼\u0026rsquo;이나 \u0026lsquo;너바나\u0026rsquo;도 모두 이 그린피스 운동가 들입니다. 이것은 반 사이버 펑크경향이라고 불러도 옳을 것입니다. 사이버 펑크 소설들은 그후 상업적으로 성공하게 되면서 SF소설들과 뒤석이게 되었고 그래서 사이버 2001은 1988년에 해산하게 되었고 그리고 자신들의 독특한 경향 자체가 사라지기 시작 했읍니다. 컴퓨터는 이제 90년대에 들어서서 일상 생활화된 공간이지 몇몇 특정 부류가 어떤 특정 세대가 자신들은 특권화 시키킬수 있는 공간은 아니기 때문 입니다. 다만 이 컴퓨터 공간 속에 들어가면 모든 것이 기호화 된다는 공통적인 특징이 있읍니다. 그래서 정은임씨가 컴퓨터 통신속에 들어가서 통신을 할때 정은임씨는 구태어 정은임이라는 네임을 쓰실 이유도 없읍니다. 그저 그이름을 마치 \u0026lsquo;레오스 캬락스\u0026rsquo;가 자신의 원래 이름이었었던 \u0026lsquo;알렉스 뒤퐁\u0026rsquo;을 뒤섞어 만든 이름처럼 자음 모음의 철자를 뒤섞어서 다른 이름을 만들고 코드 비밀코드 번호를 가지고 갖고 들어 가면은 자신의 아이텐티티를 증명할 다른 방법이 없읍니다. 자신이 고백하기 전까지는\n정은임: 정체성의 문제가 생기겠네요.\n정성일: 그래서 나이도 성별도 인종도 모두 사라지는 공간이 되는 것입니다. 이것이 바로 포스트 모더니즘을 지향하는 작가들에게 매혹적인 요소가 되었읍니다. 그런데 아주 아이러니한 일이 일어납니다. 사이버 펑크를 추종하는 이들은 끊임없이 자신들이 추구하는 노선속에서 그 어떤 연대 세력을 찾아내려고 했었는데 찾아내기는 찾아 냈읍니다. 그런데 유감스럽게도 그것은 헐리우드영화속에 그 상업영화속에 있었던 것입니다. 헐리우드 영화 속에서 사이버 펑크들은 자신들이 지향하는 비젼이 이미 이루어 졌음을 목격하게 됩니다.\n정은임: 예를 들자면요.\n정성일: 바로 니들리 스코스의 \u0026ldquo;불레이드 러너\u0026quot;라든가 제임스 카메론의 \u0026ldquo;터미네이터\u0026rdquo; 또 \u0026ldquo;에일리언\u0026rdquo; 그리고 폴바호멘의 \u0026ldquo;토탈리콜\u0026rdquo; 데이비드 크로낸버그의 \u0026ldquo;비디오 드럼\u0026quot;같은 영화들이 바로 그것입니다.\n정은임: 여기서 무엇을 발견 했나요.\n정성일: 바로 정은임씨의 그 냉혹한 질문 그대로 이제 이것을 거꾸로 생각해 보기를 제안 합니다.아주 정확하게 지적하신 겁니다. 즉 사이버 펑크를 따라서 이것들의 읽어나가는 방법이 이제까지의 읽기 방법이였다라면 우리는 꺼꾸로 이러한 영화들이 왜 사이버펑크 한 경향을 갖게 되었는가를 생각해보는 것은 아주 중요한 것입니다. 그힘은 다름아닌 SF테크널리지에서 오는 것입니다. 이것은 다소 프랑스 후기구조주의 표현을 그대로 빌리자면은 SF테크널리지 욕망이 이끄는 데로 사이버 펑크를 구조화시킨 겁니다. 헐리우드 영화들은 80년데에 들어서서 스필버그 루카스 시스템에 의하여 자신의 영화를 이미지 액션에 집중 시키면서 점점 더 화면에 하이퍼 리얼리즘을 추구하게 되었읍니다. 여기에는 \u0026lsquo;시간없는 공간\u0026rsquo;을 만드려는 끊임없는 노력이 경주되어 이루어진 결론입니다. 그렇더라면 시간없는 공간이 왜 필요하게 되었는가, 시간없는 공간이란 도데체 무엇인가 그것은 역사 없는 공간 탈역사화된 공간 입니다. 그러면 탈역사화된 공간을 획들하면서 무엇을 떨칠수 있는가 그것은 다름아닌 70년대 이후에 헐리우드에 나타났었던 비판적인 영화들 그러니까 정치적 비판이라든가 소수 마이러니티 문제라든가 또는 좌파적 경향에 영화들을 모두 매장시켜 버릴 세로운 장르를 찾아 나서게 됩니다.\n정은임: 뉴시네마를 부정을 하면서\n정성일: 그렇죠 그래서 세로 나타난 영화는 바로 키덜트적 경향의 영화들입니다. 아이와 어른 키드와 어덜트를 합친 키덜트화의 경향이 심각하게 나타납니다. 이 과정속에서 장르의 컨벤션이 헤체되고 스토리는 단순한 스테이지의 계념으로 바뀌어 가기 시작했고 오직 주인공과 테크널리지 사이에 화면위에서의 잡종교배로 치달리기 시작하였읍니다. 그 결과 헐리우드 영화는 이상한 지점에 이르게 되었읍니다. 여러분들이 눈치 채셨겠지만 영화와 비디오 게임이 엉뚱하게 만나게 된것입니다. 그래서 80년대의 헐리우드 영화는 그것이 영화인지 비디오 게임인지 알 수 없는 혼란 속으로 빠져들기 시작했읍니다. 이제 사이버 펑크의 정신이 분명히 보입니다. 사이버 펑크의 정신이라는 것은 비디오 게임을 거꾸로 현실로 적용시키려는 뒤집힌 노력이라는 사실입니다.\n정은임: 왜 그런 노력을 경주하죠.\n정성일: 이런 노력에 대한 경주에 대한 지적은 이미 나타 났읍니다. 80년대 바로 이것을 딱 한 단어로 표헌 하기를 \u0026lsquo;시미라크라\u0026rsquo;라고 표현 합니다. 이것이 바로 80년대의 사고 80년대의 시대 정신이라고까지 이야기하는 데요. 80년대 초반 서구에서 나타났던 이 용어는 포스트 모더니즘 철학의 슈퍼스타라고 까지 불리우는 장 보드리안에 의해서 제안 되었읍니다. 여러분들 아마 디즈니랜드의 예를 들면 금방 이해하실 수 있을 것입니다. 이 보드리안은 디즈니 랜드를 분석하기 시작했는데 디즈니렌드는 미국의 사막 벌판에 땅을 일구어서 갑자기 놀이터를 만든 공간입니다. 그러니까 디즈니 렌드가 그 사막위에 세워져야될 어떤 필연적인 이유 어떤 역사적인 근거는 전혀 없읍니다. 우리나라의 독립문은 창경원은 비원은 그자리에 있어야될 이유가 있읍니다. 독립문의 위치를 멋대로 옮기는 것은 그야 말로 역사를 부정하는 정책 위반자 들의 정말 무식한 문화 행정입니다. 하지만 디즈니렌드는 그 사막에 있어야할 아무 이유없이 거기에 그 어떤 근거 없이 탈 역사와된 놀이의 공간으로 거기 세워 집니다. 그래서 그 디즈니 렌드는 디즈니랜드의 만화를 따서 그것을 복제하여 혼성 모방하여 현실 속에 가상공간을 만들어 냈읍니다. 여기까지는 문제가 없어 보입니다. 그런데 디즈니 렌드를 이 속에 만들어서 완성되어 사람들이 이것을 소비하기 시작하자 미국 건축에 있어서 엉뚱한 경향이 나타나기 시작합니다. 디즈니 렌드의 바깥이 디즈니렌드를 모방하기 시작하는 것입니다. 그래서 이제 디즈니 렌드안의 가상 공간이 원본이 되어서 디즈니 렌드 바깥이 이것을 복제해 내기 시작합니다. 이것을 이름지어 장 보드리아르는 원본 없는 복제 즉 \u0026lsquo;시밀라 크라\u0026rsquo;라고 부릅니다. 그레서 \u0026lsquo;벤 야민\u0026rsquo;이 기계복제시대의 예술작품이라고 얘기했던 것으로부터 50년후 이제 포스트 모더니즘의 시대는 \u0026lsquo;시미라크\u0026rsquo;라 그러니까 원본 없는 복제 전자 복제의 시대에 이르게 된것입니다. 이 \u0026lsquo;시미라 크라\u0026rsquo;를 이름지어 서구 문명이 방황하는 그 조건이 되었다라고 애기 합니다. 그리고 이것을 장프앙스로 리아뜨리같은 사람은 포스트 모던한 조건 이라고 까지 말했읍니다. 그렇다라면 그렇다라면 이 헐리우드 영화가 사이버 펑크들의 비젼이라면 사이버 펑크들에게 메타레러티브도 있겠는가라고 질문 하실 겁니다. 있읍니다. 사이버 펑크들의 메타레러티브는 인간과 기계가 하나가 되어 테크노피아에 세계를 이루는 것입니다. 어디서 많이 듣던 단어죠.\n정은임: 음 광고에서 많이 들었죠.\n정성일: 바로 이광고 속에 철학이 있다고 사이버 펑크들은 굳게 믿는 것 같읍니다. 그래서 이 사이버 펑크들은 자신들의 비젼을 만일 헐리우드 SF영화에서 찾아 났다면 이 사이버 펑크들의 메타 레러티브는 일본의 SF만화 영화와 영국의 헤비메틀 만화에서 찾아 냈읍니다. 그 중에서도 우리나라에는 수입이 금지되어 있지만 홍콩영화의 이름으로 폭풍소년이란 이름으로 계봉 되었고 또 비밀리에 불법 복제본이 나도는 \u0026lsquo;오토모 가츠히로\u0026rsquo;의 아키라라는 만화영화는 이 사이버 펑크들에 모든 것을 갖추고 있는 것으로 알려져 있읍니다. 영화의 배경은 2019년 세계제 3차대전 이후입니다. 네오 도쿄에서 벌어지는 이 영화는 펑크족들이 오토바이들 타고 달리며 바이크를 타고 달리며 그야말로 폭력과 섹스에 깊이 심취에 있는 청년들이 초능력자 아키라가 되기 위해서 벌어지는 이 펑크들의 몽상이 벌어지기 시작합니다. 그런데 펑크들의 몽상이 현실속에서 이루어 지자 그것은 악몽이 됩니다. 이 만화영화는 그 스펙타클한 묘사와 디지틀 사운드의 힘 그리고 화면의 상당 부분을 컴퓨터 그래픽스화 처리한 점에서 만화영화 세계를 진일보 시켰을 뿐 만 아니라 일본 만화에서의 두 가지 성향 그러니까 미야자키 하야호에 만화들 이웃집에 토토로 라든가 또는 하늘나라에서 온 라퓨타같은 만화영화 들과 또 다른 SF만화를 낳는 그 세로운 경향의 최전선에 서게 되었는데 이 만화를 통해서 이 아카라만화를 더 넘어서서 그 원본이 아키라 SF만화와 영국의 이 헤비메틀 만화를 통해서 발견할수 있는겻은 이 사이버 펑크들은 어느정도 일정한 정도 니체의 초인 정신 짜라투스트라와 통하는 것을 볼 수 있읍니다.\n정은임: 신을 부정하고 자신이 신이라고 하는 건가요.\n정성일: 그렇죠 그래서 신과 인간이 동화되는데 그것을 메계시킬 수 있는 것은 컴퓨터라는 것입니다.\n정은임: 인간이 신이 되는 길은 컴퓨터다.\n정성일: 예 그런데 이 사이버 펑크들이 니체를 읽어본적이 없음을 맹세코 얘기할 수 있읍니다. 저는 니체를 정말 진심으로 다시 한번 읽어주길 바랍니다. 니체에 대한 이 짜라투스트라의 생각은 반시대적 고찰입니다. 이 반시대적 고찰은 초인을 통해서 니체가 근심힌 것은 권력에의 의지입니다. 이 권력에의 의지는 독일어를 하시는 분들은 명확하게 이해 하시겠지만 이것은 권력에 관한 권력의 의지가 아니라 그 의지 그자체로서의 권력에 의지 입니다. 니체는 파시즘이 도래하기 이미 한세기 전에 그 파시즘의 경향을 걱정한 것입니다. 즉 아키라의 메타 레러티브에는 이 초인 정신 속에는 오히려 반 니체적인 파시즘의 경향이 숨어 있읍니다. 사이버 펑크는 비디오 게임과 SF만화 영화를 자신의 미학과 철학으로 무장시킨 조류라고 말할수 있는 것입니다. 그래서 테크럴리지로 자신의 무정부주의 이대올로기와 파시즘의 전영병을 퍼트리려는 유행이라고 까지도 말할 수 있읍니다. 그런데 정말 제가 여러분들에게 묻고 싶은 것은 혹시 사이버펑크에 대해서 관심이 있으신 븐들에제 제가 묻고 싶은 것은 이미 이것은 80년대에 모두 끝난 일시적인 소동이었읍니다. 그러니까 이미 일본에서도 유럽에서도 미국에서도 80년대 이미 정리되었고 그리고 이것이 일시적인 컴퓨터 세대를 지칭하는 표현이었으며 이제 컴퓨터가 일반화 되어서 무력화 되고 무장해제된 움직임인데 왜! 왜! 도대체 왜 94년 지금 이 낡은 유행병이 남한의 영화 문화에 번지고 있는 가라는 것이 궁금한 것입니다.\n정은임: 그 쓰레기 문화를 남들이 다 버리고 나서 그것이 뒤 늦게 들어오는 것이 문제 인거 같애요.\n정성일: 아 아주 그 비정하리 만큼 냉정하게 정임임씨께서 지적헤주셨는데요. 제 생각에는 그 이유는 간단하다고 생각합니다. 그것은 사이버 펑크의 사고가 바로 지금 94년 남한의 청년문화의 수준이라는 의미이기도 합니다. 바로 그것이 유행병을 만들어 낸 것입니다. 이것이 지금의 청년 문화보다 더 늦게 온 것이거나 더 앞에 온 것이라면 지금 이렇게 유행 병처럼 전염될 아무런 이유가 없읍니다. 하지만 저는 이것은 정말 걱정할 아무런 이유가 없다고 생각합니다. 저는 저는 이 땅에 청년문화의 힘을 믿읍니다. 여러분들 80년대의 그 사구체(사회구성체) 논쟁과 계급 논쟁들의 한번 생각해 보십시요. 90년대의 포스트 사회논쟁을 거쳐서 이미 일정한 지적 수준과 그 문화에 대한 비판적 정신을 얻고 있는 우리의 청년문화는 바로 이런 것들에 충분히 방어 할만한 자신들의 지적 성찰과 철학을 갇고 있읍니다. 다만 제가 근심하는 것은 이런 새로운 유향을 만들어 내서 좀더 정확하게 새로운 유향을 수입해서 장사를 하려는 야비한 장사꾼 들의 매스컴 상업주의입니다. 그래서 이것을 통해서 이런 문재를 심각하게 생각하지 않는 어린 십대들 그 열살 열한살 열두살 이 나이에 아주 민감만 아주 센스티브한 나이에 이 중학생들 에게 이것은 마치 전염병처럼 전염될수 있는 것입니다. 그래서 저는 만일 진정 영화를 사랑한다면 정말 영화를 사랑하신다면 이프로의 청취자들이 사랑하신다면 이 허깨비 같은 사이버 펑크 영화라는 싸워서 폐기 처분시켜서 이것이 위험하고 낡고 따분한 용어라는 것을 보여 주길 바랍니다. 또는 사이버 펑크를 추종하시는 분들 깨서는 진정으로 사이버펑크라는 장르를 만들어 내고 싶으시다면 외국의 그 헐리우드 영화와 비디오 게임과 만화를 수입해서 이리저러 적당하 모자이크해서 만들어 내지 마시고 자신의 생산물 자신의 텍스트를 만들어셔 남한의 사이버 펑크를 만들어 내시길 저는 진정으로 바랍니다. 외국것을 수입하여 자기 것으로 착각하는 그런 짓은 이제 제발 그만 두기를 바랍니다.\n정은임: 예 오늘 정성일씨 말씀 정말 고맙습니다. 안녕히 가세요.\n정성일:감사합니다.\n","href":"/2006/11/12/73/","title":"사이버 펑크에 대한 대화"},{"content":"이번 주에 수업했던 내용이 들어 있는 사이트를 링크합니다. 참고하세요!\nhttp://di.knu.ac.kr/lect/be/writing/writing.html\n","href":"/2006/11/09/72/","title":"글쓰기 참고 링크"},{"content":"\n","href":"/2006/11/05/71/","title":"인문대 올라가는 길"},{"content":"제 수업을 들으셨던 분들은 아시겠지만, 저는 맥용 노트북인 iBook를 사용합니다. 이 아이북은 2002년에 샀으니 꽤 오래 썼네요! 속도는 600MHz 이고 살 시절에는 파격적인 DVD도 달려 있습니다. 지금도 잘 쓰고 있고, 만족하고 있지만, 제가 수업에서 사용하는 프로그램인 키노트2가 페이지가 전환이 상당히 느리게 되면서 저는 이제는 바꿀 시기되었다고 생각하고 교환을 고려하기 시작했습니다. 2006년 말 쯤에 구입하려고 했지만, 내년에 맥 오에스도 새 버젼인 10.5가 나온다고 하고, 인텔에서 내년 1/4분기에 노트북용 신형 칩셋이 나온다는 말을 듣고 내년 상반기 이후에 노트북을 사기로 결정했습니다.\n그런데 한가지 문제가 있었습니다. 그 노트북이 나올 까지 어떻게 버틸까하는 것이었습니다. 그래서 들고 다니기에 편리한 자그마한 맥미니를 중고로 구하려고 노력했지만, 실패하고 새 걸로 사기로 결정했습니다. 맥미니는 씨디케이스를 포게놓은 크기 정도 되며 어댑터도 있지만, 이것도 작습니다. 그런데 잘 생각해보니 맥미니에게는 키보드가 없는 것이었습니다. 물론 시중에서 파는 키보드는 싸지만, 들고 다녀야 하기 때문에 작은 크기의 키보드, 일명 미니 키보드가 필요하게 되었습니다. 참 맥에는 일반 키보드를 꼽는 일반 키보드 단자가 없어서, USB를 사용하는 키보드를 사야 했습다. 인터넷에서 여러가지 키보드는 살펴보았지만, 마음에 드는 키보드가 없었습니다.\n이때 갑자기 생각난 것이 해피 해킹 키보드 였습니다. 여러사람들의 평도 무척 좋았습니다. 그러나 프로 버젼은 비싸서 라이트로 구매했습니다. 제 책상에서 사온 찍어봤습니다. 책상이 무척 더럽네요 ^^;\n해피 해킹 라이트 키보드 작고, 쓸만했습니다. 가방에 키보드와 미니를 넣고 다니니, 노트북이 부럽지 않습니다. 그러나 생각보다 키감이 그리 좋지 않습니다(주관적인 생각입니다). 특히 Del키와 ~키가 조금 다른 쪽에 있어서 적응이 쉽지 않습니다. 프로는 정말로 키감이 좋더군요. 용산에 가서 직접 사면서 프로 봤는데 정말로 키감이 다르더군요. 그러나 저는 표준 키보드가 좋습니다. 키 배열이 다른 것을 쓰다가, 다시 표준으로 오니 적응이 안되더군요. 이상 키보드 구입기 였습니다.\n","href":"/2006/11/03/62/","title":"Happy Hacking Keyboard Lite 2를 샀습니다."},{"content":"","href":"/tags/keyboard/","title":"Keyboard"},{"content":"제가 참고한 서적들을 소개합니다. 참고하세요!\n70-87쪽, 노야 시게키, 논리 트레이닝, 서혜영 옮김, 일빛, 2002. 도서관 번호:160 N949rKs\n제 2부 논증, 3장 논증과 재구성과 분석, 비판적 사고를 위한 논리, 박은진, 김희정, 아카넷, 도서관 번호:160 B149n 참고: 저는 1판을 가지고 있습니다(112쪽부터). 그런데 이 책 1판은 문제가 좀 있습니다. 답도 틀린 곳도 많고 오타도 좀 있습니다. 내용을 바꾸면 판올림을 해야 하는데 슬쩍 다시 찍었더군요. 그래서 요즘 나온 책에서는 틀린 점들이 대폭 수정되었습니다. 그러니 요즘 나온 책을 찾아서 봐야 합니다.\n43-68쪽, 제1부 추론 제2장 논증 분석과 논증의 다이어그램, 어빙코피, 칼 코헨 지음, 논리학 입문, 10판, 박만준, 박준건, 류시열 옮김, 2001, 초판 2쇄, 경문사, 도서관 번호:160 C783iKb10 참고: 이 책은 조금 문장이 어색한 것이 있지만, 좋은 책입니다. 아쉽게도 연습문제 답이 없네요 ^^;\n","href":"/2006/10/25/67/","title":"논증의 재구성에 대한 참고 서적 소개"},{"content":"\n","href":"/2006/10/11/61/","title":"2003 가을 학생회관"},{"content":"항상 홈페이지를 만들때, 항상 방명록을 어떻게 구현하는가하는게 문제였습니다. 저번에 Movble Type(이하 MT)을 사용할 때에도 이것은 문제였습니다. 그래서 항상 제로보드와 같은 별도의 프로그램을 사용하여 방명록를 만들어 왔습니다. 그런데 제가 디자인과 프로그램 실력이 미천해서, 홈피와 방명록을 같은 디자인으로 만들지 못하겠더군요. 항상 제 홈피는 망명록과 홈피 디자인이 따로 놀게 되었습니다. 어느날 우연히 kukie님의 글을 보니, 쉽게 만들수 있을 것 같은 생각이 들더군요! 물론 이런 생각이 무모했죠 ^^; kukie님의 글을 몇번씩 숙독한 다음, 따라하기 시작했습니다. 그러다가 실패를 거듭해서 포기하고 있었습니다(참고: 피오넬님의 포스트도 참고했습니다!).\n그러다가 오늘 다시 kukie님이 방명록을 만들면서 소개한 Keyvan Minoukadeh님의 WordPress Paged Comments Plugin을 다시 가봤습니다. 자세히 보니, 이 플러그인이 방명록만을 위한 것은 아니더군요! 답변이 많아지면, 페이지를 넘겨주고, 답변의 순서도 바꿔주는 기능을 합니다. 앞의 글을 보시면 설치하는 법이 잘 나와있지만, 제 경험을 바탕으로 다시 정리해보겠습니다. (참고로 저는 WordPress 2.0을 사용하고 있습니다. 마지막에 1.5 사용방법이 나오지만, 제가 몰라서 과감하게 삭제했습니다!)\n파일을 받아서 압축을 풉니다. 설정을 바꾸시려면, paged-comments-config-sample.php 파일을 수정해서 paged-comments-config.php 이라는 이름으로 바꿔 저장합니다. 파일 안에 보시면, 설명이 다 들어 있습니다. 우선 페이지당 나오는 답변의 숫자 설정, 답변의 순서(쓴 시간 순서가 앞쪽으로 혹은 뒷쪽으로) 변경 등등을 변경하실 수 있습니다. 물론 만들어 쓰신 파일이 있으시면, 하실 필요없습니다. paged-comments.php과 앞에서 만드신 paged-comments-config.php, 이 2개의 파일을 plugins folder(wp-content/plugins/)에 올립니다. 앞에서 압축을 풀어 놓은 folder를 보면, 테마별로 comments-paged.php 파일이 있습니다. 지금 쓰시고 게시는 테마가 이중에 있으시면, 그 파일을 테마 폴더(예:wp-content/themes/\u0026ldquo;쓰시는 테마이름\u0026rdquo;/)에 올리세요. 없으시면, ‘default’ folder에 있는 있는 comments-paged.php을 쓰시는 테마 폴더에 올리시면 됩니다. 자신이 쓰시는 테마 폴더(앞에서 comments-paged.php을 올린 곳)에서 template file(일반적으로 single.php and page.php 등등 )들을 수정합니다. 파일을 열어서 \u0026ldquo;comments_template();\u0026rdquo; 이라고 적혀 있는 곳을 지우시고 다음과 같이 적어줍니다. 저도 요기에서 조금 헛갈렸습니다. 프로그램에서 명령어를 바꿔주는 것이더군요. 앞에서 올린 파일을 써서 답변을 만들고, 만약 없으면 있던 것을 쓰자! 뭐 이런 명령어입니다. 파일을 열고 단순히 고치시면 됩니다. 저는 page 기능을 이용해서 방명록에서만 쓰려고 했기 때문에, page.php만 고쳤습니다. if (function_exists('paged_comments_template')) paged_comments_template(); else comments_template(); 마지막으로 admin interface에 가서 앞에서 올린 paged_comments을 활성화(active)시켜주면 됩니다. 물론 WordPress 2.0에만 이 기능이 있습니다. 설치는 다했는데, 마지막으로 Page기능을 이용해 방명록을 만들겠습니다. admin의 write menu에서 적당한 이름의 page(ex. guestbook)를 생성해줍니다. 그런 다음 admin의 Manage menu에서 pages를 선택하면 앞에서 만든 page가 있습니다. 여기서 view를 누르시면, 그 page가 뜹니다. 그리고 edit누르시면 내용이 들어가게 됩니다. 여기에 쓰시고 싶으신 글을 쓰시면 됩니다. 다음은 제 방명록 페이지 링크입니다. http://www.epistemology.pe.kr/guestbook/\n이것을 방명록으로 링크를 걸어서 사용하시면 됩니다.\n","href":"/2006/10/02/11/","title":"페이지 넘어가는 답변 기능을 가진 플러그인을 깔아서 방명록 만들기!"},{"content":"뭐 아시는 분은 다 아시겠지만, 요즘 온라인게임이 유행입니다. 그런데 거기에 쓰이는 음악들이 수준이 대단합니다. 이번에 World of Warcraft라는 온라인 게임이 확장팩을 만들고 있습니다. 거기에 쓰인다는 노래를 들었는데, 정말로 좋더군요! 그래서 이 노래를 홈피에 올리고자, 기억을 더듬어서 다음 링크를 찾아냈습니다. 오래전부터 깔고 싶었던 것인데, 이제서야 손을 대는 군요!\nhttp://www.1pixelout.net/code/audio-player-wordpress-plugin/\n설치 방법은 쉽습니다. 위에 링크에 있습니다만, 잠시 정리하겠습니다.\n우선 파일을 받아서 압축을 푼 다음, plugins 디렉토리(폴더라고도 하죠!)에 업로드합니다. 요기서 조심해야 할 부분이 받으시면, 다음과 같은 위치로 꼭 올리셔야 됩니다. audio-player.php은 plugins 디렉토리에 있어야 되고 audio-player라는 plugins 디렉토리에 올리셔야 됩니다. 저처럼 그냥 풀어서 통채로 plugins 디렉토리에 올려버리면 안됩니다. 소리가 나오지 않게 됩니다. 다음으로 노래를 저장할 디렉토리를 만듭니다. 기본설정은 루트디렉토리로 되어있습니다. 따라서 루트에 audio 디랙토리(폴더라고 하죠!)를 만듭니다. 그리고 나서 WP admin에 가서 이 플러그 인을 활성화(Activate)시킵니다. 그러면 설치는 대락 마무리됩니다.\n","href":"/2006/09/28/56/","title":"블로그에 음악을 달아봅시다."},{"content":"아시는 분들은 아시겠지만, Ned Block 선생님은 심리철학에 많은 관심을 가지셨으며, 특히 기능주의, 인지과학과 의식(consciousness) 문제에 많은 공헌을 하셨습니다. 제가 석사학위 논문을 쓸면서 기능주의(functionalism)를 공부할 때, 이 선생님을 논문을 읽었던 때가 생각납니다. 선생님 홈페이지는 다음과 같습니다. 위키의 Ned Block 선생님 페이지도 살펴보세요.\nhttp://www.nyu.edu/gsas/dept/philo/faculty/block/\n","href":"/2006/08/02/ned-block-%EC%84%A0%EC%83%9D%EB%8B%98-%ED%99%88%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%86%8C%EA%B0%9C/","title":"Ned Block 선생님 홈페이지 소개"},{"content":"","href":"/tags/alinks/","title":"aLinks"},{"content":"Wordpress 에 미리 특정 단어에 대한 인터넷 주소를 지정해 자동으로 링크를 만들어주는 Plugin인, aLinks를 설치했습니다. 이 Plugin의 주소는 다음과 같습니다.\nhttp://www.headzoo.com/alinks\n","href":"/2006/07/06/50/","title":"에드온 설치"},{"content":"우선 만약에 1394로 부팅을 하시려면, 시작하기 전에 연결시켜 놓으시는 편이 좋습니다. 그런 다음 만약 순발력이 있다면, 맥을 켜자마자 option키를 누르면 됩니다. 그러나 저처럼 순발력이 없으시다면, 켜지기 전부터, option키를 누르고, 시작 버튼을 눌러도 됩니다. 그런 다음 시동 디스크 화면 나올 때까지 누르고 있으시면 됩니다. 조금 있으면 화면에 시스템 폴더가 작동하는 디스크, CD, 파티션의 아이콘들이 나옵니다. 물론 자신의 Mac의 설정에 따라 조금씩 다르게 나오겠죠? 이때 시동하시려는 아이콘을 클릭한 다음, 단추를 누릅니다. 그러면 선택한 운영체제로 시동합니다. 간단하죠?\n","href":"/2006/03/09/41/","title":"Option 키로 부팅 디스크 선택하기"},{"content":"저는 Mac을 2000년경부터 OS X부터 사용하고 있습니다. 홈페이지를 관리하려고 하면 FTP 사용이 거의 필수적입니다. 물론 명령어 방식으로 일일히 명령어를 치면서 OS X에 내장된 FTP를 사용할 수도 있지만, 그래도 아이콘을 꼭꼭 누르면서 사용하는 맛도 쏠쏠합니다. 물론 현재 Mac에서의 FTP지존은 panic사에서 만든 transmit일 겁니다. 사용하기 편리하면서도 풍부한 기능, 깔끔한 디자인 등등 어디 하나 버릴 곳이 없습니다. 그러나 안타깝게도 상용입니다. 물론 절실히 필요하면 사서 쓸 수도 있겠지만, 그렇게 FTP를 많이 사용하는 것도 아닌지라 사지 않고 있었습니다. 그렇지만, 가끔 절실하게 필요하게 할 때가 있어서 쓸만한 FTP프로그램을 하나 찾아보았습니다.\n찾아보니 transmit만큼 걸출한 FTP 프로그램인 cyberduck이 있더군요. transmit보다는 제 컴퓨터에서 느리게 작동한다는 것 빼고는 흠 잡을 때가 없는 프로그램입니다. 요즘 특히 홈페이지를 직접 HTML을 만지면서 고치고 있을 때, 진가가 나오고 있습니다. External editors 기능이 있어서 여러 에디터를 cyberduck에 등록시키고 사용할 수 있으며, 수정하고 나서 에디터에서 저장을 하면 바로 cyberduck을 통해서 서버에 저장됩니다. 정말로 좋은 기능입니다.\n이렇게 좋은 프로그램 이지만, transmit에 있는 기능이 하나 없어서 아쉬웠습니다. transmit dashboard widget이 부럽더군요 그런데 cyberduck에도 그 기능이 생겼습니다. 이 기능을 대쉬보드상에서 widget에 파일을 던지면, 바로 설정해두었던 서버로 들어가게 하는 기능입니다. 제가 사용하고 있는 맥에서는 너무 드립니다. 이제 새 맥을 사야될 시기가 온 것 같네요.\n","href":"/2006/03/09/40/","title":"맥에서 FTP 사용하기"},{"content":"하는 일이 특성상 사람들이 말했던 말을 인용하는 경우가 많습니다. 물론 글을 쓸 때에는 인용을 하고 각주 같은 것을 달아서 해결하지만, 웹에서는 어떻게 처리할지 걱정이 많았습니다. 요즘 웹표준(링크는 예스 24입니다)이라는 책을 읽으면서 4장 인용문에서 힌트를 얻었습니다. 그리고 저자 사이트를 참고했습니다. 기본 CSS에 다음과 같은 코드를 넣고 따옴표 이미지 파일을 넣으시면 됩니다. 간단하죠?\nblockquote { margin:0; padding:0 18px; font-size: 88%; line-height: 1.5em; color: #777; padding-left: 23px; background: url(/images/quotemarks.gif) no-repeat 0 3px; } ","href":"/2005/12/21/32/","title":"인용문에 따옴표(“) 넣기"},{"content":"\u0026ldquo;철학이란 무엇일까?, 철학의 두 가지 특징은?\u0026rdquo; 만약 이런 질문이 여러분에게 들이 닥친다면, 여러분은 어떤 생각이 들까요? 좀 황당무계하겠죠? 그런데 제가 이런 질문을 교양 수업으로 철학의 향기를 5주정도 맡아 본 학생들에게 과감하고 무모하게 던져보았습니다! 물론 갑가지 던지면 패닉 상태에 빠질까봐 미리 문제를 귓뜸했죠. 그런 다음 그들의 고민의 자국을 한번 살펴보았습니다. 물론 문제를 어렵습니다. 그래서 좋은 답은 많지 않았습니다. 심지어 철학의 두 가지 특징은 동양 철학, 서양 철학이라고 쓴 학생도 있었습니다.\n물론 제가 엄청난 고수의 실력을 보기 위하여 이런 질문을 던지지는 않았습니다. 그러나 학생들의 답변 중에는 야심만만한 글들이 있었습니다. 제가 생각하기에도 대단하다는 답변들이 있었습니다. 그런 답변들 중 날카롭고 재미있는 답을 2편 골라봤습니다. 참! 마지막에 추가로 철학에 대하여 꽤 날카롭고 비판적으로 쓴 문장을 덤으로 넣었습니다. 재미있게 읽어보세요!\n답안 1 솔직히 말해, 별별 쓰잘데기 없는 것들까지도 \u0026lsquo;철학\u0026rsquo;이라는 이름 아래 고민하고 또 고민하지 않는가! 의문을 품지 않아도 살아가는데 지장이 없을 것만 같은데도 하는 철학을 보면 \u0026lsquo;쓰레기\u0026rsquo; 같다는 생각도 든다. 만들려고 작정하면 한없이 만들어지는 쓰레기처럼 말이다.\n반면에 철학은 \u0026ldquo;쓰레기통\u0026quot;이다. 만약 세상에 쓰레기통이 없다면, 정말 어마어마한 상태에 빠지게 될 것이다. 온통 쓰레기로 넘쳐나 살아갈 수 없을 것이라는 게 그 한 예가 될 수 있을 것이다. 철학이라는 쓰레기통이 없다면 세상은 온 갓 별별 지식이나 원리들의 사실로 가득 차게 될지도 모른다. 의문과 해답을 찾는 일련의 방법을 반복함으로써 주위에 가득 찬 것들을 정리하고 치워나갈 수 있는 것 바로 이것이 쓰레기통인 철학이다. - 영어과 백미영 -\n답안 2 철학은 변비이다. 나오지 않는다. 좀처럼 답이 나오지 않는다는 말이다. 답은 없다. 변비에 걸린 사람에게서 시원한 똥을 기대하는 것과 비슷하다. 정말 이 사람이 시원한 똥을 누었을 때와 같은 쾌감을 우리는 철학에서 우리가 원하는 받을 찾았을 때의 쾌락과 비교해 볼 수 있다.\n평생 변비를 고치지 못하는 사람을 보았다. 죽을 때까지 답을 찾지 못한 사람도 있다. 이렇듯 영원히 답을 찾지 못하는 사람이 있는가 하면 또 시원하게 변비를 고치는 사람, 조금씩 나아가는 사람이 있듯이 철학에서도 시원하게 답을 찾는 사람 그리고 조금씩 공부해 가면서 자신의 답을 형성해가는 사람이 있다. 변비에 걸리면 당장은 우리는 약을 먹는다. ‘철학이 뭐지?’ 보통 사람들이 이런 생각이 들 때. 변비에 걸린 사람이 약을 찾듯이 그들은 옛 철학자들의 기록, 아마도 그것을 약처럼 먹을 것이다. 사람들이 약을 먹음으로써 변비가 완전히 고쳐지는 것이 아닌 것처럼, 이 철학의 약을 먹는다고 해서 시원한 답을 얻을 수는 없을 것이다.\n변비를 고치기 위해서 사람들은 무던히도 노력을 한다. 정말 당신이 천재가 아닌 이상은 꾸준히 약을 먹고 그리고 당신의 생각을 치료해야 만이 무언가 결과를 얻을 것이다. 노력하는 사람만이 변비를 고친다. 노력하는 사람만이 철학을 얻는다. 당신이 천재라도 말이다. 천재도 노력했다고 말해니까..\n두 번째 철학은 이미 영화가 시작되고 있는 극장 속이다. 이미 영화가 시작된 극장 속은 무지 어둡다. 만약 우리가 시간을 놓쳐 늦게 들어갈 경우라면 우리는 계단에 붙어있는 희미한 불을 따라 자리를 찾아 들어가야 한다. 가끔 우리는 자신의 자리를 찾지 못하면 아무 자리에나 빈 자리에 앉게 될 때도 있다. 철학.. 어둡다. 나는 철학하면 밝은 생각이 들지 않는다. 솔직히 어두운 극장 속에 앉아서 한곳 스크린을 바라보고 있는 사람처럼 우리는 진리라는 스크린을 바라보고 있으니 말이다. 가끔은 누군가와 함께 영화를 보면서 그 재미를 한껏 더하기도 한다. 나도 중학교 때 도덕책 속의 철학의 한 부분을 공부하면서 칸트와 철학의 재미를 함께 느꼈으니까. 하지만 가끔 진리를 찾지 못하면 그냥 마음속의 빈 곳에 앉아 버리곤 한다. 잠시 쉬면서 우리는 다시 자리를 찾아갈 준비를 하는 것이다. 우리의 마음의 눈은 진리라는 스크린에 고정시킨 채. 어떤 때는 졸수도 있다. 지겹다. 이미 영화가 시작되었는데, 아, 지겹다. 때는 늦었다. 이와 돈 내고 들어온 김에 어쩔 수 없이 앉아 있는다. 하지만 지겨운 영화라도 결말은 있다. 결말과 느낌은 가지고 나가는 법이다. 철학도 그렇다. 솔직히 지겹다. 하지만 일단 앉아서 사고하게 된다면 당신은 결말과 느낌을 가지고 나갈 수 있을 것이다. 당신만의 느낌과 당신만의 결말을.. - 영어과 백미영\n답안 3 철학 역시 비판과 토론과 같은 방법으로 꼬투리를 잡아 좀더 괜찮은 것에 대한 갈망으로 사고를 펼쳐 나간다. - 정보통신공학과 김형석\n","href":"/2005/12/21/30/","title":"본인이 생각한 철학의 두 가지 특징은?"},{"content":"다음 순수 이성 비판의 온라인판은 노먼 켐프 스미스(Norman Kemp Smith translation)의 1929년 번역에 바탕을 하고 있으며, 다음과 같은 8개의 부분으로 되어 있습니다.\nI. Prefaces and Introduction (pp.4-62) II. Aesthetic (pp.63-91) III. Analytic of Concepts (pp.92-175) IV. Analytic of Principles (pp.176-296) V. Dialectic: Paralogisms (pp.297-383) VI. Dialectic: Antinomies (pp.384-484) VII. Dialectic: Ideal (pp.485-570) VIII. Doctrine of Method (pp.571-668) 이 책의 e-text 판본은 원래 1985년에 옥스포스 문서저장고(Oxford Text Archive)에 있던 것을 Stephen Palmquist이 가져왔습니다.\n중요한 저작권 주의\nNorman Kemp-Smith\u0026rsquo;s translation of Kant\u0026rsquo;s CRITIQUE OF PURE REASON is copyright material in most countries of the world. The electronic rights in the title worldwide are controlled by Palgrave Macmillan on behalf of the Kemp Smith\u0026rsquo;s estate. Palgrave Macmillan are allowing us to keep the electronic version of this old version of the text available on this site only to benefit scholarship.\nA revised edition of Immanuel Kant\u0026rsquo;s Critique of Pure Reason translated by Norman Kemp Smith and with a new preface by Howard Caygill has recently been published by Palgrave Macmillan. It is available in hardback, ISBN 1-4039-1194-0, priced £52.50/$79.95 and in paperback, ISBN 1-4039-1195-9, priced £18.99/$22.95 . To find out more about this title please click here.\nAlso recently re-issued by Palgrave Macmillan is A Commentary to Kant\u0026rsquo;s Critique of Pure Reason by Norman Kemp Smith with a new Introduction by Sebastian Gardner. It is available in paperback, ISBN 1-4039-1504-0, priced £25.00/$39.95. To find out more about this title, please click here.\n이 자료는 Steve Palmquist님의 홈페이지에서 가져왔습니다. 출처는 다음과 같습니다. http://www.hkbu.edu.hk/~ppp/cpr/toc.html\n","href":"/2005/12/04/20/","title":"Critique of Pure Reason(e-text version)"},{"content":"","href":"/tags/movabletype/","title":"movabletype"},{"content":"관리자 암호로 쓰는 것을 별로 좋아하지 않습니다. 옛날에 리눅스를 혼자 깔아서 쓰던 때에 배운 것인지 몰라도 항상 다른 아이디를 만들어서 사용합니다. 맥을 쓰고 있는데, 지금의 맥 OS는 유닉스의 변종(?)이죠. 그래서 인지 몰라도 설치할때, 관리자 아이디랑 사용자 아이디를 구별합니다. 그래서 프로그램을 깔 경우에는 관리자 비번을 묻습니다. 하여간 관리자 아이디로 블로그를 쓰는 것은 관리상 좋지 않습니다!\n그런데 (이하 WP)의 장점이 여러명이서 한 블로그를 사용할 수 있다는 점입니다. 그러나 만약 여러개의 불로그를 만드는 경우에는 아마도 어러번 WP를 깔아주어야 될 듯 같네요. 아니면 Page기능을 사용해서 만들 수도 있을 것 같기는 한데\u0026hellip; 글이 옆길로 샜는데, WP는 여러명이 쓸 수 있습니다. 그래서 유저를 하나 만들어 봤는데, 이 아이디로는 글을 못쓰는 것이었습니다. 그래서 인터넷을 찾아보니, 다음 링트가 있더군요!\nhttp://codex.wordpress.org/User_Levels\n잘 읽어보니, 0 레벨로는 아무것도 할 것이 없고, 쓸만하게 만들려면, 한2 레벨 이상이어야 되는 것 같고, 관리자 분위기를 내려면, 3 레벨은 되어야 될 듯 싶습니다.\n","href":"/2005/08/16/12/","title":"유저(user)의 레벨(Level) 관리"},{"content":"새 학기를 맞아서, 새로운 기분으로 홈페이지를 개편합니다. 저번에 쓰던 Movble type이 3.0대로 넘어가면서, 유료화 되고 시스템이 제가 유지하기에는 너무 방대하게 변하여, 과감히 WordPress로 개편했습니다.\n많은 것을 설치하지 않고, 이 한가지로만 만들려고 하지만, 아직까지 실력이 미천하여, 제로보드는 사용해야 될 것 같습니다. (참고:2005년 12월 23일 현재 저는 제로보드를 사용하고 있지 않습니다. 맥 노트북을 쓰는 저로써는 노트북에서 제로보드를 제대로 사용할 수 없기 때문에 게시판 프로그램을 바꿨습니다. GR보드를 쓰는데 이 게시판은 깔끔하며, 어떤 웹브라우져에서도 사용하실 수 있습니다) 수업게시판 같은 것을 사용하고자 할 경우에는 Blog 프로그램을 사용하는 것보다는 게시판용 프로그램을 쓰는 편이 좋을 것 같습니다. 지금 쓰고 있는, phpBB도 없애는 방향으로 가고자 합니다. 뭐든지 많아지면, 관리하기 어렵기 때문에, 이것도 궁극적으로 삭제하는 방향으로 가고자 합니다. 물론 아주 좋은 프로그램이지만, 개인 홈페이지를 유지하는데는 별 필요가 없다는 생각이 듭니다.\n","href":"/2005/08/14/5/","title":"시작합니다."},{"content":"제가 워낙 PT를 좋아하다 보니, 무선으로 PT 화면을 넘길 포인터가 필요하더군요. 사용해 보신 분들은 아시겠지만, 뭐 특별한 기능보다는 항상 정확하게 반응하는 제품이 더 믿음이 가더군요. 가격도 천차만별인데 무단한 것을 하나 골라서 사용중입니다. 다음 링크를 참고하세요. 참! 제가 맥을 쓰는데 이 제품 맥에서도 잘 돌아갑니다.\n무선 프리젠터 XPM200TR\n","href":"/2005/01/06/43/","title":"제가 쓰고 있는 PT용 포인터 X-Pointer II"},{"content":"","href":"/search/","title":"Search"},{"content":"","href":"/series/","title":"Series"},{"content":"","href":"/categories/xhtml-css-etc../","title":"XHTML, CSS, etc.."}]
