<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Epistemology</title>
    <link>https://dialektike.github.io/categories/programming/</link>
    <description>Recent content in Programming on Epistemology</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 11 Feb 2022 18:26:05 +0900</lastBuildDate><atom:link href="https://dialektike.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>러스트(Rust)에서 한글 문자열 글자수 세기</title>
      <link>https://dialektike.github.io/2022/02/11/1405/</link>
      <pubDate>Fri, 11 Feb 2022 18:26:05 +0900</pubDate>
      
      <guid>https://dialektike.github.io/2022/02/11/1405/</guid>
      <description>러스트(Rust)에서 한글 문자열을 세기 위해서 단순하게 아래와 같이 len()을 사용하면 제대로 세지를 못한다. chars().count()을 이용해서 정확하게 셀 수 있다. 아래 코드를 실행하면, 정확하게 알 수 있다.
fn main() { let temp = &amp;#34;안녕하세요!&amp;#34;; println!(&amp;#34;temp.chars().count()로 센 글자수:{}&amp;#34;, temp.chars().count()); println!(&amp;#34;temp.len() 센 글자수:{}&amp;#34;, temp.len()); } </description>
    </item>
    
    <item>
      <title>러스트에서 `String`을 이용할 때, 생기는 유니코드 문제점</title>
      <link>https://dialektike.github.io/2021/09/10/1392/</link>
      <pubDate>Fri, 10 Sep 2021 17:04:06 +0900</pubDate>
      
      <guid>https://dialektike.github.io/2021/09/10/1392/</guid>
      <description>러스트에서 문자열을 다루는 방법은 String을 이용하는 것입니다. 그런데 이것을 이용하더라도 유니코드를 사용하는 경우 인텍싱이 다른 언어와 같이 명확하게 처리되지 않습니다. 다음 코드를 살펴봅시다.
fn main() { let s1 = String::from(&amp;#34;hello world!&amp;#34;); let hello = &amp;amp;s1[0..5]; let world = &amp;amp;s1[6..11]; println!(&amp;#34;{}, {}&amp;#34;, hello, world); let s1 = String::from(&amp;#34;안녕 세계!&amp;#34;); let hello = &amp;amp;s1[0..6]; let world = &amp;amp;s1[7..13]; println!(&amp;#34;{}, {}&amp;#34;, hello, world); let s1 = String::from(&amp;#34;こんにちは世界!&amp;#34;); let hello = &amp;amp;s1[0..15]; let world = &amp;amp;s1[15.</description>
    </item>
    
    <item>
      <title>엔서블에서 `apt` 이용할 때 나오는 오류 처리법</title>
      <link>https://dialektike.github.io/2021/03/18/1378/</link>
      <pubDate>Thu, 18 Mar 2021 17:48:04 +0900</pubDate>
      
      <guid>https://dialektike.github.io/2021/03/18/1378/</guid>
      <description>apt을 이용해 업그레이드할 때 통상적으로 다음과 같이 하는 경우가 많습니다.
tasks: - name: Update and upgrade apt packages become: true apt: upgrade: yes update_cache: yes cache_valid_time: 86400 #One day 이런 경우 다음과 같은 경고가 뜰 수 있죠.
TASK [Update and upgrade apt packages] ************************************************************************************************************************ [WARNING]: The value &amp;#34;True&amp;#34; (type bool) was converted to &amp;#34;&amp;#39;True&amp;#39;&amp;#34; (type string). If this does not look like what you expect, quote the entire value to ensure it does not change.</description>
    </item>
    
    <item>
      <title>파이썬으로 Docker로 구성한 MariaDB 사용하기</title>
      <link>https://dialektike.github.io/2020/10/23/%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9C%BC%EB%A1%9C-docker%EB%A1%9C-%EA%B5%AC%EC%84%B1%ED%95%9C-mariadb-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Fri, 23 Oct 2020 16:49:30 +0900</pubDate>
      
      <guid>https://dialektike.github.io/2020/10/23/%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9C%BC%EB%A1%9C-docker%EB%A1%9C-%EA%B5%AC%EC%84%B1%ED%95%9C-mariadb-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>도커를 이용하여 MariaDB(이하 마리아디비)를 설치해봤습니다. 이렇게 설치한 마리아디비에 파이썬으로 이용하여 자료를 저장하고 저장한 값을 확인하고 지워보겠습니다. 우선 파이썬으로 마리아디비와 같은 실제 DB(이하 데이터베이스)에 접근하기 위해서는 해당 데이터베이스에 맞는 드라이버(또는 클라이언트 라이브러리(client library)라고 하기도 합니다)를 설치해줘야 합니다. 이 글에서는PyMySQL을 사용하겠습니다. 설치 방법은 Installation을 참고하세요. 현재 사용하고 있는 PyMySQL의 버전은 0.10.1입니다.
본격적으로 시작하기에 앞서 참고로 여기에서는 이미 Docker로 MariaDB를 설치했다고 가정할 것입니다. 설치하는 방법은 다음 링크를 참고하세요. Docker를 사용해서 MariaDB을 설치하기 그리고 이미 다음과 같은 sql명령을 사용하여 gregs_list이라는 DATABASE를 만들고, 그 안에 my_contacts라는 테이블을 만들고 두 사람의 자료를 입력했습니다.</description>
    </item>
    
    <item>
      <title>Array 에서 행을 잡는 방법</title>
      <link>https://dialektike.github.io/2020/01/16/1271/</link>
      <pubDate>Thu, 16 Jan 2020 15:04:48 +0900</pubDate>
      
      <guid>https://dialektike.github.io/2020/01/16/1271/</guid>
      <description>줄리아에서 아래와 같은 array를 가지고 for 문을 돌려 열을 선택하고 싶은 경우가 있다.
M = [1 2 3; 4 5 6; 7 8 9] 실행 결과:
3×3 Array{Int64,2}: 1 2 3 4 5 6 7 8 9 그러나 아쉽게도 다음과 같이 셀을 하나씩 잡아서 준다.
for i in (M) println(i) end 실행 결과:
1 4 7 2 5 8 3 6 9 이때 필요한 eachrow()함수이다. 이를 이용해서 for 문을 돌리면 아주 깔금하게 작동합니다.</description>
    </item>
    
    <item>
      <title>맥에서 julia를 쉽게 설치하는 법</title>
      <link>https://dialektike.github.io/2019/12/16/1250/</link>
      <pubDate>Mon, 16 Dec 2019 16:10:16 +0900</pubDate>
      
      <guid>https://dialektike.github.io/2019/12/16/1250/</guid>
      <description>당연히 homebrew를 사용하는 것입니다.
brew cask install julia 다음 링크를 참고하세요
Platform Specific Instructions for Official Binaries </description>
    </item>
    
  </channel>
</rss>
